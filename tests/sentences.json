{
  "sentences": [
    {
      "id": 1,
      "text": "1 January 2010 at 07:59 Заметки об NLP (часть 2) Artificial Intelligence Natural Language Processing.",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 35
        },
        {
          "class": "Science",
          "value": "Artificial Intelligence",
          "start_pos": 49
        },
        {
          "class": "Science",
          "value": "Natural Language Processing",
          "start_pos": 73
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "Natural Language Processing",
            "start_pos": 73
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 35
          }
        }
      ]
    },
    {
      "id": 2,
      "text": "Заметки об NLP (Natural Language Processing).",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 11
        },
        {
          "class": "Science",
          "value": "Natural Language Processing",
          "start_pos": 16
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "Natural Language Processing",
            "start_pos": 16
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 11
          }
        }
      ]
    },
    {
      "id": 3,
      "text": "Хотя в первой части я и говорил, что не собираюсь останавливаться на морфологии, видимо, совсем без неё не получится",
      "terms": [
        {
          "class": "Science",
          "value": "морфологии",
          "start_pos": 69
        }
      ],
      "relations": []
    },
    {
      "id": 4,
      "text": "Всё-таки обработка предложений сильно завязана на предшествующий морфологический анализ.",
      "terms": [
        {
          "class": "Task",
          "value": "обработка предложений",
          "start_pos": 9
        },
        {
          "class": "Method",
          "value": "морфологический анализ",
          "start_pos": 65
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "морфологический анализ",
            "start_pos": 65
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "обработка предложений",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 5,
      "text": "Наш с вами родной русский язык очень хорош (для нас) и труден (для иностранцев) богатой фонетикой и разнообразием грамматических средств.",
      "terms": [
        {
          "class": "Lang",
          "value": "русский язык",
          "start_pos": 18
        },
        {
          "class": "Science",
          "value": "фонетикой",
          "start_pos": 88
        },
        {
          "class": "Object",
          "value": "грамматических средств",
          "start_pos": 114
        }
      ],
      "relations": []
    },
    {
      "id": 6,
      "text": "Во-первых, в них не так много незнакомых нам фонем.",
      "terms": [
        {
          "class": "Object",
          "value": "фонем",
          "start_pos": 45
        }
      ],
      "relations": []
    },
    {
      "id": 7,
      "text": "Во-вторых, обилие грамматических явлений редко сталкивает нас с чем-либо непонятным.",
      "terms": [
        {
          "class": "Object",
          "value": "грамматических явлений",
          "start_pos": 18
        }
      ],
      "relations": []
    },
    {
      "id": 8,
      "text": "А для американца, например, само понятие рода или падежа совершенно неочевидно.",
      "terms": [
        {
          "class": "Object",
          "value": "рода",
          "start_pos": 41
        },
        {
          "class": "Object",
          "value": "падежа",
          "start_pos": 50
        }
      ],
      "relations": []
    },
    {
      "id": 9,
      "text": "Теперь о морфологии.",
      "terms": [
        {
          "class": "Science",
          "value": "морфологии",
          "start_pos": 9
        }
      ],
      "relations": []
    },
    {
      "id": 10,
      "text": "Автоматические морфологические анализаторы работают хорошо.",
      "terms": [
        {
          "class": "Object",
          "value": "Автоматические морфологические анализаторы",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 11,
      "text": "Если кому интересно посмотреть, как работает автоматический анализатор — можно поэкспериментировать на сайте С.А. Старостина.",
      "terms": [
        {
          "class": "Application",
          "value": "автоматический анализатор",
          "start_pos": 45
        },
        {
          "class": "InfoResource",
          "value": "сайте",
          "start_pos": 103
        },
        {
          "class": "Person",
          "value": "С.А. Старостина",
          "start_pos": 109
        }
      ],
      "relations": []
    },
    {
      "id": 12,
      "text": "Смею предположить, что едва ли не все морфологические анализаторы русского так или иначе опираются на Грамматический словарь Зализняка.",
      "terms": [
        {
          "class": "Application",
          "value": "морфологические анализаторы",
          "start_pos": 38
        },
        {
          "class": "InfoResource",
          "value": "Грамматический словарь Зализняка",
          "start_pos": 102
        }
      ],
      "relations": []
    },
    {
      "id": 13,
      "text": "Сам я пользуюсь разработками Алексея Сокирко, «обёрнутыми» в удобный интерфейс на сайте Lemmatizer.",
      "terms": [
        {
          "class": "Person",
          "value": "Алексея Сокирко",
          "start_pos": 29
        },
        {
          "class": "InfoResource",
          "value": "Lemmatizer",
          "start_pos": 88
        }
      ],
      "relations": []
    },
    {
      "id": 14,
      "text": "Судите сами: упомянутый русский морфологический анализатор Алексея Сокирко оперирует базой данных в 18,5 мегабайт.",
      "terms": [
        {
          "class": "Application",
          "value": "русский морфологический анализатор Алексея Сокирко",
          "start_pos": 24
        },
        {
          "class": "InfoResource",
          "value": "базой данных",
          "start_pos": 85
        }
      ],
      "relations": []
    },
    {
      "id": 15,
      "text": "На Грамоте предлагают относить их к «предикативам», но общепринятого подхода нет.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Грамоте",
          "start_pos": 3
        }
      ],
      "relations": []
    },
    {
      "id": 16,
      "text": "Например, ещё одна «фича» анализатора Сокирко: он называет глаголы в личной форме («бегаю») глаголами, а в начальной форме («бегать») — инфинитивами.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "анализатора Сокирко",
          "start_pos": 26
        }
      ],
      "relations": []
    },
    {
      "id": 17,
      "text": "Tags: NLP, обработка текстовб, компьютерная лингвистика.",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 6
        },
        {
          "class": "Task",
          "value": "обработка текстов",
          "start_pos": 11
        },
        {
          "class": "Science",
          "value": "компьютерная лингвистика",
          "start_pos": 31
        }
      ],
      "relations": []
    },
    {
      "id": 18,
      "text": "Туториал по фреймворку для программирования датасетов MTS AI corporate blog.",
      "terms": [
        {
          "class": "Science",
          "value": "программирования",
          "start_pos": 27
        },
        {
          "class": "Organization",
          "value": "MTS AI",
          "start_pos": 54
        },
        {
          "class": "InfoResource",
          "value": "corporate blog",
          "start_pos": 61
        }
      ],
      "relations": []
    },
    {
      "id": 19,
      "text": "Я Игорь Буянов, старший разработчик группы разметки данных MTS AI.",
      "terms": [
        {
          "class": "Person",
          "value": "Игорь Буянов",
          "start_pos": 2
        },
        {
          "class": "Method",
          "value": "разметки",
          "start_pos": 43
        },
        {
          "class": "Organization",
          "value": "MTS AI",
          "start_pos": 59
        }
      ],
      "relations": []
    },
    {
      "id": 20,
      "text": "Недавно рассказывал о том, как делать иерархически датасет из Википедии.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Википедии",
          "start_pos": 62
        }
      ],
      "relations": []
    },
    {
      "id": 21,
      "text": "В этом посте хочу рассказать вам о Сноркеле - фреймворке для программирования данных (data programming).",
      "terms": [
        {
          "class": "Application",
          "value": "Сноркеле",
          "start_pos": 35
        },
        {
          "class": "Environment",
          "value": "фреймворке для программирования данных",
          "start_pos": 46
        },
        {
          "class": "Task",
          "value": "data programming",
          "start_pos": 86
        }
      ],
      "relations": []
    },
    {
      "id": 22,
      "text": "Проект стартовал в Стэнфорде как инструмент для помощи в разметке датасетов для задачи information extraction, а сейчас разработчики делают платформу для пользования внешними заказчиками.",
      "terms": [
        {
          "class": "Activity",
          "value": "Проект",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Стэнфорде",
          "start_pos": 19
        },
        {
          "class": "Object",
          "value": "инструмент",
          "start_pos": 33
        },
        {
          "class": "Task",
          "value": "разметке датасетов",
          "start_pos": 57
        },
        {
          "class": "Task",
          "value": "information extraction",
          "start_pos": 87
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "Проект",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Стэнфорде",
            "start_pos": 19
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "инструмент",
            "start_pos": 33
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "разметке датасетов",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "инструмент",
            "start_pos": 33
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "information extraction",
            "start_pos": 87
          }
        }
      ]
    },
    {
      "id": 23,
      "text": "В разметочные функции (labeling functions) закодированы все возможные правила, по которым можно поставить какую-либо метку каждому примеру из набора данных.",
      "terms": [
        {
          "class": "Method",
          "value": "разметочные функции",
          "start_pos": 2
        },
        {
          "class": "Method",
          "value": "labeling functions",
          "start_pos": 23
        },
        {
          "class": "Method",
          "value": "правила",
          "start_pos": 70
        },
        {
          "class": "Dataset",
          "value": "набора данных",
          "start_pos": 142
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "разметочные функции",
            "start_pos": 2
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "правила",
            "start_pos": 70
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "labeling functions",
            "start_pos": 23
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "правила",
            "start_pos": 70
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "labeling functions",
            "start_pos": 23
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "разметочные функции",
            "start_pos": 2
          }
        }
      ]
    },
    {
      "id": 24,
      "text": "В качестве основы для таких функций используются:внешние базы данных, такие как WordNet или WikiBase.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "базы данных",
          "start_pos": 57
        },
        {
          "class": "InfoResource",
          "value": "WordNet",
          "start_pos": 80
        },
        {
          "class": "InfoResource",
          "value": "WikiBase",
          "start_pos": 92
        }
      ],
      "relations": []
    },
    {
      "id": 25,
      "text": "Генеративная модель, являющаяся сердцем Сноркеля, попытается учесть недостатки отдельных функций.",
      "terms": [
        {
          "class": "Model",
          "value": "Генеративная модель",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "Сноркеля",
          "start_pos": 40
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Генеративная модель",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Сноркеля",
            "start_pos": 40
          }
        }
      ]
    },
    {
      "id": 26,
      "text": "Для наглядности оставляю здесь иллюстрацию с последовательностью работы со Снокрелем для задачи information extraction из оригинальной статьи.",
      "terms": [
        {
          "class": "Application",
          "value": "Снокрелем",
          "start_pos": 75
        },
        {
          "class": "Task",
          "value": "information extraction",
          "start_pos": 96
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Снокрелем",
            "start_pos": 75
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "information extraction",
            "start_pos": 96
          }
        }
      ]
    },
    {
      "id": 27,
      "text": "Авторы оригинальной статьи представляют ее как факторный граф, или графическую вероятностную модель.",
      "terms": [
        {
          "class": "Object",
          "value": "факторный граф",
          "start_pos": 47
        },
        {
          "class": "Model",
          "value": "графическую вероятностную модель",
          "start_pos": 67
        }
      ],
      "relations": []
    },
    {
      "id": 28,
      "text": "Тогда модель определяется так, чтобы обучить эту модель без доступа к истинным меткам, это нужно обучаться с помощью логарифмического негативного маргинализированного правдоподобия, зная матрицу.",
      "terms": [
        {
          "class": "Method",
          "value": "логарифмического негативного маргинализированного правдоподобия",
          "start_pos": 117
        },
        {
          "class": "Object",
          "value": "матрицу",
          "start_pos": 187
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "логарифмического негативного маргинализированного правдоподобия",
            "start_pos": 117
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "матрицу",
            "start_pos": 187
          }
        }
      ]
    },
    {
      "id": 29,
      "text": "Оптимизацию авторы проводили с помощью SGD с семплированием Гиббса.",
      "terms": [
        {
          "class": "Activity",
          "value": "Оптимизацию",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "SGD",
          "start_pos": 39
        },
        {
          "class": "Method",
          "value": "семплированием Гиббса",
          "start_pos": 45
        }
      ],
      "relations": []
    },
    {
      "id": 30,
      "text": "Загрузим заранее обученную модель fastText, чей выбор объясняется наличием огромного количества опечаток в текстах.",
      "terms": [
        {
          "class": "Model",
          "value": "fastText",
          "start_pos": 34
        },
        {
          "class": "Object",
          "value": "текстах",
          "start_pos": 107
        }
      ],
      "relations": []
    },
    {
      "id": 31,
      "text": "Таким образом мы получили опорный вектор для класса \"диарея\".",
      "terms": [
        {
          "class": "Object",
          "value": "опорный вектор",
          "start_pos": 26
        }
      ],
      "relations": []
    },
    {
      "id": 32,
      "text": "Зайдя на несколько из них я увидел что большая половина типа Wix используют технологию Искусственного Интеллекта, чтобы создать шаблон разметки страницы и далее её уже заполнить.",
      "terms": [
        {
          "class": "Organization",
          "value": "Wix",
          "start_pos": 61
        },
        {
          "class": "Application",
          "value": "технологию Искусственного Интеллекта",
          "start_pos": 76
        },
        {
          "class": "Task",
          "value": "создать шаблон разметки страницы",
          "start_pos": 120
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "технологию Искусственного Интеллекта",
            "start_pos": 76
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создать шаблон разметки страницы",
            "start_pos": 120
          }
        }
      ]
    },
    {
      "id": 33,
      "text": "В финале я могу его редактировать путем Drag & Drop.",
      "terms": [
        {
          "class": "Method",
          "value": "Drag & Drop",
          "start_pos": 40
        }
      ],
      "relations": []
    },
    {
      "id": 34,
      "text": "Некоторое время назад к нам обратился заказчик с не совсем обычной задачей — воспроизвести сервис IBM Watson Personality Insights, который анализировал текст, написанный человеком и определял по нему ряд личностных характеристик.",
      "terms": [
        {
          "class": "Application",
          "value": "IBM Watson Personality Insights",
          "start_pos": 98
        },
        {
          "class": "Task",
          "value": "анализировал текст",
          "start_pos": 139
        },
        {
          "class": "Object",
          "value": "личностных характеристик",
          "start_pos": 204
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "IBM Watson Personality Insights",
            "start_pos": 98
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "личностных характеристик",
            "start_pos": 204
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "IBM Watson Personality Insights",
            "start_pos": 98
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализировал текст",
            "start_pos": 139
          }
        }
      ]
    },
    {
      "id": 35,
      "text": "Основная идея данного сервиса состояла в том, что он получает на вход текст написанный определенным человеком и определяет по этому тексту четыре группы характеристик личности.",
      "terms": [
        {
          "class": "Task",
          "value": "определяет",
          "start_pos": 112
        },
        {
          "class": "Object",
          "value": "тексту",
          "start_pos": 132
        },
        {
          "class": "Object",
          "value": "группы характеристик личности",
          "start_pos": 146
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "тексту",
            "start_pos": 132
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "определяет",
            "start_pos": 112
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "группы характеристик личности",
            "start_pos": 146
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "определяет",
            "start_pos": 112
          }
        }
      ]
    },
    {
      "id": 36,
      "text": "Например, Personality Insights использовался в психотерапии для оценки состояния пациентов [5], в искусстве (оценка личности персонажей пьес Шекспира) [6], определении спама [7] а также в научных исследованиях.",
      "terms": [
        {
          "class": "Application",
          "value": "Personality Insights",
          "start_pos": 10
        },
        {
          "class": "Science",
          "value": "психотерапии",
          "start_pos": 47
        },
        {
          "class": "Task",
          "value": "оценки состояния пациентов",
          "start_pos": 64
        },
        {
          "class": "Science",
          "value": "искусстве",
          "start_pos": 98
        },
        {
          "class": "Task",
          "value": "оценка личности персонажей пьес Шекспира",
          "start_pos": 109
        },
        {
          "class": "Task",
          "value": "определении спама",
          "start_pos": 156
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "оценка личности персонажей пьес Шекспира",
            "start_pos": 109
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "искусстве",
            "start_pos": 98
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "оценки состояния пациентов",
            "start_pos": 64
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "психотерапии",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "определении спама",
            "start_pos": 156
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "оценка личности персонажей пьес Шекспира",
            "start_pos": 109
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 10
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "искусстве",
            "start_pos": 98
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "оценки состояния пациентов",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 10
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "психотерапии",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 37,
      "text": "Personality Insights был применен в психотерапии для оценки состояния пациентов, в искусстве (анализ личности персонажей пьес Шекспира), выявлении спама, а также в научных исследованиях.",
      "terms": [
        {
          "class": "Application",
          "value": "Personality Insights",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "психотерапии",
          "start_pos": 36
        },
        {
          "class": "Task",
          "value": "оценки состояния пациентов",
          "start_pos": 53
        },
        {
          "class": "Science",
          "value": "искусстве",
          "start_pos": 83
        },
        {
          "class": "Task",
          "value": "анализ личности персонажей пьес Шекспира",
          "start_pos": 94
        },
        {
          "class": "Task",
          "value": "выявлении спама",
          "start_pos": 137
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "анализ личности персонажей пьес Шекспира",
            "start_pos": 94
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "искусстве",
            "start_pos": 83
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "оценки состояния пациентов",
            "start_pos": 53
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "психотерапии",
            "start_pos": 36
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "выявлении спама",
            "start_pos": 137
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализ личности персонажей пьес Шекспира",
            "start_pos": 94
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "искусстве",
            "start_pos": 83
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "оценки состояния пациентов",
            "start_pos": 53
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Personality Insights",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "психотерапии",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 38,
      "text": "На сайте Personality Insights качество моделей Watson оценивалось с помощью двух показателей — средней абсолютной ошибки (MAE) и коэффициента корреляции.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Personality Insights",
          "start_pos": 9
        },
        {
          "class": "Model",
          "value": "Watson",
          "start_pos": 47
        },
        {
          "class": "Metric",
          "value": "средней абсолютной ошибки",
          "start_pos": 95
        },
        {
          "class": "Metric",
          "value": "MAE",
          "start_pos": 122
        },
        {
          "class": "Metric",
          "value": "коэффициента корреляции",
          "start_pos": 129
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 122
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Watson",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "коэффициента корреляции",
            "start_pos": 129
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Watson",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "средней абсолютной ошибки",
            "start_pos": 95
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Watson",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 122
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "средней абсолютной ошибки",
            "start_pos": 95
          }
        }
      ]
    },
    {
      "id": 39,
      "text": "На платформе Personality Insights модели Watson оценивались по двум метрикам — средней абсолютной ошибке (MAE) и коэффициенту корреляции.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Personality Insights",
          "start_pos": 13
        },
        {
          "class": "Model",
          "value": "Watson",
          "start_pos": 41
        },
        {
          "class": "Metric",
          "value": "средней абсолютной ошибке",
          "start_pos": 79
        },
        {
          "class": "Metric",
          "value": "MAE",
          "start_pos": 106
        },
        {
          "class": "Metric",
          "value": "коэффициенту корреляции",
          "start_pos": 113
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 106
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Watson",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "коэффициенту корреляции",
            "start_pos": 113
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Watson",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "средней абсолютной ошибке",
            "start_pos": 79
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Watson",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 106
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "средней абсолютной ошибке",
            "start_pos": 79
          }
        }
      ]
    },
    {
      "id": 40,
      "text": "В литературе для предсказания характеристик Big 5 использовались различные методы линейная регрессия с использованием признаков полученных латентным семантическим анализом [11], ридж-регрессия по большому набору собранных вручную признаков [12], SVM с признаками TF/IDF [13], word2vec и doc2vec [14].",
      "terms": [
        {
          "class": "Task",
          "value": "предсказания характеристик",
          "start_pos": 17
        },
        {
          "class": "Method",
          "value": "линейная регрессия",
          "start_pos": 82
        },
        {
          "class": "Method",
          "value": "латентным семантическим анализом",
          "start_pos": 139
        },
        {
          "class": "Method",
          "value": "ридж-регрессия",
          "start_pos": 178
        },
        {
          "class": "Method",
          "value": "SVM",
          "start_pos": 246
        },
        {
          "class": "Metric",
          "value": "TF",
          "start_pos": 263
        },
        {
          "class": "Metric",
          "value": "IDF",
          "start_pos": 266
        },
        {
          "class": "Model",
          "value": "word2vec",
          "start_pos": 276
        },
        {
          "class": "Model",
          "value": "doc2vec",
          "start_pos": 287
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "word2vec",
            "start_pos": 276
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "предсказания характеристик",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "doc2vec",
            "start_pos": 287
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "предсказания характеристик",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "линейная регрессия",
            "start_pos": 82
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "предсказания характеристик",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "латентным семантическим анализом",
            "start_pos": 139
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "предсказания характеристик",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "ридж-регрессия",
            "start_pos": 178
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "предсказания характеристик",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SVM",
            "start_pos": 246
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "предсказания характеристик",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 41,
      "text": "В более современных работах присутствуют сверточные нейронные сети [15, 16], а также предобученные модели BERT [17]",
      "terms": [
        {
          "class": "Model",
          "value": "сверточные нейронные сети",
          "start_pos": 41
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 106
        }
      ],
      "relations": []
    },
    {
      "id": 42,
      "text": "Модель, которую построил заказчик использовала вектора слов word2vec и рекуррентную нейронную сеть на базе GRU (gated recurrent unit) (Рис 1а).",
      "terms": [
        {
          "class": "Model",
          "value": "Модель",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "word2vec",
          "start_pos": 60
        },
        {
          "class": "Model",
          "value": "рекуррентную нейронную сеть",
          "start_pos": 71
        },
        {
          "class": "Model",
          "value": "GRU",
          "start_pos": 107
        },
        {
          "class": "Model",
          "value": "gated recurrent unit",
          "start_pos": 112
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GRU",
            "start_pos": 107
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "gated recurrent unit",
            "start_pos": 112
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "рекуррентную нейронную сеть",
            "start_pos": 71
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "GRU",
            "start_pos": 107
          }
        }
      ]
    },
    {
      "id": 43,
      "text": "Обучалась модель с функцией ошибки MSE (среднеквадратичное отклонение).",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 10
        },
        {
          "class": "Metric",
          "value": "MSE",
          "start_pos": 35
        },
        {
          "class": "Metric",
          "value": "среднеквадратичное отклонение",
          "start_pos": 40
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "среднеквадратичное отклонение",
            "start_pos": 40
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "MSE",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MSE",
            "start_pos": 35
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "модель",
            "start_pos": 10
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "среднеквадратичное отклонение",
            "start_pos": 40
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "модель",
            "start_pos": 10
          }
        }
      ]
    },
    {
      "id": 44,
      "text": "Сигмоидная функция активации обычно не очень хорошо подходит для задачи регрессии.",
      "terms": [
        {
          "class": "Method",
          "value": "Сигмоидная функция активации",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "регрессии",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 45,
      "text": "В литературе для регрессии рекомендуют использовать линейную активацию или RelU.",
      "terms": [
        {
          "class": "Task",
          "value": "регрессии",
          "start_pos": 17
        },
        {
          "class": "Method",
          "value": "линейную активацию",
          "start_pos": 52
        },
        {
          "class": "Method",
          "value": "RelU",
          "start_pos": 75
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "линейную активацию",
            "start_pos": 52
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "регрессии",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "RelU",
            "start_pos": 75
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "регрессии",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 46,
      "text": "Вычислив MAE отдельно для характеристики личности и отдельно для потребительских предпочтений получили значения 0.11 и 0.148 соответственно, т. е. потребительские предпочтения сильно портят общую картину.",
      "terms": [
        {
          "class": "Metric",
          "value": "MAE",
          "start_pos": 9
        },
        {
          "class": "Value",
          "value": "0.11",
          "start_pos": 112
        },
        {
          "class": "Value",
          "value": "0.148",
          "start_pos": 119
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 9
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.11",
            "start_pos": 112
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 9
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.148",
            "start_pos": 119
          }
        }
      ]
    },
    {
      "id": 47,
      "text": "Замена BERT на более современную модель XLM RoBERTa large позволило улучшить результаты (эта модель более ресурсозатратная и медленная, но заказчик сказал, что скорость работы не критична).",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 7
        },
        {
          "class": "Model",
          "value": "XLM RoBERTa large",
          "start_pos": 40
        }
      ],
      "relations": []
    },
    {
      "id": 48,
      "text": "Итоговый MAE составил 0.073 для характеристик личности и 0.098 для потребительских предпочтений.",
      "terms": [
        {
          "class": "Metric",
          "value": "MAE",
          "start_pos": 9
        },
        {
          "class": "Value",
          "value": "0.073",
          "start_pos": 22
        },
        {
          "class": "Value",
          "value": "0.098",
          "start_pos": 57
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 9
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.073",
            "start_pos": 22
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MAE",
            "start_pos": 9
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.098",
            "start_pos": 57
          }
        }
      ]
    },
    {
      "id": 49,
      "text": "Получились немного разные цифры, но средний коэффициент корреляции по всем параметрам составил 0.68, что говорит о том, что характеристики, выдаваемые с разных переводов одного текста должны быть весьма похожи.",
      "terms": [
        {
          "class": "Metric",
          "value": "коэффициент корреляции",
          "start_pos": 44
        },
        {
          "class": "Value",
          "value": "0.68",
          "start_pos": 95
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "коэффициент корреляции",
            "start_pos": 44
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.68",
            "start_pos": 95
          }
        }
      ]
    },
    {
      "id": 50,
      "text": "Надо сказать, что признаки, формируемые верхними слоями подобных моделей не всегда являются самыми лучшими, точнее даже сказать, как правило, не являются — в классических задачах, таких как поиск именованных сущностей или ответы на вопросы по тексту, признаки верхних уровней работают хуже, чем признаки промежуточных [18].",
      "terms": [
        {
          "class": "Object",
          "value": "признаки",
          "start_pos": 18
        },
        {
          "class": "Task",
          "value": "поиск именованных сущностей",
          "start_pos": 190
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "признаки",
            "start_pos": 18
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "поиск именованных сущностей",
            "start_pos": 190
          }
        }
      ]
    },
    {
      "id": 51,
      "text": "Veridical Data Science — программная статья о методологии верификации моделей.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Veridical Data Science",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "верификации моделей",
          "start_pos": 58
        }
      ],
      "relations": []
    },
    {
      "id": 52,
      "text": "Чтобы обеспечить надежную проверку и разработать механизмы проверки и пополнения знаний, нужны специалисты смежных областей, одновременно обладающие компетенциями в ML и в предметной области (медицине, лингвистике, нейробиологии, образовании и т.д.).",
      "terms": [
        {
          "class": "Science",
          "value": "медицине",
          "start_pos": 192
        },
        {
          "class": "Science",
          "value": "лингвистике",
          "start_pos": 202
        },
        {
          "class": "Science",
          "value": "нейробиологии",
          "start_pos": 215
        },
        {
          "class": "Science",
          "value": "образовании",
          "start_pos": 230
        }
      ],
      "relations": []
    },
    {
      "id": 53,
      "text": "В частности, развивается causal inference и commonsense reasoning.",
      "terms": [
        {
          "class": "Method",
          "value": "causal inference",
          "start_pos": 25
        },
        {
          "class": "Method",
          "value": "commonsense reasoning",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 54,
      "text": "Часть докладов посвящена мета-обучению (о том, как учиться учиться) и соединению DL-технологий с логикой 1 и 2 порядка — термин Artificial General Intelligence (AGI) становится обычным термином в выступлениях спикеров.",
      "terms": [
        {
          "class": "Application",
          "value": "DL-технологий",
          "start_pos": 81
        },
        {
          "class": "Application",
          "value": "Artificial General Intelligence",
          "start_pos": 128
        },
        {
          "class": "Application",
          "value": "AGI",
          "start_pos": 161
        }
      ],
      "relations": []
    },
    {
      "id": 55,
      "text": "Google запускает Coral ai – аналог raspberry pi, мини-компьютер для внедрения нейросетей в экспериментальные установки.",
      "terms": [
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "Coral ai",
          "start_pos": 17
        },
        {
          "class": "Application",
          "value": "raspberry pi",
          "start_pos": 35
        },
        {
          "class": "Method",
          "value": "нейросетей",
          "start_pos": 78
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Coral ai",
            "start_pos": 17
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 56,
      "text": "Federated learning – направление ML, в котором отдельные модели учатся независимо друг от друга, а затем объединяются в единую модель (без централизации исходных данных), с поправками на редкие события, аномалии, персонализацию и т.д.",
      "terms": [
        {
          "class": "Method",
          "value": "Federated learning",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "ML",
          "start_pos": 33
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "ML",
            "start_pos": 33
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "Federated learning",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 57,
      "text": "Генеративные модели на основании federated learning – будущее перспективное направление по мнению Google, которое находится “в ранних стадиях экспоненциального роста”.",
      "terms": [
        {
          "class": "Model",
          "value": "Генеративные модели",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "federated learning",
          "start_pos": 33
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 98
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "federated learning",
            "start_pos": 33
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "Генеративные модели",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 58,
      "text": "Чатботы и искусственный интеллект для понимания естественного языка (NLU – Natural Language Understanding) тема достаточно горячая, про нее не раз говорилось на Хабре.",
      "terms": [
        {
          "class": "Application",
          "value": "Чатботы",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "искусственный интеллект",
          "start_pos": 10
        },
        {
          "class": "Task",
          "value": "понимания естественного языка",
          "start_pos": 38
        },
        {
          "class": "Task",
          "value": "NLU",
          "start_pos": 69
        },
        {
          "class": "Task",
          "value": "Natural Language Understanding",
          "start_pos": 75
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 69
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "понимания естественного языка",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Natural Language Understanding",
            "start_pos": 75
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "понимания естественного языка",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Чатботы",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "понимания естественного языка",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Чатботы",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 69
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Чатботы",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "Natural Language Understanding",
            "start_pos": 75
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "искусственный интеллект",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "понимания естественного языка",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "искусственный интеллект",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 69
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "искусственный интеллект",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "Natural Language Understanding",
            "start_pos": 75
          }
        }
      ]
    },
    {
      "id": 59,
      "text": "Хотя AI — это достаточно широкая область, включающая в себя машинное зрение, предиктивный анализ, машинный перевод и другие области – понимание естественного языка (NLU) и его генерация (NLG) является значительной и быстрорастущей его частью.",
      "terms": [
        {
          "class": "Science",
          "value": "AI",
          "start_pos": 5
        },
        {
          "class": "Science",
          "value": "машинное зрение",
          "start_pos": 60
        },
        {
          "class": "Method",
          "value": "предиктивный анализ",
          "start_pos": 77
        },
        {
          "class": "Task",
          "value": "машинный перевод",
          "start_pos": 98
        },
        {
          "class": "Task",
          "value": "понимание естественного языка",
          "start_pos": 134
        },
        {
          "class": "Task",
          "value": "NLU",
          "start_pos": 165
        },
        {
          "class": "Task",
          "value": "генерация",
          "start_pos": 176
        },
        {
          "class": "Task",
          "value": "NLG",
          "start_pos": 187
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "генерация",
            "start_pos": 176
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "AI",
            "start_pos": 5
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NLG",
            "start_pos": 187
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "AI",
            "start_pos": 5
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NLG",
            "start_pos": 187
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "генерация",
            "start_pos": 176
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 165
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "понимание естественного языка",
            "start_pos": 134
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 165
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "AI",
            "start_pos": 5
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "машинный перевод",
            "start_pos": 98
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "AI",
            "start_pos": 5
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "понимание естественного языка",
            "start_pos": 134
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "AI",
            "start_pos": 5
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "предиктивный анализ",
            "start_pos": 77
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "AI",
            "start_pos": 5
          }
        }
      ]
    },
    {
      "id": 60,
      "text": "Опуская историю, начавшуюся еще в 50-е годы с Алана Тьюринга и программы Элиза в 60-е годы, а также научные исследования в области лингвистики и машинного обучения 90-х годов, значимым событием более новой истории стало появление языка разметки AIML (Artificial Intelligence Markup Language), разработанной в 2001-м году Ричардом Уэлсом (Richard Wallace) и созданным на его основе чатботом A.L.I.C.E.",
      "terms": [
        {
          "class": "Person",
          "value": "Алана Тьюринга",
          "start_pos": 46
        },
        {
          "class": "Application",
          "value": "Элиза",
          "start_pos": 73
        },
        {
          "class": "Science",
          "value": "машинного обучения",
          "start_pos": 145
        },
        {
          "class": "Method",
          "value": "AIML",
          "start_pos": 245
        },
        {
          "class": "Method",
          "value": "Artificial Intelligence Markup Language",
          "start_pos": 251
        },
        {
          "class": "Date",
          "value": "2001-м",
          "start_pos": 309
        },
        {
          "class": "Person",
          "value": "Ричардом Уэлсом",
          "start_pos": 321
        },
        {
          "class": "Person",
          "value": "Richard Wallace",
          "start_pos": 338
        },
        {
          "class": "Application",
          "value": "A.L.I.C.E.",
          "start_pos": 390
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Элиза",
            "start_pos": 73
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 145
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 390
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 145
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 390
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ричардом Уэлсом",
            "start_pos": 321
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 390
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Richard Wallace",
            "start_pos": 338
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 245
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 390
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 251
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 390
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 245
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ричардом Уэлсом",
            "start_pos": 321
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 245
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Richard Wallace",
            "start_pos": 338
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 251
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ричардом Уэлсом",
            "start_pos": 321
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 251
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Richard Wallace",
            "start_pos": 338
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2001-м",
            "start_pos": 309
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 245
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2001-м",
            "start_pos": 309
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 251
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 251
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 245
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 245
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 145
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 251
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 145
          }
        }
      ]
    },
    {
      "id": 61,
      "text": "В течение последующих десяти лет подходы к написанию чатботов во многом представляли из себя переработки или улучшения этой методологии, получившей название «rule-based подход» или «подход на основе формальных правил».",
      "terms": [
        {
          "class": "Method",
          "value": "rule-based",
          "start_pos": 158
        },
        {
          "class": "Method",
          "value": "подход на основе формальных правил",
          "start_pos": 182
        }
      ],
      "relations": []
    },
    {
      "id": 62,
      "text": "Именно эти технологии, вместе с заметным продвижением в области технологий синтеза и распознавания речи, а также распространением мессенджеров и вебчатов – обусловили стремительный рост количества внедрений NLU-технологий в 2015-2018-м годах.",
      "terms": [
        {
          "class": "Task",
          "value": "синтеза и распознавания речи",
          "start_pos": 75
        },
        {
          "class": "Method",
          "value": "NLU-технологий",
          "start_pos": 207
        },
        {
          "class": "Date",
          "value": "2015-2018-м",
          "start_pos": 224
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "NLU-технологий",
            "start_pos": 207
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "синтеза и распознавания речи",
            "start_pos": 75
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2015-2018-м",
            "start_pos": 224
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "NLU-технологий",
            "start_pos": 207
          }
        }
      ]
    },
    {
      "id": 63,
      "text": "Продвижение в области технологий синтеза и распознавания речи, а также расширение использования мессенджеров и веб-чатов, в сочетании с этими технологиями, существенно способствовали быстрому распространению NLU-технологий в период с 2015 по 2018 год.",
      "terms": [
        {
          "class": "Method",
          "value": "NLU-технологий",
          "start_pos": 208
        },
        {
          "class": "Date",
          "value": "2015",
          "start_pos": 234
        },
        {
          "class": "Date",
          "value": "2018",
          "start_pos": 242
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2015",
            "start_pos": 234
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "NLU-технологий",
            "start_pos": 208
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2018",
            "start_pos": 242
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "NLU-технологий",
            "start_pos": 208
          }
        }
      ]
    },
    {
      "id": 64,
      "text": "Голосовые ассистенты (IVA): Alexa от Amazon, Google Assistant от Google, Siri от Apple, Cortana от Microsoft, Алиса от Яндекса – они определяют интенты (намерения) пользователей и исполняют команды.",
      "terms": [
        {
          "class": "Application",
          "value": "Голосовые ассистенты",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "IVA",
          "start_pos": 22
        },
        {
          "class": "Application",
          "value": "Alexa",
          "start_pos": 28
        },
        {
          "class": "Organization",
          "value": "Amazon",
          "start_pos": 37
        },
        {
          "class": "Application",
          "value": "Google Assistant",
          "start_pos": 45
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 65
        },
        {
          "class": "Application",
          "value": "Siri",
          "start_pos": 73
        },
        {
          "class": "Organization",
          "value": "Apple",
          "start_pos": 81
        },
        {
          "class": "Application",
          "value": "Cortana",
          "start_pos": 88
        },
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 99
        },
        {
          "class": "Application",
          "value": "Алиса",
          "start_pos": 110
        },
        {
          "class": "Organization",
          "value": "Яндекса",
          "start_pos": 119
        },
        {
          "class": "Object",
          "value": "интенты",
          "start_pos": 144
        },
        {
          "class": "Object",
          "value": "намерения",
          "start_pos": 153
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Алиса",
            "start_pos": 110
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "интенты",
            "start_pos": 144
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Cortana",
            "start_pos": 88
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "интенты",
            "start_pos": 144
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Siri",
            "start_pos": 73
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "интенты",
            "start_pos": 144
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Assistant",
            "start_pos": 45
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "интенты",
            "start_pos": 144
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Alexa",
            "start_pos": 28
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "интенты",
            "start_pos": 144
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Алиса",
            "start_pos": 110
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "намерения",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Cortana",
            "start_pos": 88
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "намерения",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Siri",
            "start_pos": 73
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "намерения",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Assistant",
            "start_pos": 45
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "намерения",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Alexa",
            "start_pos": 28
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "намерения",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Алиса",
            "start_pos": 110
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Яндекса",
            "start_pos": 119
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Cortana",
            "start_pos": 88
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 99
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Siri",
            "start_pos": 73
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Apple",
            "start_pos": 81
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Assistant",
            "start_pos": 45
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 65
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Alexa",
            "start_pos": 28
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Amazon",
            "start_pos": 37
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "IVA",
            "start_pos": 22
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Голосовые ассистенты",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 65,
      "text": "Голосовые ассистенты (ГА, IVA) определяют интенты пользователей и исполняют команды.",
      "terms": [
        {
          "class": "Application",
          "value": "Голосовые ассистенты",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "ГА",
          "start_pos": 22
        },
        {
          "class": "Application",
          "value": "IVA",
          "start_pos": 26
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "ГА",
            "start_pos": 22
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Голосовые ассистенты",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "IVA",
            "start_pos": 26
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Голосовые ассистенты",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 66,
      "text": "В качестве каналов могут выступать умные устройства, ассистенты, встроенные в устройства или мобильные телефоны, привычный звонок на номер телефона, мессенджеры или вебчаты, подобные популярным в России Livetex, Jivosite или Webim.",
      "terms": [
        {
          "class": "Application",
          "value": "Livetex",
          "start_pos": 203
        },
        {
          "class": "Application",
          "value": "Jivosite",
          "start_pos": 212
        },
        {
          "class": "Application",
          "value": "Webim",
          "start_pos": 225
        }
      ],
      "relations": []
    },
    {
      "id": 67,
      "text": "За эту конвертацию отвечают платформы ASR (распознавание речи), TTS (синтез речи), системы интеграции с телефонией.",
      "terms": [
        {
          "class": "Task",
          "value": "ASR",
          "start_pos": 38
        },
        {
          "class": "Task",
          "value": "распознавание речи",
          "start_pos": 43
        },
        {
          "class": "Method",
          "value": "TTS",
          "start_pos": 64
        },
        {
          "class": "Method",
          "value": "синтез речи",
          "start_pos": 69
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "распознавание речи",
            "start_pos": 43
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "ASR",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "синтез речи",
            "start_pos": 69
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "TTS",
            "start_pos": 64
          }
        }
      ]
    },
    {
      "id": 68,
      "text": "Наличие развитого rule-based синтаксиса может ускорить разработку чатботов в разы.",
      "terms": [
        {
          "class": "Method",
          "value": "rule-based",
          "start_pos": 18
        }
      ],
      "relations": []
    },
    {
      "id": 69,
      "text": "Анализ эмоций, богатая и глубокая аналитика, специальные фильтры (например, на использование ненормативной лексики), языковая поддержка, хранение контекста, как и собственно, точность работы используемых нейросетевых алгоритмов, а также производительность, масштабируемость и стабильность – все это также важные, хотя и не всегда очевидные со стороны, особенности диалоговых платформ.",
      "terms": [
        {
          "class": "Task",
          "value": "Анализ эмоций",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "глубокая аналитика",
          "start_pos": 25
        },
        {
          "class": "Application",
          "value": "диалоговых платформ",
          "start_pos": 364
        }
      ],
      "relations": []
    },
    {
      "id": 70,
      "text": "Алгоритм понимания естественного языка (Natural Language Understanding, NLU) Microsoft DeBERTa превзошел человеческие возможности в одном из самых сложных тестов для подобных алгоритмов SuperGLUE.",
      "terms": [
        {
          "class": "Task",
          "value": "понимания естественного языка",
          "start_pos": 9
        },
        {
          "class": "Task",
          "value": "Natural Language Understanding",
          "start_pos": 40
        },
        {
          "class": "Task",
          "value": "NLU",
          "start_pos": 72
        },
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 77
        },
        {
          "class": "Application",
          "value": "DeBERTa",
          "start_pos": 87
        },
        {
          "class": "Method",
          "value": "SuperGLUE",
          "start_pos": 186
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "DeBERTa",
            "start_pos": 87
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "понимания естественного языка",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "DeBERTa",
            "start_pos": 87
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "Natural Language Understanding",
            "start_pos": 40
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "DeBERTa",
            "start_pos": 87
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 72
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "DeBERTa",
            "start_pos": 87
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 77
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 72
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Natural Language Understanding",
            "start_pos": 40
          }
        }
      ]
    },
    {
      "id": 71,
      "text": "На данный момент модель занимает первое место в рейтинге с показателем в 90,3, в то время как среднее значение человеческих возможностей составляет 89,8 баллов.",
      "terms": [
        {
          "class": "Value",
          "value": "90,3",
          "start_pos": 73
        },
        {
          "class": "Value",
          "value": "89,8",
          "start_pos": 148
        }
      ],
      "relations": []
    },
    {
      "id": 72,
      "text": "Тест SuperGLUE включает в себя ряд задач, которые разработаны для оценки способности ИИ-моделей распознавать и понимать естественный язык, например, дать правильный ответ на вопрос на базе прочитанного абзаца, определить, правильно ли используется многозначное слово в определенном контексте и т.д.",
      "terms": [
        {
          "class": "Method",
          "value": "SuperGLUE",
          "start_pos": 5
        },
        {
          "class": "Task",
          "value": "дать правильный ответ на вопрос на базе прочитанного абзаца",
          "start_pos": 149
        },
        {
          "class": "Object",
          "value": "многозначное слово",
          "start_pos": 248
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "SuperGLUE",
            "start_pos": 5
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "дать правильный ответ на вопрос на базе прочитанного абзаца",
            "start_pos": 149
          }
        }
      ]
    },
    {
      "id": 73,
      "text": "Тест был разработан группой исследователей в 2019 году.",
      "terms": [
        {
          "class": "Method",
          "value": "Тест",
          "start_pos": 0
        },
        {
          "class": "Date",
          "value": "2019 году",
          "start_pos": 45
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2019 году",
            "start_pos": 45
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "Тест",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 74,
      "text": "Исследовательская группа разработала тест в 2019 году.",
      "terms": [
        {
          "class": "Method",
          "value": "тест",
          "start_pos": 37
        },
        {
          "class": "Date",
          "value": "2019 году",
          "start_pos": 44
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2019 году",
            "start_pos": 44
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "тест",
            "start_pos": 37
          }
        }
      ]
    },
    {
      "id": 75,
      "text": "Для того чтобы добиться текущего результата в 90,3 балла, DeBERTa получила масштабное обновление архитектуры: теперь она состоит из 48 слоев и имеет 1,5 млрд параметров.",
      "terms": [
        {
          "class": "Value",
          "value": "90,3",
          "start_pos": 46
        },
        {
          "class": "Application",
          "value": "DeBERTa",
          "start_pos": 58
        },
        {
          "class": "Value",
          "value": "48",
          "start_pos": 132
        }
      ],
      "relations": []
    },
    {
      "id": 76,
      "text": "Кроме того, DeBERTa будет интегрирована в следующую версию Тьюринговой модели Microsoft Turing (Turing NLRv4).",
      "terms": [
        {
          "class": "Model",
          "value": "DeBERTa",
          "start_pos": 12
        },
        {
          "class": "Model",
          "value": "Тьюринговой модели Microsoft Turing",
          "start_pos": 59
        },
        {
          "class": "Model",
          "value": "Turing NLRv4",
          "start_pos": 96
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Turing NLRv4",
            "start_pos": 96
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "Тьюринговой модели Microsoft Turing",
            "start_pos": 59
          }
        }
      ]
    },
    {
      "id": 77,
      "text": "Дополнительно, DeBERTa будет включена в следующую версию модели Microsoft Turing (Turing NLRv4) от Microsoft.",
      "terms": [
        {
          "class": "Model",
          "value": "DeBERTa",
          "start_pos": 15
        },
        {
          "class": "Model",
          "value": "Microsoft Turing",
          "start_pos": 64
        },
        {
          "class": "Model",
          "value": "Turing NLRv4",
          "start_pos": 82
        },
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 99
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Turing NLRv4",
            "start_pos": 82
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "Microsoft Turing",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Microsoft Turing",
            "start_pos": 64
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 99
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeBERTa",
            "start_pos": 15
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 99
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Turing NLRv4",
            "start_pos": 82
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 99
          }
        }
      ]
    },
    {
      "id": 78,
      "text": "Тьюринговые модели используются в таких продуктах Microsoft, как Bing, Office, Dynamics и Azure Cognitive Services, чтобы совершенствовать, к примеру, взаимодействие с чат-ботами, предоставление рекомендаций и ответов на вопросы, поиск, автоматизацию поддержки клиентов, создание контента и решение многих других задач на пользу сотен миллионов пользователей.",
      "terms": [
        {
          "class": "Model",
          "value": "Тьюринговые модели",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 50
        },
        {
          "class": "Application",
          "value": "Bing",
          "start_pos": 65
        },
        {
          "class": "Application",
          "value": "Office",
          "start_pos": 71
        },
        {
          "class": "Application",
          "value": "Dynamics",
          "start_pos": 79
        },
        {
          "class": "Application",
          "value": "Azure Cognitive Services",
          "start_pos": 90
        },
        {
          "class": "Application",
          "value": "чат-ботами",
          "start_pos": 168
        },
        {
          "class": "Task",
          "value": "создание контента",
          "start_pos": 271
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создание контента",
            "start_pos": 271
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Bing",
            "start_pos": 65
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Office",
            "start_pos": 71
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Dynamics",
            "start_pos": 79
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Azure Cognitive Services",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Bing",
            "start_pos": 65
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Office",
            "start_pos": 71
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Dynamics",
            "start_pos": 79
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Azure Cognitive Services",
            "start_pos": 90
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Bing",
            "start_pos": 65
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создание контента",
            "start_pos": 271
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Office",
            "start_pos": 71
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создание контента",
            "start_pos": 271
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Dynamics",
            "start_pos": 79
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создание контента",
            "start_pos": 271
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Azure Cognitive Services",
            "start_pos": 90
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создание контента",
            "start_pos": 271
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "чат-ботами",
            "start_pos": 168
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создание контента",
            "start_pos": 271
          }
        }
      ]
    },
    {
      "id": 79,
      "text": "Тьюринговые модели применяются в продуктах, таких как Bing, Office, Dynamics и Azure Cognitive Services.",
      "terms": [
        {
          "class": "Model",
          "value": "Тьюринговые модели",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "Bing",
          "start_pos": 54
        },
        {
          "class": "Application",
          "value": "Office",
          "start_pos": 60
        },
        {
          "class": "Application",
          "value": "Dynamics",
          "start_pos": 68
        },
        {
          "class": "Application",
          "value": "Azure Cognitive Services",
          "start_pos": 79
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Bing",
            "start_pos": 54
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Office",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Dynamics",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Тьюринговые модели",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Azure Cognitive Services",
            "start_pos": 79
          }
        }
      ]
    },
    {
      "id": 80,
      "text": "В отличии от машин, люди хорошо умеют использовать знания, ранее полученные при выполнении различных задач, для решения новых – это называется композиционным обобщением (англ. compositional generalization).",
      "terms": [
        {
          "class": "Method",
          "value": "композиционным обобщением",
          "start_pos": 143
        },
        {
          "class": "Method",
          "value": "compositional generalization",
          "start_pos": 176
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "compositional generalization",
            "start_pos": 176
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "композиционным обобщением",
            "start_pos": 143
          }
        }
      ]
    },
    {
      "id": 81,
      "text": "МТИ Technology Review протестировали два инструмента — MyInterview и Curious Thing.",
      "terms": [
        {
          "class": "Organization",
          "value": "МТИ Technology Review",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "MyInterview",
          "start_pos": 55
        },
        {
          "class": "Application",
          "value": "Curious Thing",
          "start_pos": 69
        }
      ],
      "relations": []
    },
    {
      "id": 82,
      "text": "Как отличить хороший ремонт от плохого, или как мы в SRG сделали из Томита-парсера многопоточную Java-библиотеку.",
      "terms": [
        {
          "class": "Organization",
          "value": "SRG",
          "start_pos": 53
        },
        {
          "class": "Application",
          "value": "Томита-парсера",
          "start_pos": 68
        },
        {
          "class": "Library",
          "value": "Java-библиотеку",
          "start_pos": 97
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Томита-парсера",
            "start_pos": 68
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "SRG",
            "start_pos": 53
          }
        }
      ]
    },
    {
      "id": 83,
      "text": "В этой статье речь пойдет о том, как мы интегрировали разработанный Яндексом Томита-парсер в нашу систему, превратили его в динамическую библиотеку, подружили с Java, сделали многопоточной и решили с её помощью задачу классификации текста для оценки недвижимости.",
      "terms": [
        {
          "class": "Organization",
          "value": "Яндексом",
          "start_pos": 68
        },
        {
          "class": "Application",
          "value": "Томита-парсер",
          "start_pos": 77
        },
        {
          "class": "Environment",
          "value": "Java",
          "start_pos": 161
        },
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 218
        },
        {
          "class": "Task",
          "value": "оценки недвижимости",
          "start_pos": 243
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Томита-парсер",
            "start_pos": 77
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Яндексом",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Томита-парсер",
            "start_pos": 77
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 218
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Томита-парсер",
            "start_pos": 77
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "оценки недвижимости",
            "start_pos": 243
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Java",
            "start_pos": 161
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Томита-парсер",
            "start_pos": 77
          }
        }
      ]
    },
    {
      "id": 84,
      "text": "Итак, у нас есть текст объявления, который необходимо классифицировать в одну из категорий согласно состоянию ремонта в квартире (без отделки, чистовой, средний, хороший, отличный, эксклюзивный).",
      "terms": [
        {
          "class": "Object",
          "value": "текст объявления",
          "start_pos": 17
        }
      ],
      "relations": []
    },
    {
      "id": 85,
      "text": "Таким образом, по мере решения сформировалась вторая большая и интересная задача — научиться извлекать всю достаточную и необходимую информацию о ремонте из объявления, а именно обеспечить быстрый синтаксический и морфологический анализ текста, который сможет работать параллельно под нагрузкой в режиме библиотеки.",
      "terms": [
        {
          "class": "Task",
          "value": "извлекать всю достаточную и необходимую информацию",
          "start_pos": 93
        },
        {
          "class": "Method",
          "value": "морфологический анализ текста",
          "start_pos": 214
        }
      ],
      "relations": []
    },
    {
      "id": 86,
      "text": "Из доступных средств для извлечения фактов из текста на основе контекстно-свободных грамматик, способных работать с русским языком, наше внимание привлекли Томита-парсер и библиотека Yagry на питоне.",
      "terms": [
        {
          "class": "Task",
          "value": "извлечения фактов",
          "start_pos": 25
        },
        {
          "class": "Object",
          "value": "текста",
          "start_pos": 46
        },
        {
          "class": "Method",
          "value": "контекстно-свободных грамматик",
          "start_pos": 63
        },
        {
          "class": "Application",
          "value": "Томита-парсер",
          "start_pos": 156
        },
        {
          "class": "Library",
          "value": "Yagry",
          "start_pos": 183
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "Yagry",
            "start_pos": 183
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текста",
            "start_pos": 46
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "контекстно-свободных грамматик",
            "start_pos": 63
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Yagry",
            "start_pos": 183
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Томита-парсер",
            "start_pos": 156
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текста",
            "start_pos": 46
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "контекстно-свободных грамматик",
            "start_pos": 63
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Томита-парсер",
            "start_pos": 156
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "контекстно-свободных грамматик",
            "start_pos": 63
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "извлечения фактов",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "текста",
            "start_pos": 46
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "извлечения фактов",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Томита-парсер",
            "start_pos": 156
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "извлечения фактов",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "контекстно-свободных грамматик",
            "start_pos": 63
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текста",
            "start_pos": 46
          }
        }
      ]
    },
    {
      "id": 87,
      "text": "Многопоточный вариант Томиты — TomitaPooledParser использует для парсинга пул объектов TomitaParser, одинаковым образом сконфигурированных.",
      "terms": [
        {
          "class": "Application",
          "value": "Томиты",
          "start_pos": 22
        },
        {
          "class": "Application",
          "value": "TomitaPooledParser",
          "start_pos": 31
        },
        {
          "class": "Task",
          "value": "парсинга",
          "start_pos": 65
        },
        {
          "class": "Application",
          "value": "TomitaParser",
          "start_pos": 87
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "TomitaPooledParser",
            "start_pos": 31
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "парсинга",
            "start_pos": 65
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Томиты",
            "start_pos": 22
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "парсинга",
            "start_pos": 65
          }
        }
      ]
    },
    {
      "id": 88,
      "text": "Приведу только показатели качества классификации, которые были нами получены на тестах: Accuracy = 95% F1 score = 93%",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 35
        },
        {
          "class": "Metric",
          "value": "Accuracy",
          "start_pos": 88
        },
        {
          "class": "Value",
          "value": "95%",
          "start_pos": 99
        },
        {
          "class": "Metric",
          "value": "F1 score",
          "start_pos": 103
        },
        {
          "class": "Value",
          "value": "93%",
          "start_pos": 114
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Accuracy",
            "start_pos": 88
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "F1 score",
            "start_pos": 103
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "Accuracy",
            "start_pos": 88
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "95%",
            "start_pos": 99
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "F1 score",
            "start_pos": 103
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "93%",
            "start_pos": 114
          }
        }
      ]
    },
    {
      "id": 89,
      "text": "JavaScript-библиотека для обработки текстов на русском языке",
      "terms": [
        {
          "class": "Library",
          "value": "JavaScript-библиотека",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "обработки текстов",
          "start_pos": 26
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "JavaScript-библиотека",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "обработки текстов",
            "start_pos": 26
          }
        }
      ]
    },
    {
      "id": 90,
      "text": "Бессвязность текстов в нынешней версии «Генератора» вызвана тем, что на самом деле никакого анализа он производить не умеет.",
      "terms": [
        {
          "class": "Application",
          "value": "Генератора",
          "start_pos": 40
        },
        {
          "class": "Method",
          "value": "анализа",
          "start_pos": 92
        }
      ],
      "relations": []
    },
    {
      "id": 91,
      "text": "На данный момент библиотека умеет две вещи: токенизацию и анализ морфологии.",
      "terms": [
        {
          "class": "Library",
          "value": "библиотека",
          "start_pos": 17
        },
        {
          "class": "Method",
          "value": "токенизацию",
          "start_pos": 44
        },
        {
          "class": "Method",
          "value": "анализ морфологии",
          "start_pos": 58
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализ морфологии",
            "start_pos": 58
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "библиотека",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизацию",
            "start_pos": 44
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "библиотека",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 92,
      "text": "В настоящее время библиотека обладает двумя функциональностями: выполнением токенизации и проведением анализа морфологии.",
      "terms": [
        {
          "class": "Library",
          "value": "библиотека",
          "start_pos": 18
        },
        {
          "class": "Method",
          "value": "токенизации",
          "start_pos": 76
        },
        {
          "class": "Method",
          "value": "анализа морфологии",
          "start_pos": 102
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализа морфологии",
            "start_pos": 102
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "библиотека",
            "start_pos": 18
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизации",
            "start_pos": 76
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "библиотека",
            "start_pos": 18
          }
        }
      ]
    },
    {
      "id": 93,
      "text": "Полный список граммем можно найти на странице проекта OpenCorpora.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "OpenCorpora",
          "start_pos": 54
        }
      ],
      "relations": []
    },
    {
      "id": 94,
      "text": "Кроме того, для анализа используется словарь OpenCorpora, упакованный в специальном формате, но об этом ниже.",
      "terms": [
        {
          "class": "Task",
          "value": "анализа",
          "start_pos": 16
        },
        {
          "class": "Corpus",
          "value": "OpenCorpora",
          "start_pos": 45
        }
      ],
      "relations": []
    },
    {
      "id": 95,
      "text": "Вообще создатели проекта OpenCorpora большие молодцы и я вам рекомендую не только ознакомиться с ним, но и принять участие в коллаборативной разметке корпуса — это также поможет и другим опенсорсным проектам.",
      "terms": [
        {
          "class": "Activity",
          "value": "OpenCorpora",
          "start_pos": 25
        },
        {
          "class": "Task",
          "value": "разметке корпуса",
          "start_pos": 141
        }
      ],
      "relations": []
    },
    {
      "id": 96,
      "text": "По сути эта часть библиотеки — порт замечательного морфологического анализатора pymorphy2 за авторством kmike (на Хабре была пара статей об этой библиотеке).",
      "terms": [
        {
          "class": "Application",
          "value": "морфологического анализатора",
          "start_pos": 51
        },
        {
          "class": "Library",
          "value": "pymorphy2",
          "start_pos": 80
        },
        {
          "class": "Person",
          "value": "kmike",
          "start_pos": 104
        },
        {
          "class": "InfoResource",
          "value": "Хабре",
          "start_pos": 114
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "pymorphy2",
            "start_pos": 80
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "kmike",
            "start_pos": 104
          }
        }
      ]
    },
    {
      "id": 97,
      "text": "Эта часть библиотеки по сути является переносом выдающегося морфологического анализатора pymorphy2, созданного kmike (о котором было написано несколько статей на Хабре).",
      "terms": [
        {
          "class": "Application",
          "value": "морфологического анализатора",
          "start_pos": 60
        },
        {
          "class": "Library",
          "value": "pymorphy2",
          "start_pos": 89
        },
        {
          "class": "Person",
          "value": "kmike",
          "start_pos": 111
        },
        {
          "class": "InfoResource",
          "value": "Хабре",
          "start_pos": 162
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "pymorphy2",
            "start_pos": 89
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "kmike",
            "start_pos": 111
          }
        }
      ]
    },
    {
      "id": 98,
      "text": "Потом появилась нейросеть GPT-2, которая была как минимум в 10 раз мощнее и была способна обрабатывать 1,5 миллиарда параметров (переменных, определяющих возможности машинного обучения).",
      "terms": [
        {
          "class": "Model",
          "value": "GPT-2",
          "start_pos": 26
        },
        {
          "class": "Science",
          "value": "машинного обучения",
          "start_pos": 166
        }
      ],
      "relations": []
    },
    {
      "id": 99,
      "text": "Анализируем тональность текстов с помощью Fast.ai",
      "terms": [
        {
          "class": "Application",
          "value": "Fast.ai",
          "start_pos": 42
        }
      ],
      "relations": []
    },
    {
      "id": 100,
      "text": "В статье пойдет речь о классификации тональности текстовых сообщений на русском языке (а по сути любой классификации текстов, используя те же технологии).",
      "terms": [
        {
          "class": "Task",
          "value": "классификации тональности текстовых сообщений",
          "start_pos": 23
        },
        {
          "class": "Lang",
          "value": "русском",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 101,
      "text": "За основу возьмем данную статью, в которой была рассмотрена классификация тональности на архитектуре CNN с использованием Word2vec модели.",
      "terms": [
        {
          "class": "Task",
          "value": "классификация тональности",
          "start_pos": 60
        },
        {
          "class": "Method",
          "value": "CNN",
          "start_pos": 101
        },
        {
          "class": "Model",
          "value": "Word2vec",
          "start_pos": 122
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 101
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификация тональности",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Word2vec",
            "start_pos": 122
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификация тональности",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 101
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "Word2vec",
            "start_pos": 122
          }
        }
      ]
    },
    {
      "id": 102,
      "text": "В нашем примере будем решать ту же самую задачу разделения твитов на позитивные и негативные на том же самом датасете с использованием модели ULMFit.",
      "terms": [
        {
          "class": "Task",
          "value": "разделения твитов",
          "start_pos": 48
        },
        {
          "class": "Object",
          "value": "позитивные",
          "start_pos": 69
        },
        {
          "class": "Object",
          "value": "негативные",
          "start_pos": 82
        },
        {
          "class": "Model",
          "value": "ULMFit",
          "start_pos": 142
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ULMFit",
            "start_pos": 142
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "разделения твитов",
            "start_pos": 48
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "позитивные",
            "start_pos": 69
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "разделения твитов",
            "start_pos": 48
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "негативные",
            "start_pos": 82
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "разделения твитов",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 103,
      "text": "Результат из статьи (average F1-score = 0.78142) примем в качестве baseline.",
      "terms": [
        {
          "class": "Metric",
          "value": "F1-score",
          "start_pos": 29
        },
        {
          "class": "Value",
          "value": "0.78142",
          "start_pos": 40
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "F1-score",
            "start_pos": 29
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.78142",
            "start_pos": 40
          }
        }
      ]
    },
    {
      "id": 104,
      "text": "Модель ULMFIT была представлена разработчиками fast.ai (Jeremy Howard, Sebastian Ruder) в 2018 году.",
      "terms": [
        {
          "class": "Model",
          "value": "ULMFIT",
          "start_pos": 7
        },
        {
          "class": "Organization",
          "value": "fast.ai",
          "start_pos": 47
        },
        {
          "class": "Person",
          "value": "Jeremy Howard",
          "start_pos": 56
        },
        {
          "class": "Person",
          "value": "Sebastian Ruder",
          "start_pos": 71
        },
        {
          "class": "Date",
          "value": "2018",
          "start_pos": 90
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2018",
            "start_pos": 90
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "ULMFIT",
            "start_pos": 7
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ULMFIT",
            "start_pos": 7
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Jeremy Howard",
            "start_pos": 56
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ULMFIT",
            "start_pos": 7
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Sebastian Ruder",
            "start_pos": 71
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ULMFIT",
            "start_pos": 7
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "fast.ai",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 105,
      "text": "Суть подхода состоит в использовании transfer learning в задачах NLP, когда вы используете предобученные модели, сокращая время на обучение своих моделей и снижая требования к размерам размеченной тестовой выборки.",
      "terms": [
        {
          "class": "Method",
          "value": "transfer learning",
          "start_pos": 37
        },
        {
          "class": "Task",
          "value": "задачах NLP",
          "start_pos": 57
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "transfer learning",
            "start_pos": 37
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "задачах NLP",
            "start_pos": 57
          }
        }
      ]
    },
    {
      "id": 106,
      "text": "Для задачи моделирования языка ULMFit использует архитектуру AWD-LSTM, которая предполагает активное использование dropout везде, где только можно и имеет смысл.",
      "terms": [
        {
          "class": "Task",
          "value": "моделирования",
          "start_pos": 11
        },
        {
          "class": "Model",
          "value": "ULMFit",
          "start_pos": 31
        },
        {
          "class": "Model",
          "value": "AWD-LSTM",
          "start_pos": 61
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "AWD-LSTM",
            "start_pos": 61
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "моделирования",
            "start_pos": 11
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ULMFit",
            "start_pos": 31
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "AWD-LSTM",
            "start_pos": 61
          }
        }
      ]
    },
    {
      "id": 107,
      "text": "Результат, показанный на тестовой выборке average F1-score = 0,80064.",
      "terms": [
        {
          "class": "Metric",
          "value": "F1-score",
          "start_pos": 50
        },
        {
          "class": "Value",
          "value": "0,80064",
          "start_pos": 61
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "F1-score",
            "start_pos": 50
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0,80064",
            "start_pos": 61
          }
        }
      ]
    },
    {
      "id": 108,
      "text": "Добавьте возможности IBM Watson платформы в ваши приложения, разработанные на платформе IBM Cloud, или в сторонние приложения!",
      "terms": [
        {
          "class": "Application",
          "value": "IBM Watson",
          "start_pos": 21
        },
        {
          "class": "Application",
          "value": "IBM Cloud",
          "start_pos": 88
        }
      ],
      "relations": []
    },
    {
      "id": 109,
      "text": "IBM Automation Platform для цифрового бизнеса — это интегрированная платформа с пятью возможностями автоматизации, которая помогает бизнесу быстро и масштабно управлять практически всеми типами проектов автоматизации — от повторяющихся и административных до работы на уровне экспертов.",
      "terms": [
        {
          "class": "Application",
          "value": "IBM Automation Platform",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "цифрового бизнеса",
          "start_pos": 28
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "IBM Automation Platform",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "цифрового бизнеса",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 110,
      "text": "Платформа IBM Automation для цифрового бизнеса представляет собой интегрированную платформу с пятью функциями автоматизации, которая обеспечивает быстрое и масштабное управление практически любыми проектами автоматизации — от повторяющихся и административных до задач на уровне экспертов.",
      "terms": [
        {
          "class": "Application",
          "value": "IBM Automation",
          "start_pos": 10
        },
        {
          "class": "Science",
          "value": "цифрового бизнеса",
          "start_pos": 29
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "IBM Automation",
            "start_pos": 10
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "цифрового бизнеса",
            "start_pos": 29
          }
        }
      ]
    },
    {
      "id": 111,
      "text": "HuggingArtists | Генерируем текст песен с трансформером за 5 минут",
      "terms": [
        {
          "class": "Application",
          "value": "HuggingArtists",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "текст песен",
          "start_pos": 28
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "HuggingArtists",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текст песен",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 112,
      "text": "В HuggingArtists, мы можем создавать тексты песен на основе конкретного исполнителя.",
      "terms": [
        {
          "class": "Application",
          "value": "HuggingArtists",
          "start_pos": 2
        },
        {
          "class": "Task",
          "value": "создавать тексты",
          "start_pos": 27
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "HuggingArtists",
            "start_pos": 2
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создавать тексты",
            "start_pos": 27
          }
        }
      ]
    },
    {
      "id": 113,
      "text": "Это было сделано путем fine-tune (точной настройки) предварительно обученного трансформера HuggingFace  на собранных данных Genius.",
      "terms": [
        {
          "class": "Method",
          "value": "fine-tune",
          "start_pos": 23
        },
        {
          "class": "Method",
          "value": "точной настройки",
          "start_pos": 34
        },
        {
          "class": "Model",
          "value": "трансформера HuggingFace",
          "start_pos": 78
        },
        {
          "class": "Dataset",
          "value": "Genius",
          "start_pos": 124
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "трансформера HuggingFace",
            "start_pos": 78
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "Genius",
            "start_pos": 124
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "точной настройки",
            "start_pos": 34
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "fine-tune",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "fine-tune",
            "start_pos": 23
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "трансформера HuggingFace",
            "start_pos": 78
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "точной настройки",
            "start_pos": 34
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "трансформера HuggingFace",
            "start_pos": 78
          }
        }
      ]
    },
    {
      "id": 114,
      "text": "Кроме того, мы используем интеграцию Weights & Biases для автоматического учета производительности и прогнозов модели.",
      "terms": [
        {
          "class": "Library",
          "value": "Weights & Biases",
          "start_pos": 37
        }
      ],
      "relations": []
    },
    {
      "id": 115,
      "text": "Анализ тональности текста с использованием фреймворка Lightautoml",
      "terms": [
        {
          "class": "Task",
          "value": "Анализ тональности текста",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "Lightautoml",
          "start_pos": 54
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Lightautoml",
            "start_pos": 54
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "Анализ тональности текста",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 116,
      "text": "Сентиментный анализ (анализ тональности) – это область компьютерной лингвистики, занимающаяся изучением эмоций в текстовых документах, в основе которой лежит машинное обучение.",
      "terms": [
        {
          "class": "Science",
          "value": "Сентиментный анализ",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "анализ тональности",
          "start_pos": 21
        },
        {
          "class": "Science",
          "value": "компьютерной лингвистики",
          "start_pos": 55
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "анализ тональности",
            "start_pos": 21
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "Сентиментный анализ",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 117,
      "text": "Сентиментный анализ, также известный как анализ тональности, представляет собой сферу компьютерной лингвистики, которая занимается изучением эмоций в текстовых документах, применяя методы машинного обучения.",
      "terms": [
        {
          "class": "Science",
          "value": "Сентиментный анализ",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "анализ тональности",
          "start_pos": 41
        },
        {
          "class": "Science",
          "value": "компьютерной лингвистики",
          "start_pos": 86
        },
        {
          "class": "Method",
          "value": "методы машинного обучения",
          "start_pos": 181
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методы машинного обучения",
            "start_pos": 181
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "Сентиментный анализ",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы машинного обучения",
            "start_pos": 181
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "анализ тональности",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы машинного обучения",
            "start_pos": 181
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "компьютерной лингвистики",
            "start_pos": 86
          }
        },
        {
          "term1": {
            "class": "Science",
            "value": "анализ тональности",
            "start_pos": 41
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "Сентиментный анализ",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 118,
      "text": "Сентимент-анализ, или анализ тональности, является разделом компьютерной лингвистики, в которой занимаются изучением эмоций в текстах с помощью методов машинного обучения.",
      "terms": [
        {
          "class": "Science",
          "value": "Сентимент-анализ",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "анализ тональности",
          "start_pos": 22
        },
        {
          "class": "Science",
          "value": "компьютерной лингвистики",
          "start_pos": 60
        },
        {
          "class": "Method",
          "value": "методов машинного обучения",
          "start_pos": 144
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методов машинного обучения",
            "start_pos": 144
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "Сентимент-анализ",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методов машинного обучения",
            "start_pos": 144
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "анализ тональности",
            "start_pos": 22
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методов машинного обучения",
            "start_pos": 144
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "компьютерной лингвистики",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Science",
            "value": "анализ тональности",
            "start_pos": 22
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "Сентимент-анализ",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 119,
      "text": "В этой статье я покажу, как мы использовали для этих целей внутреннюю разработку компании – фреймворк LightAutoML, в котором имеется всё для решения поставленной задачи – предобученные готовые векторные представления слов FastText и готовые текстовые пресеты, в которых необходимо только указать гиперпараметры.",
      "terms": [
        {
          "class": "Application",
          "value": "LightAutoML",
          "start_pos": 102
        },
        {
          "class": "Object",
          "value": "предобученные готовые векторные представления слов",
          "start_pos": 171
        },
        {
          "class": "Model",
          "value": "FastText",
          "start_pos": 222
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "LightAutoML",
            "start_pos": 102
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "предобученные готовые векторные представления слов",
            "start_pos": 171
          }
        }
      ]
    },
    {
      "id": 120,
      "text": "При обучении модели значение метрики F1-score достигло 0.894, соответственно можно сделать вывод о том, что модель хорошо справляется с задачей определения нейтральных и негативных обращений.",
      "terms": [
        {
          "class": "Metric",
          "value": "F1-score",
          "start_pos": 37
        },
        {
          "class": "Value",
          "value": "0.894",
          "start_pos": 55
        },
        {
          "class": "Task",
          "value": "определения нейтральных и негативных обращений",
          "start_pos": 144
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "F1-score",
            "start_pos": 37
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "определения нейтральных и негативных обращений",
            "start_pos": 144
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "F1-score",
            "start_pos": 37
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.894",
            "start_pos": 55
          }
        }
      ]
    },
    {
      "id": 121,
      "text": "Также одним из способов оценить работу модели в целом можно по кривой ROC-AUC, которая описывает площадь под кривой (Area Under Curve – Receiver Operating Characteristic).",
      "terms": [
        {
          "class": "Metric",
          "value": "ROC-AUC",
          "start_pos": 70
        },
        {
          "class": "Metric",
          "value": "Area Under Curve – Receiver Operating Characteristic",
          "start_pos": 117
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Area Under Curve – Receiver Operating Characteristic",
            "start_pos": 117
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "ROC-AUC",
            "start_pos": 70
          }
        }
      ]
    },
    {
      "id": 122,
      "text": "В качестве подтверждения вышесказанного можно привести работу встроенного в LAMA модуля – LIME, который раскрывает работу модели окрашивая слова в тот или иной цвет, в зависимости от их эмоционального окраса.",
      "terms": [
        {
          "class": "Application",
          "value": "LAMA",
          "start_pos": 76
        },
        {
          "class": "Application",
          "value": "LIME",
          "start_pos": 90
        }
      ],
      "relations": []
    },
    {
      "id": 123,
      "text": "Также фреймворк может решать задачи регрессионного анализа, целью которого является определение зависимости между переменными и оценкой функции регрессии.",
      "terms": [
        {
          "class": "Library",
          "value": "фреймворк",
          "start_pos": 6
        },
        {
          "class": "Task",
          "value": "регрессионного анализа",
          "start_pos": 36
        },
        {
          "class": "Task",
          "value": "определение зависимости между переменными",
          "start_pos": 84
        },
        {
          "class": "Task",
          "value": "оценкой функции регрессии",
          "start_pos": 128
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "фреймворк",
            "start_pos": 6
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "определение зависимости между переменными",
            "start_pos": 84
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "фреймворк",
            "start_pos": 6
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "оценкой функции регрессии",
            "start_pos": 128
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "фреймворк",
            "start_pos": 6
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "регрессионного анализа",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 124,
      "text": "Работа с текстомВ LightAutoML имеется большое количество вариантов разработки той или иной модели, работающей с текстом.",
      "terms": [
        {
          "class": "Application",
          "value": "LightAutoML",
          "start_pos": 18
        }
      ],
      "relations": []
    },
    {
      "id": 125,
      "text": "Библиотека предоставляет не только получение стандартных признаков на основе TF-IDF, но и на основе эмбеддингов:1) На основе встроенного FastText, который можно тренировать на том или ином корпусе2) Предобученных моделей Gensim3) Любой другой объект, который имеет вид словаря, где на вход подается слово, а на выходе его эмбеддинги",
      "terms": [
        {
          "class": "Library",
          "value": "Библиотека",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 77
        },
        {
          "class": "Object",
          "value": "эмбеддингов",
          "start_pos": 100
        },
        {
          "class": "Model",
          "value": "FastText",
          "start_pos": 137
        },
        {
          "class": "Model",
          "value": "Gensim3",
          "start_pos": 221
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "FastText",
            "start_pos": 137
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Библиотека",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Gensim3",
            "start_pos": 221
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Библиотека",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "Библиотека",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "эмбеддингов",
            "start_pos": 100
          }
        }
      ]
    },
    {
      "id": 126,
      "text": "Среди используемых стратегий извлечения представлений текстов из эмбеддингов слов, можно выделить:1) Weighted Average Transformer (WAT) – взвешивается каждое слово с некоторым весом",
      "terms": [
        {
          "class": "Method",
          "value": "Weighted Average Transformer",
          "start_pos": 101
        },
        {
          "class": "Method",
          "value": "WAT",
          "start_pos": 131
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "WAT",
            "start_pos": 131
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Weighted Average Transformer",
            "start_pos": 101
          }
        }
      ]
    },
    {
      "id": 127,
      "text": "Bag of Random Embedding Projections (BOREP) – строится линейная модель со случайными весами",
      "terms": [
        {
          "class": "Method",
          "value": "Bag of Random Embedding Projections",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "BOREP",
          "start_pos": 37
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "BOREP",
            "start_pos": 37
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Bag of Random Embedding Projections",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 128,
      "text": "Bert Pooling – получение эмбеддинга с последнего выхода модели Transformer",
      "terms": [
        {
          "class": "Method",
          "value": "Bert Pooling",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "модели Transformer",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 129,
      "text": "За препроцессинг текста отвечает класс токенайзера, по умолчанию применяется только для TF-IDF.",
      "terms": [
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 88
        }
      ],
      "relations": []
    },
    {
      "id": 130,
      "text": "Подводя итоги стоит сказать, что LightAutoML благодаря встроенному инструментарию способен показывать достаточно хорошие результаты в задачах бинарной или мультиклассовой классификации и регрессии.",
      "terms": [
        {
          "class": "Application",
          "value": "LightAutoML",
          "start_pos": 33
        },
        {
          "class": "Task",
          "value": "бинарной или мультиклассовой классификации",
          "start_pos": 142
        },
        {
          "class": "Task",
          "value": "регрессии",
          "start_pos": 187
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "LightAutoML",
            "start_pos": 33
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "бинарной или мультиклассовой классификации",
            "start_pos": 142
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "LightAutoML",
            "start_pos": 33
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "регрессии",
            "start_pos": 187
          }
        }
      ]
    },
    {
      "id": 131,
      "text": "Конкретно в нашем случае нам удалось создать модель сентиментного анализа, которая с 89% точностью определяет эмоциональный окрас обращения и слова, которые оказывают на это наибольшее влияние.",
      "terms": [
        {
          "class": "Value",
          "value": "89%",
          "start_pos": 85
        },
        {
          "class": "Metric",
          "value": "точностью",
          "start_pos": 89
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точностью",
            "start_pos": 89
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "89%",
            "start_pos": 85
          }
        }
      ]
    },
    {
      "id": 132,
      "text": "Яндекс открывает датасеты Беспилотных автомобилей, Погоды и Переводчика, чтобы помочь решить проблему сдвига данных в ML",
      "terms": [
        {
          "class": "Organization",
          "value": "Яндекс",
          "start_pos": 0
        },
        {
          "class": "Dataset",
          "value": "датасеты",
          "start_pos": 17
        },
        {
          "class": "Task",
          "value": "сдвига данных",
          "start_pos": 102
        },
        {
          "class": "Science",
          "value": "ML",
          "start_pos": 118
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "сдвига данных",
            "start_pos": 102
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "ML",
            "start_pos": 118
          }
        }
      ]
    },
    {
      "id": 133,
      "text": "Для современных моделей, которые используются в машинном переводе, такой язык представляет серьезную проблему, так как большинство переводчиков обучаются на чуть более формальном языке: классической литературе, юридических документах или статьях Википедии.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "классической литературе",
          "start_pos": 186
        },
        {
          "class": "InfoResource",
          "value": "юридических документах",
          "start_pos": 211
        },
        {
          "class": "InfoResource",
          "value": "статьях",
          "start_pos": 238
        },
        {
          "class": "InfoResource",
          "value": "Википедии",
          "start_pos": 246
        }
      ],
      "relations": []
    },
    {
      "id": 134,
      "text": "В треке перевода мы использовали для обучения англо-русский корпус WMT’20, который в основном состоит из государственных и новостных текстов.",
      "terms": [
        {
          "class": "Corpus",
          "value": "WMT’20",
          "start_pos": 67
        },
        {
          "class": "InfoResource",
          "value": "новостных текстов",
          "start_pos": 123
        }
      ],
      "relations": []
    },
    {
      "id": 135,
      "text": "Данные без сдвига взяты из англо-русского корпуса Newstest’19, а также из корпуса новостных текстов, собранных службой Global Voices и переведенных Яндексом.",
      "terms": [
        {
          "class": "Lang",
          "value": "англо",
          "start_pos": 27
        },
        {
          "class": "Lang",
          "value": "русского",
          "start_pos": 33
        },
        {
          "class": "Corpus",
          "value": "Newstest’19",
          "start_pos": 50
        },
        {
          "class": "Corpus",
          "value": "корпуса новостных текстов",
          "start_pos": 74
        },
        {
          "class": "Organization",
          "value": "Global Voices",
          "start_pos": 119
        },
        {
          "class": "Organization",
          "value": "Яндексом",
          "start_pos": 148
        }
      ],
      "relations": []
    },
    {
      "id": 136,
      "text": "Данные со сдвигом для отладки взяты из подготовленного для WMT Robustness Challenge корпуса Reddit и также переведены Яндексом.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Reddit",
          "start_pos": 92
        },
        {
          "class": "Organization",
          "value": "Яндексом",
          "start_pos": 118
        }
      ],
      "relations": []
    },
    {
      "id": 137,
      "text": "Для проверки модели на данных со сдвигом мы также собрали, перевели и разметили дополнительные данные с Reddit.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Reddit",
          "start_pos": 104
        }
      ],
      "relations": []
    },
    {
      "id": 138,
      "text": "Парсить комментарии мы будем с помощью официального API ВКонтакте для Python",
      "terms": [
        {
          "class": "Application",
          "value": "API ВКонтакте",
          "start_pos": 52
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 70
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 70
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "API ВКонтакте",
            "start_pos": 52
          }
        }
      ]
    },
    {
      "id": 139,
      "text": "Необходимо убрать из комментария направление, чтобы при поиске расстояния Левенштейна меньше ошибаться.",
      "terms": [
        {
          "class": "Metric",
          "value": "расстояния Левенштейна",
          "start_pos": 63
        }
      ],
      "relations": []
    },
    {
      "id": 140,
      "text": "Небольшая справка: расстояние Левенштейна — минимальное количество операций вставки одного символа, удаления одного символа и замены одного символа на другой, необходимых для превращения одной строки в другую.",
      "terms": [
        {
          "class": "Metric",
          "value": "расстояние Левенштейна",
          "start_pos": 19
        }
      ],
      "relations": []
    },
    {
      "id": 141,
      "text": "Его мы будем находить с помощью библиотеки fuzzywuzzy.",
      "terms": [
        {
          "class": "Library",
          "value": "fuzzywuzzy",
          "start_pos": 43
        }
      ],
      "relations": []
    },
    {
      "id": 142,
      "text": "Для ускорения работы авторы библиотеки советуют также установить библиотеку python-Levenshtein.",
      "terms": [
        {
          "class": "Library",
          "value": "python-Levenshtein",
          "start_pos": 76
        }
      ],
      "relations": []
    },
    {
      "id": 143,
      "text": "Его мне любезно предоставил разработчик приложения GoTrans, Александр Козлов.",
      "terms": [
        {
          "class": "Application",
          "value": "GoTrans",
          "start_pos": 51
        },
        {
          "class": "Person",
          "value": "Александр Козлов",
          "start_pos": 60
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "GoTrans",
            "start_pos": 51
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Александр Козлов",
            "start_pos": 60
          }
        }
      ]
    },
    {
      "id": 144,
      "text": "Александр Козлов, разработчик приложения GoTrans, любезно предоставил его мне.",
      "terms": [
        {
          "class": "Person",
          "value": "Александр Козлов",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "GoTrans",
          "start_pos": 41
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "GoTrans",
            "start_pos": 41
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Александр Козлов",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 145,
      "text": "Самый сложный кроссворд, составленный компьютером",
      "terms": [
        {
          "class": "Object",
          "value": "кроссворд",
          "start_pos": 14
        }
      ],
      "relations": []
    },
    {
      "id": 145,
      "text": "Пример Deep Blue показывает, что программы ИИ могут участвовать в викторинах и обыгрывать людей.",
      "terms": [
        {
          "class": "Application",
          "value": "Deep Blue",
          "start_pos": 7
        },
        {
          "class": "Object",
          "value": "викторинах",
          "start_pos": 66
        }
      ],
      "relations": []
    },
    {
      "id": 146,
      "text": "Американский разработчик Мэтью Гинсберг (Matthew Ginsberg) создал программу под названием Dr Fill, которая справляется с кроссвордами гораздо лучше, чем абсолютное большинство людей, пишет New Scientist.",
      "terms": [
        {
          "class": "Person",
          "value": "Мэтью Гинсберг",
          "start_pos": 25
        },
        {
          "class": "Person",
          "value": "Matthew Ginsberg",
          "start_pos": 41
        },
        {
          "class": "Application",
          "value": "Dr Fill",
          "start_pos": 90
        },
        {
          "class": "Object",
          "value": "кроссвордами",
          "start_pos": 121
        },
        {
          "class": "Organization",
          "value": "New Scientist",
          "start_pos": 189
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Dr Fill",
            "start_pos": 90
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "кроссвордами",
            "start_pos": 121
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Dr Fill",
            "start_pos": 90
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Мэтью Гинсберг",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Dr Fill",
            "start_pos": 90
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Matthew Ginsberg",
            "start_pos": 41
          }
        }
      ]
    },
    {
      "id": 147,
      "text": "Программа Dr Fill, разработанная американским специалистом Мэтью Гинсбергом (Matthew Ginsberg), согласно информации из издания New Scientist, проявляет более выдающуюся эффективность в решении кроссвордов по сравнению с абсолютным большинством людей.",
      "terms": [
        {
          "class": "Application",
          "value": "Dr Fill",
          "start_pos": 10
        },
        {
          "class": "Person",
          "value": "Мэтью Гинсбергом",
          "start_pos": 59
        },
        {
          "class": "Person",
          "value": "Matthew Ginsberg",
          "start_pos": 77
        },
        {
          "class": "Organization",
          "value": "New Scientist",
          "start_pos": 127
        },
        {
          "class": "Object",
          "value": "кроссвордов",
          "start_pos": 193
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Dr Fill",
            "start_pos": 10
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "кроссвордов",
            "start_pos": 193
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Dr Fill",
            "start_pos": 10
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Мэтью Гинсбергом",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Dr Fill",
            "start_pos": 10
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Matthew Ginsberg",
            "start_pos": 77
          }
        }
      ]
    },
    {
      "id": 148,
      "text": "Анализ тональности текстов с помощью сверточных нейронных сетей",
      "terms": [
        {
          "class": "Task",
          "value": "Анализ тональности текстов",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "сверточных нейронных сетей",
          "start_pos": 37
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "сверточных нейронных сетей",
            "start_pos": 37
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "Анализ тональности текстов",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 149,
      "text": "Есть много способов решать такую задачу, и один из них — свёрточные нейронные сети (Convolutional Neural Networks).",
      "terms": [
        {
          "class": "Method",
          "value": "свёрточные нейронные сети",
          "start_pos": 57
        },
        {
          "class": "Method",
          "value": "Convolutional Neural Networks",
          "start_pos": 84
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Convolutional Neural Networks",
            "start_pos": 84
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "свёрточные нейронные сети",
            "start_pos": 57
          }
        }
      ]
    },
    {
      "id": 150,
      "text": "CNN изначально были разработаны для обработки изображений, однако они успешно справляются с решением задач в сфере автоматической обработки текстов.",
      "terms": [
        {
          "class": "Method",
          "value": "CNN",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "обработки изображений",
          "start_pos": 36
        },
        {
          "class": "Science",
          "value": "автоматической обработки текстов",
          "start_pos": 115
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 0
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "обработки изображений",
            "start_pos": 36
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "автоматической обработки текстов",
            "start_pos": 115
          }
        }
      ]
    },
    {
      "id": 151,
      "text": "Я познакомлю вас с бинарным анализом тональности русскоязычных текстов с помощью свёрточной нейронной сети, для которой векторные представления слов были сформированы на основе обученной Word2Vec модели.",
      "terms": [
        {
          "class": "Method",
          "value": "бинарным анализом тональности русскоязычных текстов",
          "start_pos": 19
        },
        {
          "class": "Model",
          "value": "свёрточной нейронной сети",
          "start_pos": 81
        },
        {
          "class": "Object",
          "value": "векторные представления слов",
          "start_pos": 120
        },
        {
          "class": "Model",
          "value": "Word2Vec",
          "start_pos": 187
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "бинарным анализом тональности русскоязычных текстов",
            "start_pos": 19
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "векторные представления слов",
            "start_pos": 120
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "бинарным анализом тональности русскоязычных текстов",
            "start_pos": 19
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "свёрточной нейронной сети",
            "start_pos": 81
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "бинарным анализом тональности русскоязычных текстов",
            "start_pos": 19
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "Word2Vec",
            "start_pos": 187
          }
        }
      ]
    },
    {
      "id": 152,
      "text": "Для обучения я выбрал корпус коротких текстов Юлии Рубцовой, сформированный на основе русскоязычных сообщений из Twitter [4].",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпус коротких текстов Юлии Рубцовой",
          "start_pos": 22
        },
        {
          "class": "Lang",
          "value": "русскоязычных",
          "start_pos": 86
        },
        {
          "class": "Object",
          "value": "сообщений",
          "start_pos": 100
        },
        {
          "class": "Application",
          "value": "Twitter",
          "start_pos": 113
        }
      ],
      "relations": []
    },
    {
      "id": 153,
      "text": "Визуализация кластеров похожих слов с использование t-SNE.",
      "terms": [
        {
          "class": "Object",
          "value": "кластеров",
          "start_pos": 13
        },
        {
          "class": "Method",
          "value": "t-SNE",
          "start_pos": 52
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "t-SNE",
            "start_pos": 52
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "кластеров",
            "start_pos": 13
          }
        }
      ]
    },
    {
      "id": 154,
      "text": "На следующем этапе каждый текст был отображен в массив идентификаторов токенов.",
      "terms": [
        {
          "class": "Object",
          "value": "текст",
          "start_pos": 26
        },
        {
          "class": "Object",
          "value": "токенов",
          "start_pos": 71
        }
      ],
      "relations": []
    },
    {
      "id": 155,
      "text": "Вот пусть комментаторы поправят, но кроме модуля LanguageTool для Open Office (о нём мы ещё поговорим) даже в голову ничего не приходит.",
      "terms": [
        {
          "class": "Application",
          "value": "LanguageTool",
          "start_pos": 49
        },
        {
          "class": "Application",
          "value": "Open Office",
          "start_pos": 66
        }
      ],
      "relations": []
    },
    {
      "id": 156,
      "text": "Было бы здорово составить базу с инструкциями не для людей, а для роботов, подумали инженеры из Института искусственного интеллекта при Бременском университете (Германия), авторы проекта RoboHow.",
      "terms": [
        {
          "class": "Object",
          "value": "инструкциями",
          "start_pos": 33
        },
        {
          "class": "Organization",
          "value": "Института искусственного интеллекта",
          "start_pos": 96
        },
        {
          "class": "Organization",
          "value": "Бременском университете",
          "start_pos": 136
        },
        {
          "class": "Activity",
          "value": "RoboHow",
          "start_pos": 187
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "RoboHow",
            "start_pos": 187
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Института искусственного интеллекта",
            "start_pos": 96
          }
        },
        {
          "term1": {
            "class": "Activity",
            "value": "RoboHow",
            "start_pos": 187
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Бременском университете",
            "start_pos": 136
          }
        }
      ]
    },
    {
      "id": 157,
      "text": "Инженеры из Института искусственного интеллекта при Бременском университете (Германия), участники проекта RoboHow, рассматривают возможность создания базы данных с инструкциями, предназначенными не для людей, а для роботов.",
      "terms": [
        {
          "class": "Organization",
          "value": "Института искусственного интеллекта",
          "start_pos": 12
        },
        {
          "class": "Organization",
          "value": "Бременском университете",
          "start_pos": 52
        },
        {
          "class": "Activity",
          "value": "RoboHow",
          "start_pos": 106
        },
        {
          "class": "Object",
          "value": "инструкциями",
          "start_pos": 164
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "RoboHow",
            "start_pos": 106
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Института искусственного интеллекта",
            "start_pos": 12
          }
        },
        {
          "term1": {
            "class": "Activity",
            "value": "RoboHow",
            "start_pos": 106
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Бременском университете",
            "start_pos": 52
          }
        }
      ]
    },
    {
      "id": 158,
      "text": "С такой базой wiki-инструкций роботы смогут передавать информацию друг другу.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "wiki-инструкций",
          "start_pos": 14
        }
      ],
      "relations": []
    },
    {
      "id": 159,
      "text": "Созданный в Бременском университете робот PR2 (на фото вверху) учится понимать и выполнять «человеческие» инструкции из базы WikiHow.",
      "terms": [
        {
          "class": "Organization",
          "value": "Бременском университете",
          "start_pos": 12
        },
        {
          "class": "Application",
          "value": "PR2",
          "start_pos": 42
        },
        {
          "class": "Object",
          "value": "инструкции",
          "start_pos": 106
        },
        {
          "class": "InfoResource",
          "value": "WikiHow",
          "start_pos": 125
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "PR2",
            "start_pos": 42
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Бременском университете",
            "start_pos": 12
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "PR2",
            "start_pos": 42
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "инструкции",
            "start_pos": 106
          }
        }
      ]
    },
    {
      "id": 161,
      "text": "Успешно выполнив задачу, то есть усвоив урок, робот делится приобретёнными знаниями со своими собратьями через онлайновую базу Open Ease.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Open Ease",
          "start_pos": 127
        }
      ],
      "relations": []
    },
    {
      "id": 162,
      "text": "Здесь инструкции записаны в машиночитаемом виде, на языке, похожем на язык Семантической сети.",
      "terms": [
        {
          "class": "Object",
          "value": "инструкции",
          "start_pos": 6
        },
        {
          "class": "Application",
          "value": "Семантической сети",
          "start_pos": 75
        }
      ],
      "relations": []
    },
    {
      "id": 163,
      "text": "Это очень сложная задача, которая сочетает в себе тесную интеграцию распознавания речи, интерпретации команд на естественном языке, машинного зрения и планирования сложных действий через алгоритмы осуществления отдельных манипуляций.",
      "terms": [
        {
          "class": "Task",
          "value": "распознавания речи",
          "start_pos": 68
        },
        {
          "class": "Task",
          "value": "интерпретации команд на естественном языке",
          "start_pos": 88
        }
      ],
      "relations": []
    },
    {
      "id": 164,
      "text": "«М.видео-Эльдорадо» внедряет нейросеть для ответов на вопросы покупателей",
      "terms": [
        {
          "class": "Organization",
          "value": "М.видео-Эльдорадо",
          "start_pos": 1
        },
        {
          "class": "Model",
          "value": "нейросеть",
          "start_pos": 29
        },
        {
          "class": "Task",
          "value": "ответов на вопросы",
          "start_pos": 43
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "нейросеть",
            "start_pos": 29
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "ответов на вопросы",
            "start_pos": 43
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "нейросеть",
            "start_pos": 29
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "М.видео-Эльдорадо",
            "start_pos": 1
          }
        }
      ]
    },
    {
      "id": 165,
      "text": "Президент Ассоциации больших данных Анна Серебряникова отметила, что ИИ в ретейле может применяться для прогнозирования открытия новых торговых точек, а также для персонализации предложений для клиентов и создания чат-ботов для службы поддержки.",
      "terms": [
        {
          "class": "Organization",
          "value": "Ассоциации больших данных",
          "start_pos": 10
        },
        {
          "class": "Person",
          "value": "Анна Серебряникова",
          "start_pos": 36
        },
        {
          "class": "Task",
          "value": "персонализации предложений",
          "start_pos": 163
        },
        {
          "class": "Task",
          "value": "создания чат-ботов",
          "start_pos": 205
        }
      ],
      "relations": []
    },
    {
      "id": 166,
      "text": "В Facebook AI продемонстрировали прямой машинный перевод с одного языка на другой",
      "terms": [
        {
          "class": "Organization",
          "value": "Facebook AI",
          "start_pos": 2
        }
      ],
      "relations": []
    },
    {
      "id": 167,
      "text": "Facebook AI представила новую систему машинного перевода M2M-100 с 15 млрд параметров.",
      "terms": [
        {
          "class": "Organization",
          "value": "Facebook AI",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "M2M-100",
          "start_pos": 57
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "M2M-100",
            "start_pos": 57
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook AI",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 168,
      "text": "Она способна переводить с одного языка на другой напрямую, не используя английский в качестве промежуточного.",
      "terms": [
        {
          "class": "Task",
          "value": "переводить с одного языка на другой",
          "start_pos": 13
        }
      ],
      "relations": []
    },
    {
      "id": 169,
      "text": "Она способна осуществлять переводы между парами из ста языков.",
      "terms": [
        {
          "class": "Task",
          "value": "переводы",
          "start_pos": 26
        }
      ],
      "relations": []
    },
    {
      "id": 170,
      "text": "Модель обучали на наборе данных из более чем 7,5 млрд предложений как из базы Facebook, так и из других источников.",
      "terms": [
        {
          "class": "Model",
          "value": "Модель",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 78
        }
      ],
      "relations": []
    },
    {
      "id": 171,
      "text": "При разработке использовали инструмент CommonCrawl, который поддерживает открытый репозиторий данных веб-сканирования, и систему классификации текстов FastText, которую в Facebook представили несколько лет назад.",
      "terms": [
        {
          "class": "Application",
          "value": "CommonCrawl",
          "start_pos": 39
        },
        {
          "class": "Application",
          "value": "FastText",
          "start_pos": 151
        },
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 171
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "FastText",
            "start_pos": 151
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook",
            "start_pos": 171
          }
        }
      ]
    },
    {
      "id": 172,
      "text": "Согласно метрикам BLEU, M2M-100 на 10 баллов опережает предшественника, где английский язык был промежуточным.",
      "terms": [
        {
          "class": "Metric",
          "value": "BLEU",
          "start_pos": 18
        },
        {
          "class": "Model",
          "value": "M2M-100",
          "start_pos": 24
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "BLEU",
            "start_pos": 18
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "M2M-100",
            "start_pos": 24
          }
        }
      ]
    },
    {
      "id": 173,
      "text": "Facebook AI отмечает, что эта модель может быть полезной не только при машинном переводе, но и при изучении языков.",
      "terms": [
        {
          "class": "Organization",
          "value": "Facebook AI",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 30
        },
        {
          "class": "Task",
          "value": "машинном переводе",
          "start_pos": 71
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 30
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "машинном переводе",
            "start_pos": 71
          }
        }
      ]
    },
    {
      "id": 174,
      "text": "Я тестировала Google Translate на одних и тех же текстах в марте и декабре 2011, январе 2016 и декабре 2017 года.",
      "terms": [
        {
          "class": "Application",
          "value": "Google Translate",
          "start_pos": 14
        }
      ],
      "relations": []
    },
    {
      "id": 175,
      "text": "Брала одни и те же отрывки на английском, русском, немецком, французском, украинском и польском языках и переводила каждый на остальные пять языков из выборки.",
      "terms": [
        {
          "class": "Lang",
          "value": "английском",
          "start_pos": 30
        },
        {
          "class": "Lang",
          "value": "русском",
          "start_pos": 42
        },
        {
          "class": "Lang",
          "value": "немецком",
          "start_pos": 51
        },
        {
          "class": "Lang",
          "value": "французском",
          "start_pos": 61
        },
        {
          "class": "Lang",
          "value": "украинском",
          "start_pos": 74
        },
        {
          "class": "Lang",
          "value": "польском",
          "start_pos": 87
        }
      ],
      "relations": []
    },
    {
      "id": 176,
      "text": "Результаты cross-verification в целом совпали с тенденциями в первоначальной выборке.",
      "terms": [
        {
          "class": "Method",
          "value": "cross-verification",
          "start_pos": 11
        }
      ],
      "relations": []
    },
    {
      "id": 177,
      "text": "С марта 2017 года нейросеть стали использовать для перевода на русский.",
      "terms": [
        {
          "class": "Date",
          "value": "2017",
          "start_pos": 8
        },
        {
          "class": "Model",
          "value": "нейросеть",
          "start_pos": 18
        },
        {
          "class": "Task",
          "value": "перевода",
          "start_pos": 51
        },
        {
          "class": "Lang",
          "value": "русский",
          "start_pos": 63
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "нейросеть",
            "start_pos": 18
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "перевода",
            "start_pos": 51
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "нейросеть",
            "start_pos": 18
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русский",
            "start_pos": 63
          }
        }
      ]
    },
    {
      "id": 178,
      "text": "Сервис не переводит дословно, результат стал более свободным: адекватная перефразировка, перегруппировка слов, перестановка слов из начала в конец предложения, если того требуют правила языка (в немецком это реализовано великолепно).",
      "terms": [
        {
          "class": "Task",
          "value": "перефразировка",
          "start_pos": 73
        },
        {
          "class": "Task",
          "value": "перегруппировка слов",
          "start_pos": 89
        },
        {
          "class": "Task",
          "value": "перестановка слов",
          "start_pos": 111
        },
        {
          "class": "Lang",
          "value": "немецком",
          "start_pos": 195
        }
      ],
      "relations": []
    },
    {
      "id": 179,
      "text": "В отличие от предыдущего уровня (phrase-based translation– однократное нахождение соответствий отдельных слов и фраз), нейронный переводчик в какой-то степени трансформирует предложения, анализирует их как единое целое и устанавливает соответствия «из конца в конец» в несколько стадий(end-to-end mapping – сквозное преобразование, полного цикла, непрерывная трансформация многообразия данных со входа на выход).",
      "terms": [
        {
          "class": "Method",
          "value": "phrase-based translation",
          "start_pos": 33
        },
        {
          "class": "Method",
          "value": "однократное нахождение соответствий отдельных слов",
          "start_pos": 59
        },
        {
          "class": "Method",
          "value": "end-to-end mapping",
          "start_pos": 286
        },
        {
          "class": "Method",
          "value": "сквозное преобразование",
          "start_pos": 307
        },
        {
          "class": "Method",
          "value": "трансформация многообразия данных",
          "start_pos": 359
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "сквозное преобразование",
            "start_pos": 307
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "end-to-end mapping",
            "start_pos": 286
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "однократное нахождение соответствий отдельных слов",
            "start_pos": 59
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "phrase-based translation",
            "start_pos": 33
          }
        }
      ]
    },
    {
      "id": 180,
      "text": "Сейчас в Яндексе мой основной проект это Алиса, голосовой помощник, который Яндекс запустил в октябре прошлого года, и моя группа отвечает за то, что можно условно назвать мозгами Алисы.",
      "terms": [
        {
          "class": "Organization",
          "value": "Яндексе",
          "start_pos": 9
        },
        {
          "class": "Application",
          "value": "Алиса",
          "start_pos": 41
        },
        {
          "class": "Application",
          "value": "голосовой помощник",
          "start_pos": 48
        },
        {
          "class": "Organization",
          "value": "Яндекс",
          "start_pos": 76
        },
        {
          "class": "Application",
          "value": "Алисы",
          "start_pos": 180
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Алиса",
            "start_pos": 41
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Яндексе",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 181,
      "text": "Мы интерпретируем то, что сказал пользователь на естественном языке и превращаем это в некоторое структурированное представление.",
      "terms": [
        {
          "class": "Object",
          "value": "естественном языке",
          "start_pos": 49
        },
        {
          "class": "Object",
          "value": "структурированное",
          "start_pos": 97
        },
        {
          "class": "Object",
          "value": "представление",
          "start_pos": 115
        }
      ],
      "relations": []
    },
    {
      "id": 182,
      "text": "Есть Siri, единственный голосовой помощник, который тоже понимает русский язык, но он работает только на iOS и MacOS, это как бы не самая популярная платформа в России, и к Siri как к продукту тоже есть определенные вопросы.",
      "terms": [
        {
          "class": "Application",
          "value": "Siri",
          "start_pos": 5
        },
        {
          "class": "Application",
          "value": "голосовой помощник",
          "start_pos": 24
        },
        {
          "class": "Lang",
          "value": "русский",
          "start_pos": 66
        },
        {
          "class": "Environment",
          "value": "iOS",
          "start_pos": 105
        },
        {
          "class": "Environment",
          "value": "MacOS",
          "start_pos": 111
        },
        {
          "class": "Application",
          "value": "Siri",
          "start_pos": 173
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "iOS",
            "start_pos": 105
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Siri",
            "start_pos": 5
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "MacOS",
            "start_pos": 111
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Siri",
            "start_pos": 5
          }
        }
      ]
    },
    {
      "id": 183,
      "text": "На самом деле у нас уже есть модель которая оценивает градацию этой оскорбительности, и если бы возникла продуктовая необходимость, мы уже могли бы сделать такой ползунок который делает ответы более или менее дерзкими.",
      "terms": [
        {
          "class": "Task",
          "value": "оценивает градацию этой оскорбительности",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 184,
      "text": "Это генеративная нейронная сеть, способная решать множество задач по обработке естествнного языка (NLP).",
      "terms": [
        {
          "class": "Method",
          "value": "генеративная нейронная сеть",
          "start_pos": 4
        },
        {
          "class": "Task",
          "value": "задач по обработке естествнного языка",
          "start_pos": 60
        },
        {
          "class": "Task",
          "value": "NLP",
          "start_pos": 99
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "генеративная нейронная сеть",
            "start_pos": 4
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "задач по обработке естествнного языка",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "генеративная нейронная сеть",
            "start_pos": 4
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "NLP",
            "start_pos": 99
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NLP",
            "start_pos": 99
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "задач по обработке естествнного языка",
            "start_pos": 60
          }
        }
      ]
    },
    {
      "id": 185,
      "text": "Это такие задачи как суммаризация (сделать из большого текста его резюме), понимание текста (NLU), вопросно-ответные системы, генерация (например, стихов, — на Хабре была хорошая статья) и другие.",
      "terms": [
        {
          "class": "Task",
          "value": "суммаризация",
          "start_pos": 21
        },
        {
          "class": "Task",
          "value": "понимание текста",
          "start_pos": 75
        },
        {
          "class": "Task",
          "value": "NLU",
          "start_pos": 93
        },
        {
          "class": "Application",
          "value": "вопросно-ответные системы",
          "start_pos": 99
        },
        {
          "class": "Task",
          "value": "генерация",
          "start_pos": 126
        },
        {
          "class": "Organization",
          "value": "Хабре",
          "start_pos": 160
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "NLU",
            "start_pos": 93
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "понимание текста",
            "start_pos": 75
          }
        }
      ]
    },
    {
      "id": 186,
      "text": "Используя новый алгоритм упаковки, в Graphcore ускорили обработку естественного языка более чем в 2 раза при обучении BERT-Large.",
      "terms": [
        {
          "class": "Method",
          "value": "алгоритм упаковки",
          "start_pos": 16
        },
        {
          "class": "Organization",
          "value": "Graphcore",
          "start_pos": 37
        },
        {
          "class": "Activity",
          "value": "ускорили обработку",
          "start_pos": 47
        },
        {
          "class": "Object",
          "value": "естественного языка",
          "start_pos": 66
        },
        {
          "class": "Model",
          "value": "BERT-Large",
          "start_pos": 118
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм упаковки",
            "start_pos": 16
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "BERT-Large",
            "start_pos": 118
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм упаковки",
            "start_pos": 16
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Graphcore",
            "start_pos": 37
          }
        }
      ]
    },
    {
      "id": 187,
      "text": "В Graphcore предполагают, что алгоритм упаковки также может применяться в геномике, в моделях фолдинга белков и других моделях с перекошенным распределением длины, оказывая гораздо более широкое влияние на различные отрасли и приложения.",
      "terms": [
        {
          "class": "Organization",
          "value": "Graphcore",
          "start_pos": 2
        },
        {
          "class": "Method",
          "value": "алгоритм упаковки",
          "start_pos": 30
        },
        {
          "class": "Science",
          "value": "геномике",
          "start_pos": 74
        },
        {
          "class": "Model",
          "value": "моделях фолдинга",
          "start_pos": 86
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм упаковки",
            "start_pos": 30
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "геномике",
            "start_pos": 74
          }
        }
      ]
    },
    {
      "id": 188,
      "text": "В Graphcore считают, что алгоритм упаковки может быть успешно применен не только в области геномики, но и в моделях фолдинга белков и других моделях с неравномерным распределением длины.",
      "terms": [
        {
          "class": "Organization",
          "value": "Graphcore",
          "start_pos": 2
        },
        {
          "class": "Method",
          "value": "алгоритм упаковки",
          "start_pos": 25
        },
        {
          "class": "Science",
          "value": "геномики",
          "start_pos": 91
        },
        {
          "class": "Model",
          "value": "моделях фолдинга белков",
          "start_pos": 108
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм упаковки",
            "start_pos": 25
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "геномики",
            "start_pos": 91
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм упаковки",
            "start_pos": 25
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Graphcore",
            "start_pos": 2
          }
        }
      ]
    },
    {
      "id": 189,
      "text": "В новой работе Graphcore представили высокоэффективный алгоритм гистограммной упаковки с неотрицательными наименьшими квадратами (или NNLSHP), а также алгоритм BERT, применяемый к упакованным последовательностям.",
      "terms": [
        {
          "class": "Organization",
          "value": "Graphcore",
          "start_pos": 15
        },
        {
          "class": "Method",
          "value": "алгоритм гистограммной упаковки с неотрицательными наименьшими квадратами",
          "start_pos": 55
        },
        {
          "class": "Method",
          "value": "NNLSHP",
          "start_pos": 134
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 160
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "NNLSHP",
            "start_pos": 134
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "алгоритм гистограммной упаковки с неотрицательными наименьшими квадратами",
            "start_pos": 55
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм гистограммной упаковки с неотрицательными наименьшими квадратами",
            "start_pos": 55
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Graphcore",
            "start_pos": 15
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "NNLSHP",
            "start_pos": 134
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Graphcore",
            "start_pos": 15
          }
        }
      ]
    },
    {
      "id": 190,
      "text": "В последнем исследовании от Graphcore был представлен эффективный алгоритм гистограммной упаковки с использованием неотрицательных наименьших квадратов (NNLSHP), а также алгоритм BERT, примененный к упакованным последовательностям.",
      "terms": [
        {
          "class": "Organization",
          "value": "Graphcore",
          "start_pos": 28
        },
        {
          "class": "Method",
          "value": "алгоритм гистограммной упаковки с использованием неотрицательных наименьших квадратов",
          "start_pos": 66
        },
        {
          "class": "Method",
          "value": "NNLSHP",
          "start_pos": 153
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 179
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "NNLSHP",
            "start_pos": 153
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "алгоритм гистограммной упаковки с использованием неотрицательных наименьших квадратов",
            "start_pos": 66
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм гистограммной упаковки с использованием неотрицательных наименьших квадратов",
            "start_pos": 66
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Graphcore",
            "start_pos": 28
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "NNLSHP",
            "start_pos": 153
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Graphcore",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 191,
      "text": "В Яндекс.Браузер внедрили машинный перевод видеороликов",
      "terms": [
        {
          "class": "Application",
          "value": "Яндекс.Браузер",
          "start_pos": 2
        },
        {
          "class": "Method",
          "value": "машинный перевод",
          "start_pos": 26
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "машинный перевод",
            "start_pos": 26
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Яндекс.Браузер",
            "start_pos": 2
          }
        }
      ]
    },
    {
      "id": 192,
      "text": "Алгоритм отслеживает темп речи говорящего, за счет чего переводчик делает паузы, замедляет или ускоряет речь, чтобы закадровый голос совпадал с картинкой.",
      "terms": [
        {
          "class": "Object",
          "value": "темп речи",
          "start_pos": 21
        },
        {
          "class": "Object",
          "value": "паузы",
          "start_pos": 74
        },
        {
          "class": "Object",
          "value": "речь",
          "start_pos": 104
        },
        {
          "class": "Object",
          "value": "голос",
          "start_pos": 127
        }
      ],
      "relations": []
    },
    {
      "id": 193,
      "text": "Перевод доступен в Яндекс.Браузере для Windows и macOS.",
      "terms": [
        {
          "class": "Application",
          "value": "Яндекс.Браузере",
          "start_pos": 19
        },
        {
          "class": "Environment",
          "value": "Windows",
          "start_pos": 39
        },
        {
          "class": "Environment",
          "value": "macOS",
          "start_pos": 49
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Windows",
            "start_pos": 39
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Яндекс.Браузере",
            "start_pos": 19
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "macOS",
            "start_pos": 49
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Яндекс.Браузере",
            "start_pos": 19
          }
        }
      ]
    },
    {
      "id": 194,
      "text": "Тогда к статистической модели, которая была в «Переводчике» с момента запуска, добавили технологию перевода с помощью нейросети.",
      "terms": [
        {
          "class": "Application",
          "value": "Переводчике",
          "start_pos": 47
        },
        {
          "class": "Task",
          "value": "перевода",
          "start_pos": 99
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Переводчике",
            "start_pos": 47
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "перевода",
            "start_pos": 99
          }
        }
      ]
    },
    {
      "id": 195,
      "text": "\"В июне Яндекс открыл доступ к нейросети «Балабоба» для всех пользователей.\"",
      "terms": [
        {
          "class": "Organization",
          "value": "Яндекс",
          "start_pos": 8
        },
        {
          "class": "Application",
          "value": "Балабоба",
          "start_pos": 42
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Балабоба",
            "start_pos": 42
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Яндекс",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 196,
      "text": "Она работает на языковой модели из семейства YaLM (Yet another Language Model).",
      "terms": [
        {
          "class": "Model",
          "value": "YaLM",
          "start_pos": 45
        },
        {
          "class": "Model",
          "value": "Yet another Language Model",
          "start_pos": 51
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Yet another Language Model",
            "start_pos": 51
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "YaLM",
            "start_pos": 45
          }
        }
      ]
    },
    {
      "id": 197,
      "text": "Она использует языковую модель из семейства YaLM (Yet another Language Model).",
      "terms": [
        {
          "class": "Model",
          "value": "YaLM",
          "start_pos": 44
        },
        {
          "class": "Model",
          "value": "Yet another Language Model",
          "start_pos": 50
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Yet another Language Model",
            "start_pos": 50
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "YaLM",
            "start_pos": 44
          }
        }
      ]
    },
    {
      "id": 198,
      "text": "Эта модель помогает нейросети запоминать правила языка, выбирать подходящие слова и связывать их по смыслу.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 4
        },
        {
          "class": "Task",
          "value": "запоминать правила языка",
          "start_pos": 30
        },
        {
          "class": "Task",
          "value": "выбирать подходящие слова",
          "start_pos": 56
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 4
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "запоминать правила языка",
            "start_pos": 30
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 4
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "выбирать подходящие слова",
            "start_pos": 56
          }
        }
      ]
    },
    {
      "id": 199,
      "text": "У «Балабобы» нет своего мнения, она выдает случайные продолжения и может закончить историю, придумать подпись или написать небольшой рассказ.",
      "terms": [
        {
          "class": "Application",
          "value": "Балабобы",
          "start_pos": 3
        },
        {
          "class": "Task",
          "value": "придумать подпись",
          "start_pos": 92
        },
        {
          "class": "Task",
          "value": "написать небольшой рассказ",
          "start_pos": 114
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Балабобы",
            "start_pos": 3
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "придумать подпись",
            "start_pos": 92
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Балабобы",
            "start_pos": 3
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "написать небольшой рассказ",
            "start_pos": 114
          }
        }
      ]
    },
    {
      "id": 200,
      "text": "AntiToxicBot — бот, распознающий токсичных пользователей в телеграм чатах.",
      "terms": [
        {
          "class": "Application",
          "value": "AntiToxicBot",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "распознающий токсичных пользователей",
          "start_pos": 20
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "AntiToxicBot",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознающий токсичных пользователей",
            "start_pos": 20
          }
        }
      ]
    },
    {
      "id": 201,
      "text": "Почему же выбрано CNN+GRU, а не просто GRU или CNN?",
      "terms": [
        {
          "class": "Method",
          "value": "CNN+GRU",
          "start_pos": 18
        },
        {
          "class": "Method",
          "value": "GRU",
          "start_pos": 39
        },
        {
          "class": "Method",
          "value": "CNN",
          "start_pos": 47
        }
      ],
      "relations": []
    },
    {
      "id": 202,
      "text": "Нейросеть состоит из 3-х основных частей(CNN, GRU, Linear).",
      "terms": [
        {
          "class": "Method",
          "value": "CNN",
          "start_pos": 41
        },
        {
          "class": "Method",
          "value": "GRU",
          "start_pos": 46
        },
        {
          "class": "Method",
          "value": "Linear",
          "start_pos": 51
        }
      ],
      "relations": []
    },
    {
      "id": 203,
      "text": "Как и в классификации картинок, свёрточный слой выделяет “признаки”, но в нашем случае векторизированный текст.",
      "terms": [
        {
          "class": "Object",
          "value": "векторизированный текст",
          "start_pos": 87
        }
      ],
      "relations": []
    },
    {
      "id": 204,
      "text": "То-есть данная часть сети учится выделять признаки токсичных и позитивных сообщений.",
      "terms": [
        {
          "class": "Task",
          "value": "выделять признаки токсичных и позитивных сообщений",
          "start_pos": 33
        }
      ],
      "relations": []
    },
    {
      "id": 205,
      "text": "GRU - Recurrent Neural Network",
      "terms": [
        {
          "class": "Method",
          "value": "GRU",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "Recurrent Neural Network",
          "start_pos": 6
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Recurrent Neural Network",
            "start_pos": 6
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "GRU",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 206,
      "text": "Чтобы обрабатывать последовательности произвольной длины, используют рекуррентные слои.",
      "terms": [
        {
          "class": "Task",
          "value": "обрабатывать последовательности произвольной длины",
          "start_pos": 6
        },
        {
          "class": "Method",
          "value": "рекуррентные слои",
          "start_pos": 69
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "рекуррентные слои",
            "start_pos": 69
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "обрабатывать последовательности произвольной длины",
            "start_pos": 6
          }
        }
      ]
    },
    {
      "id": 207,
      "text": "В архитектуре используется рекуррентный слой GRU.",
      "terms": [
        {
          "class": "Method",
          "value": "GRU",
          "start_pos": 45
        }
      ],
      "relations": []
    },
    {
      "id": 208,
      "text": "Данный слой учится делать заключительное решение по определению тональности текста на основе предыдущих слоёв.",
      "terms": [
        {
          "class": "Task",
          "value": "определению тональности текста",
          "start_pos": 52
        }
      ],
      "relations": []
    },
    {
      "id": 209,
      "text": "Датасет был взят с сайта kaggle.",
      "terms": [
        {
          "class": "Dataset",
          "value": "Датасет",
          "start_pos": 0
        },
        {
          "class": "InfoResource",
          "value": "kaggle",
          "start_pos": 25
        }
      ],
      "relations": []
    },
    {
      "id": 210,
      "text": "Около 14000 комментариев с разметкой токсичное сообщение или нет.",
      "terms": [
        {
          "class": "Method",
          "value": "разметкой",
          "start_pos": 27
        },
        {
          "class": "Object",
          "value": "токсичное сообщение",
          "start_pos": 37
        }
      ],
      "relations": []
    },
    {
      "id": 211,
      "text": "Для решения данной проблемы была использована библиотека Yandex Speller, которая исправляет орфографические ошибки.",
      "terms": [
        {
          "class": "Library",
          "value": "Yandex Speller",
          "start_pos": 57
        },
        {
          "class": "Task",
          "value": "исправляет орфографические ошибки",
          "start_pos": 81
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "Yandex Speller",
            "start_pos": 57
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "исправляет орфографические ошибки",
            "start_pos": 81
          }
        }
      ]
    },
    {
      "id": 212,
      "text": "Можно было обучить собственный Word2Vec на основе данного набора данных, но лучше взять уже обученный.",
      "terms": [
        {
          "class": "Model",
          "value": "Word2Vec",
          "start_pos": 31
        }
      ],
      "relations": []
    },
    {
      "id": 213,
      "text": "Например: Navec.",
      "terms": [
        {
          "class": "Model",
          "value": "Navec",
          "start_pos": 10
        }
      ],
      "relations": []
    },
    {
      "id": 214,
      "text": "Модель обучали на русской литературе (~150gb), что говорит о качественной векторизации текста.",
      "terms": [
        {
          "class": "Model",
          "value": "Модель",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "русской литературе",
          "start_pos": 18
        }
      ],
      "relations": []
    },
    {
      "id": 215,
      "text": "Для классификации используется обыкновенная функция потерь – кросс энтропия.",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 4
        },
        {
          "class": "Method",
          "value": "функция потерь – кросс энтропия",
          "start_pos": 44
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "функция потерь – кросс энтропия",
            "start_pos": 44
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 4
          }
        }
      ]
    },
    {
      "id": 216,
      "text": "При обучении сети надо обращать внимание на основные параметры такие, как loss, precision и accuracy.",
      "terms": [
        {
          "class": "Metric",
          "value": "loss",
          "start_pos": 74
        },
        {
          "class": "Metric",
          "value": "precision",
          "start_pos": 80
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 92
        }
      ],
      "relations": []
    },
    {
      "id": 217,
      "text": "В ~80% случаев нейросеть классифицирует тональность текста правильно.",
      "terms": [
        {
          "class": "Value",
          "value": "~80%",
          "start_pos": 2
        }
      ],
      "relations": []
    },
    {
      "id": 218,
      "text": "Теперь нейронная сеть указала конкретные сцены, написанные не Шекспиром, и определила, кто на самом деле их написал.",
      "terms": [
        {
          "class": "Model",
          "value": "нейронная сеть",
          "start_pos": 7
        }
      ],
      "relations": []
    },
    {
      "id": 219,
      "text": "Плехач обучил алгоритм распознавать стиль Шекспира на пьесах «Кориолан», «Цимбелин», «Зимняя сказка» и «Буря».",
      "terms": [
        {
          "class": "Person",
          "value": "Плехач",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "распознавать стиль",
          "start_pos": 23
        },
        {
          "class": "Object",
          "value": "пьесах",
          "start_pos": 54
        }
      ],
      "relations": []
    },
    {
      "id": 220,
      "text": "В результате искусственный интеллект согласился с анализом Спеддинга.",
      "terms": [
        {
          "class": "Method",
          "value": "анализом",
          "start_pos": 50
        }
      ],
      "relations": []
    },
    {
      "id": 221,
      "text": "В прошлом году учёные из Университета Торонто, Мельбурнского Университета и подразделения IBM в Австралии научили искусственный интеллект генерировать сонеты в шекспировском стиле.",
      "terms": [
        {
          "class": "Organization",
          "value": "Университета Торонто",
          "start_pos": 25
        },
        {
          "class": "Organization",
          "value": "Мельбурнского Университета",
          "start_pos": 47
        },
        {
          "class": "Organization",
          "value": "IBM",
          "start_pos": 90
        }
      ],
      "relations": []
    },
    {
      "id": 222,
      "text": "Алгоритм под названием Deepspeare обучали на 2,7 тыс. сонетов Шекспира, после чего он научился писать собственные, придерживаясь похожего стиля.",
      "terms": [
        {
          "class": "Method",
          "value": "Deepspeare",
          "start_pos": 23
        },
        {
          "class": "Object",
          "value": "сонетов",
          "start_pos": 54
        }
      ],
      "relations": []
    },
    {
      "id": 223,
      "text": "Как научить свою нейросеть генерировать стихи",
      "terms": [
        {
          "class": "Task",
          "value": "генерировать стихи",
          "start_pos": 27
        }
      ],
      "relations": []
    },
    {
      "id": 224,
      "text": "Языковые модели определяют вероятность появления последовательности слов  в данном языке: .",
      "terms": [
        {
          "class": "Task",
          "value": "определяют вероятность появления последовательности слов",
          "start_pos": 16
        },
        {
          "class": "Object",
          "value": "языке",
          "start_pos": 83
        }
      ],
      "relations": []
    },
    {
      "id": 225,
      "text": "Кажется, самым простым способом построить такую модель является использование N-граммной статистики.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 48
        },
        {
          "class": "Method",
          "value": "N-граммной статистики",
          "start_pos": 78
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "N-граммной статистики",
            "start_pos": 78
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "модель",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 226,
      "text": "Для решения такой проблемы используют обычно сглаживание Kneser-Ney или Katz’s backing-off.",
      "terms": [
        {
          "class": "Method",
          "value": "сглаживание Kneser-Ney",
          "start_pos": 45
        },
        {
          "class": "Method",
          "value": "Katz’s backing-off",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 227,
      "text": "За более подробной информацией про методы сглаживания N-грамм стоит обратиться к известной книге Кристофера Маннинга “Foundations of Statistical Natural Language Processing”.",
      "terms": [
        {
          "class": "Method",
          "value": "сглаживания N-грамм",
          "start_pos": 42
        },
        {
          "class": "Person",
          "value": "Кристофера Маннинга",
          "start_pos": 97
        },
        {
          "class": "InfoResource",
          "value": "Foundations of Statistical Natural Language Processing",
          "start_pos": 118
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "сглаживания N-грамм",
            "start_pos": 42
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Кристофера Маннинга",
            "start_pos": 97
          }
        }
      ]
    },
    {
      "id": 228,
      "text": "Хочу заметить, что 5-граммы слов я назвал не просто так: именно их (со сглаживанием, конечно) Google демонстрирует в статье “One Billion Word Benchmark for Measuring Progress in Statistical Language Modeling” — и показывает результаты, весьма сопоставимые с результатами у рекуррентных нейронных сетей — о которых, собственно, и пойдет далее речь.",
      "terms": [
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 94
        },
        {
          "class": "InfoResource",
          "value": "“One Billion Word Benchmark for Measuring Progress in Statistical Language Modeling”",
          "start_pos": 124
        },
        {
          "class": "Method",
          "value": "рекуррентных нейронных сетей",
          "start_pos": 273
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "рекуррентных нейронных сетей",
            "start_pos": 273
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 94
          }
        }
      ]
    },
    {
      "id": 229,
      "text": "Преимущество рекуррентных нейронных сетей — в возможности использовать неограниченно длинный контекст.",
      "terms": [
        {
          "class": "Method",
          "value": "рекуррентных нейронных сетей",
          "start_pos": 13
        },
        {
          "class": "Object",
          "value": "неограниченно длинный контекст",
          "start_pos": 71
        }
      ],
      "relations": []
    },
    {
      "id": 230,
      "text": "На практике классические RNN страдают от затухания градиента — по сути, отсутствия возможности помнить контекст дальше, чем на несколько слов.",
      "terms": [
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 25
        }
      ],
      "relations": []
    },
    {
      "id": 231,
      "text": "Самыми популярными являются LSTM и GRU.",
      "terms": [
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 28
        },
        {
          "class": "Method",
          "value": "GRU",
          "start_pos": 35
        }
      ],
      "relations": []
    },
    {
      "id": 232,
      "text": "В дальнейшем, говоря о рекуррентном слое, я всегда буду подразумевать LSTM.",
      "terms": [
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 233,
      "text": "Вспомним теперь, что для нашей задачи языковая модель нужна для выбора наиболее подходящего следующего слова по уже сгенерированной последовательности.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 47
        },
        {
          "class": "Task",
          "value": "выбора наиболее подходящего следующего слова",
          "start_pos": 64
        },
        {
          "class": "Object",
          "value": "сгенерированной последовательности",
          "start_pos": 116
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "сгенерированной последовательности",
            "start_pos": 116
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "выбора наиболее подходящего следующего слова",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 47
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "выбора наиболее подходящего следующего слова",
            "start_pos": 64
          }
        }
      ]
    },
    {
      "id": 234,
      "text": "Метрические правила определяют последовательность ударных и безударных слогов в строке.",
      "terms": [
        {
          "class": "Object",
          "value": "Метрические правила",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "слогов",
          "start_pos": 71
        }
      ],
      "relations": []
    },
    {
      "id": 235,
      "text": "Для решения этой проблемы мы делаем лучевой поиск (beam search), выбирая на каждом шаге вместо одного сразу N путей с наивысшими вероятностями.",
      "terms": [
        {
          "class": "Method",
          "value": "лучевой поиск",
          "start_pos": 36
        },
        {
          "class": "Method",
          "value": "beam search",
          "start_pos": 51
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "beam search",
            "start_pos": 51
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "лучевой поиск",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 236,
      "text": "Автоматическое определение эмоций в текстовых беседах с использованием нейронных сетей",
      "terms": [
        {
          "class": "Task",
          "value": "Автоматическое определение эмоций",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "текстовых беседах",
          "start_pos": 36
        },
        {
          "class": "Method",
          "value": "нейронных сетей",
          "start_pos": 71
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "нейронных сетей",
            "start_pos": 71
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстовых беседах",
            "start_pos": 36
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "нейронных сетей",
            "start_pos": 71
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "Автоматическое определение эмоций",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "текстовых беседах",
            "start_pos": 36
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "Автоматическое определение эмоций",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 237,
      "text": "Одна из основных задач диалоговых систем состоит не только в предоставлении нужной пользователю информации, но и в генерации как можно более человеческих ответов.",
      "terms": [
        {
          "class": "Application",
          "value": "диалоговых систем",
          "start_pos": 23
        },
        {
          "class": "Task",
          "value": "предоставлении нужной пользователю информации",
          "start_pos": 61
        },
        {
          "class": "Task",
          "value": "генерации",
          "start_pos": 115
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "диалоговых систем",
            "start_pos": 23
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации",
            "start_pos": 115
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "диалоговых систем",
            "start_pos": 23
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "предоставлении нужной пользователю информации",
            "start_pos": 61
          }
        }
      ]
    },
    {
      "id": 238,
      "text": "В этой статье мы рассмотрим архитектуру рекуррентной нейросети для определения эмоций в текстовых беседах, которая принимала участие в SemEval-2019 Task 3 “EmoContext”, ежегодном соревновании по компьютерной лингвистике.",
      "terms": [
        {
          "class": "Method",
          "value": "рекуррентной нейросети",
          "start_pos": 40
        },
        {
          "class": "Task",
          "value": "определения эмоций",
          "start_pos": 67
        },
        {
          "class": "Object",
          "value": "текстовых беседах",
          "start_pos": 88
        },
        {
          "class": "Science",
          "value": "компьютерной лингвистике",
          "start_pos": 195
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "определения эмоций",
            "start_pos": 67
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "компьютерной лингвистике",
            "start_pos": 195
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "рекуррентной нейросети",
            "start_pos": 40
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "компьютерной лингвистике",
            "start_pos": 195
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "текстовых беседах",
            "start_pos": 88
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "определения эмоций",
            "start_pos": 67
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "рекуррентной нейросети",
            "start_pos": 40
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстовых беседах",
            "start_pos": 88
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "рекуррентной нейросети",
            "start_pos": 40
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определения эмоций",
            "start_pos": 67
          }
        }
      ]
    },
    {
      "id": 239,
      "text": "Задача состояла в классификации эмоций (“happy”, “sad”, “angry” и “others”) в беседе из трех реплик, в которой участвовали чат-бот и человек.",
      "terms": [
        {
          "class": "Task",
          "value": "классификации эмоций",
          "start_pos": 18
        }
      ],
      "relations": []
    },
    {
      "id": 240,
      "text": "В четвёртой части мы опишем архитектуру LSTM, которую мы использовали в соревновании.",
      "terms": [
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 40
        }
      ],
      "relations": []
    },
    {
      "id": 241,
      "text": "Код написан на языке Python с использованием библиотеки Keras.",
      "terms": [
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 21
        },
        {
          "class": "Library",
          "value": "Keras",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 242,
      "text": "Подробное описание представлено здесь: (Chatterjee et al., 2019).",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Chatterjee et al., 2019",
          "start_pos": 40
        }
      ],
      "relations": []
    },
    {
      "id": 243,
      "text": "Примеры из датасета EmoContext (Chatterjee et al., 2019)",
      "terms": [
        {
          "class": "Dataset",
          "value": "EmoContext",
          "start_pos": 20
        },
        {
          "class": "InfoResource",
          "value": "Chatterjee et al., 2019",
          "start_pos": 32
        }
      ],
      "relations": []
    },
    {
      "id": 244,
      "text": "Данные предоставлены Microsoft, скачать их можно в официальной группе в LinkedIn.",
      "terms": [
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 21
        },
        {
          "class": "Application",
          "value": "LinkedIn",
          "start_pos": 72
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "LinkedIn",
            "start_pos": 72
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 21
          }
        }
      ]
    },
    {
      "id": 245,
      "text": "В дополнение к этим данным мы собрали 900 тыс. англоязычных сообщений из Twitter, чтобы создать Distant-датасет (300 тыс. твитов на каждую эмоцию).",
      "terms": [
        {
          "class": "Organization",
          "value": "Twitter",
          "start_pos": 73
        },
        {
          "class": "Dataset",
          "value": "Distant",
          "start_pos": 96
        }
      ],
      "relations": []
    },
    {
      "id": 246,
      "text": "При его создании мы придерживались стратегии Go et al. (2009), в рамках которой просто ассоциировали сообщения с наличием относящихся к эмоциям слов, таких как #angry, #annoyed, #happy, #sad, #surprised и так далее.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Go et al. (2009)",
          "start_pos": 45
        },
        {
          "class": "Task",
          "value": "ассоциировали сообщения с наличием относящихся к эмоциям слов",
          "start_pos": 87
        }
      ],
      "relations": []
    },
    {
      "id": 247,
      "text": "Список терминов основан на терминах из SemEval-2018 AIT DISC (Duppada et al., 2018).",
      "terms": [
        {
          "class": "Object",
          "value": "терминов",
          "start_pos": 7
        },
        {
          "class": "Object",
          "value": "терминах",
          "start_pos": 27
        },
        {
          "class": "Dataset",
          "value": "SemEval-2018 AIT DISC",
          "start_pos": 39
        },
        {
          "class": "InfoResource",
          "value": "Duppada et al., 2018",
          "start_pos": 62
        }
      ],
      "relations": []
    },
    {
      "id": 248,
      "text": "Главной метрикой качества в соревновании EmoContext является усредненная F1-мера для трёх классов эмоций, то есть для классов «happy», «sad» и «angry».",
      "terms": [
        {
          "class": "Metric",
          "value": "F1-мера",
          "start_pos": 73
        }
      ],
      "relations": []
    },
    {
      "id": 249,
      "text": "Перед обучением мы предварительно обработали тексты с помощью инструмента Ekphrasis (Baziotis et al., 2017).",
      "terms": [
        {
          "class": "Object",
          "value": "тексты",
          "start_pos": 45
        },
        {
          "class": "Application",
          "value": "Ekphrasis",
          "start_pos": 74
        },
        {
          "class": "InfoResource",
          "value": "Baziotis et al., 2017",
          "start_pos": 85
        }
      ],
      "relations": []
    },
    {
      "id": 250,
      "text": "Он помогает исправить орфографию, нормализовать слова, сегментировать, а также определить, какие токены следует отбросить, нормализовать или аннотировать с помощью специальных тегов.",
      "terms": [
        {
          "class": "Task",
          "value": "исправить орфографию",
          "start_pos": 12
        },
        {
          "class": "Task",
          "value": "нормализовать слова",
          "start_pos": 34
        },
        {
          "class": "Task",
          "value": "сегментировать",
          "start_pos": 55
        },
        {
          "class": "Object",
          "value": "токены",
          "start_pos": 97
        },
        {
          "class": "Object",
          "value": "тегов",
          "start_pos": 176
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "токены",
            "start_pos": 97
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "нормализовать слова",
            "start_pos": 34
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "токены",
            "start_pos": 97
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "сегментировать",
            "start_pos": 55
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "токены",
            "start_pos": 97
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "исправить орфографию",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 251,
      "text": "Кроме того, Emphasis содержит токенизатор, который может идентифицировать большинство эмодзи, эмотиконов и сложных выражений, а также даты, время, валюты и акронимы.",
      "terms": [
        {
          "class": "Application",
          "value": "Emphasis",
          "start_pos": 12
        },
        {
          "class": "Method",
          "value": "токенизатор",
          "start_pos": 30
        },
        {
          "class": "Task",
          "value": "идентифицировать",
          "start_pos": 57
        },
        {
          "class": "Object",
          "value": "эмодзи",
          "start_pos": 86
        },
        {
          "class": "Object",
          "value": "эмотиконов",
          "start_pos": 94
        },
        {
          "class": "Object",
          "value": "сложных выражений",
          "start_pos": 107
        },
        {
          "class": "Object",
          "value": "даты",
          "start_pos": 134
        },
        {
          "class": "Object",
          "value": "время",
          "start_pos": 140
        },
        {
          "class": "Object",
          "value": "валюты",
          "start_pos": 147
        },
        {
          "class": "Object",
          "value": "акронимы",
          "start_pos": 156
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Emphasis",
            "start_pos": 12
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "эмодзи",
            "start_pos": 86
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "эмодзи",
            "start_pos": 86
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "эмотиконов",
            "start_pos": 94
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "эмотиконов",
            "start_pos": 94
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "сложных выражений",
            "start_pos": 107
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "сложных выражений",
            "start_pos": 107
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "даты",
            "start_pos": 134
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "даты",
            "start_pos": 134
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "время",
            "start_pos": 140
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "время",
            "start_pos": 140
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "валюты",
            "start_pos": 147
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "валюты",
            "start_pos": 147
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "акронимы",
            "start_pos": 156
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "акронимы",
            "start_pos": 156
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "идентифицировать",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "токенизатор",
            "start_pos": 30
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Emphasis",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 252,
      "text": "Типичным методом обучения без учителя является кластеризация, благодаря которому обучающая выборка разбивается на устойчивые группы или кластеры.",
      "terms": [
        {
          "class": "Method",
          "value": "методом обучения без учителя",
          "start_pos": 9
        },
        {
          "class": "Method",
          "value": "кластеризация",
          "start_pos": 47
        },
        {
          "class": "Object",
          "value": "обучающая выборка",
          "start_pos": 81
        },
        {
          "class": "Object",
          "value": "устойчивые группы",
          "start_pos": 114
        },
        {
          "class": "Object",
          "value": "кластеры",
          "start_pos": 136
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "обучающая выборка",
            "start_pos": 81
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "устойчивые группы",
            "start_pos": 114
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "обучающая выборка",
            "start_pos": 81
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "кластеры",
            "start_pos": 136
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методом обучения без учителя",
            "start_pos": 9
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "кластеризация",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методом обучения без учителя",
            "start_pos": 9
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "обучающая выборка",
            "start_pos": 81
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "кластеризация",
            "start_pos": 47
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "обучающая выборка",
            "start_pos": 81
          }
        }
      ]
    },
    {
      "id": 253,
      "text": "Другой подход обучения без учителя для текстов называется тематическим моделированием (topic modeling), позволяющим выявить в неразмеченных текстах основные тематики.",
      "terms": [
        {
          "class": "Method",
          "value": "подход обучения без учителя",
          "start_pos": 7
        },
        {
          "class": "Object",
          "value": "текстов",
          "start_pos": 39
        },
        {
          "class": "Method",
          "value": "тематическим моделированием",
          "start_pos": 58
        },
        {
          "class": "Method",
          "value": "topic modeling",
          "start_pos": 87
        },
        {
          "class": "Task",
          "value": "выявить в неразмеченных текстах основные тематики",
          "start_pos": 116
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 39
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "выявить в неразмеченных текстах основные тематики",
            "start_pos": 116
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "подход обучения без учителя",
            "start_pos": 7
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "тематическим моделированием",
            "start_pos": 58
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "тематическим моделированием",
            "start_pos": 58
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "topic modeling",
            "start_pos": 87
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "подход обучения без учителя",
            "start_pos": 7
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "тематическим моделированием",
            "start_pos": 58
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "выявить в неразмеченных текстах основные тематики",
            "start_pos": 116
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "подход обучения без учителя",
            "start_pos": 7
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "выявить в неразмеченных текстах основные тематики",
            "start_pos": 116
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "topic modeling",
            "start_pos": 87
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "выявить в неразмеченных текстах основные тематики",
            "start_pos": 116
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "тематическим моделированием",
            "start_pos": 58
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "подход обучения без учителя",
            "start_pos": 7
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "topic modeling",
            "start_pos": 87
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "тематическим моделированием",
            "start_pos": 58
          }
        }
      ]
    },
    {
      "id": 254,
      "text": "Если отказываемся от методов unsupervised learning, то логично обратиться к методам обучения с учителем (supervised learning) и в частности к классификации.",
      "terms": [
        {
          "class": "Method",
          "value": "unsupervised learning",
          "start_pos": 29
        },
        {
          "class": "Method",
          "value": "методам обучения с учителем",
          "start_pos": 76
        },
        {
          "class": "Method",
          "value": "supervised learning",
          "start_pos": 105
        },
        {
          "class": "Method",
          "value": "классификации",
          "start_pos": 142
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методам обучения с учителем",
            "start_pos": 76
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "классификации",
            "start_pos": 142
          }
        }
      ]
    },
    {
      "id": 255,
      "text": "Результатом работы языковой модели являются эмбеддинги — это отображение из пространства слов в пространство векторов конкретной фиксированной длины, причем векторы, соответствующие близким по смыслу словам, будут расположены в новом пространстве рядом, а далекие по смыслу — далеко.",
      "terms": [
        {
          "class": "Model",
          "value": "языковой модели",
          "start_pos": 19
        },
        {
          "class": "Object",
          "value": "эмбеддинги",
          "start_pos": 44
        },
        {
          "class": "Object",
          "value": "слов",
          "start_pos": 89
        },
        {
          "class": "Object",
          "value": "смыслу словам",
          "start_pos": 193
        }
      ],
      "relations": []
    },
    {
      "id": 256,
      "text": "При использовании TF-IDF (например, вот) подхода с фильтром по частотам и логистической регрессии уже можно получить прекрасные результаты: изначально в краулер отправлялись очень разные тексты, и модель прекрасно справляется.",
      "terms": [
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 18
        },
        {
          "class": "Method",
          "value": "логистической регрессии",
          "start_pos": 74
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "TF-IDF",
            "start_pos": 18
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "логистической регрессии",
            "start_pos": 74
          }
        }
      ]
    },
    {
      "id": 257,
      "text": "Используя TF-IDF с фильтром по частотам и логистической регрессией, уже можно достичь отличных результатов.",
      "terms": [
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 10
        },
        {
          "class": "Method",
          "value": "логистической регрессией",
          "start_pos": 42
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "TF-IDF",
            "start_pos": 10
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "логистической регрессией",
            "start_pos": 42
          }
        }
      ]
    },
    {
      "id": 258,
      "text": "Для каждой из популяций рассчитаем word2vec расстояние до центра положительной обучающей выборки.",
      "terms": [
        {
          "class": "Model",
          "value": "word2vec",
          "start_pos": 35
        },
        {
          "class": "Object",
          "value": "выборки",
          "start_pos": 89
        }
      ],
      "relations": []
    },
    {
      "id": 259,
      "text": "Распределения можно разделить, и для оценки расстояния между распределениями в первую очередь логично обратиться к Дивергенции Кульбака-Лейблера (ДКЛ).",
      "terms": [
        {
          "class": "Activity",
          "value": "оценки расстояния",
          "start_pos": 37
        },
        {
          "class": "Metric",
          "value": "Дивергенции Кульбака-Лейблера",
          "start_pos": 115
        },
        {
          "class": "Metric",
          "value": "ДКЛ",
          "start_pos": 146
        }
      ],
      "relations": []
    },
    {
      "id": 260,
      "text": "Они отличаются хорошей сбалансированностью: достаточно высокий уровень чувствительности одновременно с хорошим соотношением сигнал/шум и уровнем AOP (Acoustic Overload Point — это такой аналог максимального звукового давления для цифровых микрофонов).",
      "terms": [
        {
          "class": "Metric",
          "value": "AOP",
          "start_pos": 145
        },
        {
          "class": "Metric",
          "value": "Acoustic Overload Point",
          "start_pos": 150
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Acoustic Overload Point",
            "start_pos": 150
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "AOP",
            "start_pos": 145
          }
        }
      ]
    },
    {
      "id": 261,
      "text": "Пожалуй, самое важное: мы отказались от моделей на базе DNN-HMM и перешли на архитектуру e2e-распознавания с использованием тяжёлых нейросетей-трансформеров.",
      "terms": [
        {
          "class": "Method",
          "value": "DNN-HMM",
          "start_pos": 56
        },
        {
          "class": "Method",
          "value": "e2e",
          "start_pos": 89
        }
      ],
      "relations": []
    },
    {
      "id": 262,
      "text": "В обоих случаях они от Texas Instruments, но в Станции Макс используется более свежая и мощная модель TAS5825M.",
      "terms": [
        {
          "class": "Organization",
          "value": "Texas Instruments",
          "start_pos": 23
        },
        {
          "class": "Application",
          "value": "Станции Макс",
          "start_pos": 47
        },
        {
          "class": "Model",
          "value": "TAS5825M",
          "start_pos": 102
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "TAS5825M",
            "start_pos": 102
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Станции Макс",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 263,
      "text": "В конкурсе приняли участие представители ведущих команд рынка компьютерной обработки текстов, в том числе «Антиплагиат», «Наносемантика», DeepPavlov.",
      "terms": [
        {
          "class": "Application",
          "value": "Антиплагиат",
          "start_pos": 107
        },
        {
          "class": "Application",
          "value": "Наносемантика",
          "start_pos": 122
        },
        {
          "class": "Library",
          "value": "DeepPavlov",
          "start_pos": 138
        }
      ],
      "relations": []
    },
    {
      "id": 264,
      "text": "Руководитель проекта FirstTry Артём Щеголев пришел на конкурс в команде со своей супругой.",
      "terms": [
        {
          "class": "Activity",
          "value": "FirstTry",
          "start_pos": 21
        },
        {
          "class": "Person",
          "value": "Артём Щеголев",
          "start_pos": 30
        }
      ],
      "relations": []
    },
    {
      "id": 265,
      "text": "TextIT API включает в себя функции проверки орфографии и исправления ошибок, формирования текстовой формы числительных (например, преобразовать “102 рубль” в “сто два рубля”), подсказки следующего слова по ранее введенному тексту, постановки слова в нужную словоформу (число, род, падеж, лицо и время) и другие полезные функции обработки и формирования текста.",
      "terms": [
        {
          "class": "Application",
          "value": "TextIT API",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "проверки орфографии",
          "start_pos": 35
        },
        {
          "class": "Task",
          "value": "исправления ошибок",
          "start_pos": 57
        },
        {
          "class": "Task",
          "value": "формирования текстовой формы числительных",
          "start_pos": 77
        },
        {
          "class": "Task",
          "value": "подсказки следующего слова",
          "start_pos": 176
        },
        {
          "class": "Task",
          "value": "постановки слова в нужную словоформу",
          "start_pos": 231
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "TextIT API",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "проверки орфографии",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "TextIT API",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "исправления ошибок",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "TextIT API",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "формирования текстовой формы числительных",
            "start_pos": 77
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "TextIT API",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "подсказки следующего слова",
            "start_pos": 176
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "TextIT API",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "постановки слова в нужную словоформу",
            "start_pos": 231
          }
        }
      ]
    },
    {
      "id": 266,
      "text": "В данной статье я бы хотел познакомить читателей с одним из проектов Apache Software Foundation сообщества — NlpCraft.",
      "terms": [
        {
          "class": "Organization",
          "value": "Apache Software Foundation",
          "start_pos": 69
        },
        {
          "class": "Activity",
          "value": "NlpCraft",
          "start_pos": 109
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "NlpCraft",
            "start_pos": 109
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Apache Software Foundation",
            "start_pos": 69
          }
        }
      ]
    },
    {
      "id": 267,
      "text": "В этой статье я планирую представить читателям один из проектов сообщества Apache Software Foundation — NlpCraft.",
      "terms": [
        {
          "class": "Organization",
          "value": "Apache Software Foundation",
          "start_pos": 75
        },
        {
          "class": "Activity",
          "value": "NlpCraft",
          "start_pos": 104
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "NlpCraft",
            "start_pos": 104
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Apache Software Foundation",
            "start_pos": 75
          }
        }
      ]
    },
    {
      "id": 268,
      "text": "NlpCraft — библиотека с открытым исходным кодом, предназначенная для интеграции языкового интерфейса в пользовательские приложения.",
      "terms": [
        {
          "class": "Library",
          "value": "NlpCraft",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "интеграции языкового интерфейса",
          "start_pos": 69
        }
      ],
      "relations": []
    },
    {
      "id": 269,
      "text": "Подход Model-as-a-Code, позволяющий создавать и редактировать модели с помощью привычных разработчикам инструментов.",
      "terms": [
        {
          "class": "Method",
          "value": "Model-as-a-Code",
          "start_pos": 7
        }
      ],
      "relations": []
    },
    {
      "id": 270,
      "text": "Интеграция со множеством провайдеров NER компонентов (Apache OpenNlp, Stanford NLP, Google Natural Language API, Spacy)",
      "terms": [
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 37
        },
        {
          "class": "Library",
          "value": "Apache OpenNlp",
          "start_pos": 54
        },
        {
          "class": "Library",
          "value": "Stanford NLP",
          "start_pos": 70
        },
        {
          "class": "Library",
          "value": "Google Natural Language API",
          "start_pos": 84
        },
        {
          "class": "Library",
          "value": "Spacy",
          "start_pos": 113
        }
      ],
      "relations": []
    },
    {
      "id": 271,
      "text": "Named Entity — именованная сущность.",
      "terms": [
        {
          "class": "Object",
          "value": "Named Entity",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "именованная сущность",
          "start_pos": 15
        }
      ],
      "relations": []
    },
    {
      "id": 272,
      "text": "В большинстве случаев процесс конфигурации сводится к созданию и поддержке простого Json или Yaml файла.",
      "terms": [
        {
          "class": "Environment",
          "value": "Json",
          "start_pos": 84
        },
        {
          "class": "Environment",
          "value": "Yaml",
          "start_pos": 93
        }
      ],
      "relations": []
    },
    {
      "id": 273,
      "text": "Ближайшие и наиболее известные “аналоги“ Amazon Alexa и Google DialogFlow имеют целый ряд существенных отличий от данной системы.",
      "terms": [
        {
          "class": "Application",
          "value": "Amazon Alexa",
          "start_pos": 41
        },
        {
          "class": "Application",
          "value": "Google DialogFlow",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 274,
      "text": "Онлайн-энциклопедия Wikipedia получила новый инструмент — сервис с элементами ИИ, который поможет автоматически определять некорректные правки материалов ресурса.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Wikipedia",
          "start_pos": 20
        },
        {
          "class": "Task",
          "value": "определять некорректные правки материалов",
          "start_pos": 112
        }
      ],
      "relations": []
    },
    {
      "id": 275,
      "text": "Сервис ORES (Objective Revision Evaluation Service) будет проверять все правки на наличие спама или троллинга.",
      "terms": [
        {
          "class": "Application",
          "value": "ORES",
          "start_pos": 7
        },
        {
          "class": "Application",
          "value": "Objective Revision Evaluation Service",
          "start_pos": 13
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 13
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 7
          }
        }
      ]
    },
    {
      "id": 276,
      "text": "Сервис ORES (Objective Revision Evaluation Service) будет осуществлять проверку всех изменений на предмет наличия спама или троллинга.",
      "terms": [
        {
          "class": "Application",
          "value": "ORES",
          "start_pos": 7
        },
        {
          "class": "Application",
          "value": "Objective Revision Evaluation Service",
          "start_pos": 13
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 13
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 7
          }
        }
      ]
    },
    {
      "id": 277,
      "text": "Создателем ORES является Wikimedia Foundation.",
      "terms": [
        {
          "class": "Application",
          "value": "ORES",
          "start_pos": 11
        },
        {
          "class": "Organization",
          "value": "Wikimedia Foundation",
          "start_pos": 25
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 11
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Wikimedia Foundation",
            "start_pos": 25
          }
        }
      ]
    },
    {
      "id": 278,
      "text": "ORES (Objective Revision Evaluation Service) был разработан Wikimedia Foundation.",
      "terms": [
        {
          "class": "Application",
          "value": "ORES",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "Objective Revision Evaluation Service",
          "start_pos": 6
        },
        {
          "class": "Organization",
          "value": "Wikimedia Foundation",
          "start_pos": 60
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 6
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Wikimedia Foundation",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 6
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Wikimedia Foundation",
            "start_pos": 60
          }
        }
      ]
    },
    {
      "id": 279,
      "text": "Вероятность того, что текст нормальный, составляет 0,0837.",
      "terms": [
        {
          "class": "Value",
          "value": "0,0837",
          "start_pos": 51
        }
      ],
      "relations": []
    },
    {
      "id": 280,
      "text": "Вероятность умышленной порчи текста — 0,9163.",
      "terms": [
        {
          "class": "Value",
          "value": "0,9163",
          "start_pos": 38
        }
      ],
      "relations": []
    },
    {
      "id": 281,
      "text": "Точность распознавания естественного языка сейчас у лидеров когнитивных систем (IBM Watson, Google, ABBYY, Microsoft, Наносемантика) позволяет в общем понять смысл и ответить на письменный вопрос при заранее определенной предметной базы знаний, но разговор даже с 90% точностью распознавания фраз на самом деле очень утомителен.",
      "terms": [
        {
          "class": "Application",
          "value": "IBM Watson",
          "start_pos": 80
        },
        {
          "class": "Application",
          "value": "Google",
          "start_pos": 92
        },
        {
          "class": "Application",
          "value": "ABBYY",
          "start_pos": 100
        },
        {
          "class": "Application",
          "value": "Microsoft",
          "start_pos": 107
        },
        {
          "class": "Application",
          "value": "Наносемантика",
          "start_pos": 118
        },
        {
          "class": "Value",
          "value": "90%",
          "start_pos": 264
        },
        {
          "class": "Metric",
          "value": "точностью",
          "start_pos": 268
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точностью",
            "start_pos": 268
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "90%",
            "start_pos": 264
          }
        }
      ]
    },
    {
      "id": 282,
      "text": "Кластерный анализ корпуса текстов",
      "terms": [
        {
          "class": "Method",
          "value": "Кластерный анализ",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 283,
      "text": "В качестве тестовых данных был взят фрагмент новостного датасета от РИА, из которого в обработке участвовали только заголовки новостей.",
      "terms": [
        {
          "class": "Dataset",
          "value": "датасета от РИА",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 284,
      "text": "Для векторизации текста использовалась модель LaBSE от @cointegrated.",
      "terms": [
        {
          "class": "Model",
          "value": "LaBSE",
          "start_pos": 46
        },
        {
          "class": "Person",
          "value": "@cointegrated",
          "start_pos": 55
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "LaBSE",
            "start_pos": 46
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "@cointegrated",
            "start_pos": 55
          }
        }
      ]
    },
    {
      "id": 285,
      "text": "Я использовал для этого модель ruT5 за авторством @cointegrated.",
      "terms": [
        {
          "class": "Model",
          "value": "ruT5",
          "start_pos": 31
        },
        {
          "class": "Person",
          "value": "@cointegrated",
          "start_pos": 50
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruT5",
            "start_pos": 31
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "@cointegrated",
            "start_pos": 50
          }
        }
      ]
    },
    {
      "id": 286,
      "text": "После изучения мы поняли, что Дана (так мы называем нашего чат-бота) — это кнопочный и сценарный чат-бот.",
      "terms": [
        {
          "class": "Application",
          "value": "Дана",
          "start_pos": 30
        }
      ],
      "relations": []
    },
    {
      "id": 287,
      "text": "Среднее количество слов в запросе — четыре, поэтому мы собрали n-grams (словосочетания из 3-5 слов) и решили кластеризовать их разными методами типа тематического моделирования – agglomerative clustering поверх sentence embedding.",
      "terms": [
        {
          "class": "Object",
          "value": "n-grams",
          "start_pos": 63
        },
        {
          "class": "Method",
          "value": "agglomerative clustering",
          "start_pos": 179
        },
        {
          "class": "Method",
          "value": "sentence embedding",
          "start_pos": 211
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "agglomerative clustering",
            "start_pos": 179
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "n-grams",
            "start_pos": 63
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "sentence embedding",
            "start_pos": 211
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "n-grams",
            "start_pos": 63
          }
        }
      ]
    },
    {
      "id": 288,
      "text": "Решили использовать стандартные метрики: precision, recall, f1 score, accuracy.",
      "terms": [
        {
          "class": "Metric",
          "value": "precision",
          "start_pos": 41
        },
        {
          "class": "Metric",
          "value": "recall",
          "start_pos": 52
        },
        {
          "class": "Metric",
          "value": "f1 score",
          "start_pos": 60
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 289,
      "text": "На всех классах accuracy = 0.65.",
      "terms": [
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 16
        },
        {
          "class": "Value",
          "value": "0.65",
          "start_pos": 27
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 16
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.65",
            "start_pos": 27
          }
        }
      ]
    },
    {
      "id": 290,
      "text": "Рассчитаем macro f1 score (0.72 + 0.28 + 0.66 + 0.66)/4 ~ 0.6, weighted f1 score (0.720.85+0.280.05+0.660.05+0.660.05) ~ 0.69.",
      "terms": [
        {
          "class": "Metric",
          "value": "macro f1 score",
          "start_pos": 11
        },
        {
          "class": "Value",
          "value": "0.6",
          "start_pos": 58
        },
        {
          "class": "Metric",
          "value": "weighted f1 score",
          "start_pos": 63
        },
        {
          "class": "Value",
          "value": "0.69",
          "start_pos": 121
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "macro f1 score",
            "start_pos": 11
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.6",
            "start_pos": 58
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "weighted f1 score",
            "start_pos": 63
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.69",
            "start_pos": 121
          }
        }
      ]
    },
    {
      "id": 291,
      "text": "Только на одном классе accuracy = 0.85.",
      "terms": [
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 23
        },
        {
          "class": "Value",
          "value": "0.85",
          "start_pos": 34
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 23
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.85",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 292,
      "text": "Рассчитаем macro f1 score (0.92 + 0 + 0 + 0)/4 ~ 0.23, weighted f1 score (0.920.85+00.05+00.05+00.05) ~ 0.78.",
      "terms": [
        {
          "class": "Metric",
          "value": "macro f1 score",
          "start_pos": 11
        },
        {
          "class": "Value",
          "value": "0.23",
          "start_pos": 49
        },
        {
          "class": "Metric",
          "value": "weighted f1 score",
          "start_pos": 55
        },
        {
          "class": "Value",
          "value": "0.78",
          "start_pos": 104
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "macro f1 score",
            "start_pos": 11
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.23",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "weighted f1 score",
            "start_pos": 55
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.78",
            "start_pos": 104
          }
        }
      ]
    },
    {
      "id": 293,
      "text": "TCR (Task completed rate) — процент диалогов, в которых частично или полностью решили проблему абонента.",
      "terms": [
        {
          "class": "Metric",
          "value": "TCR",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "Task completed rate",
          "start_pos": 5
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Task completed rate",
            "start_pos": 5
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "TCR",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 294,
      "text": "CSI (Customer Satisfaction Index) — средняя оценка, которую поставили клиенты боту.",
      "terms": [
        {
          "class": "Metric",
          "value": "CSI",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "Customer Satisfaction Index)",
          "start_pos": 5
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Customer Satisfaction Index)",
            "start_pos": 5
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "CSI",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 295,
      "text": "AR (Automation rate) — процент диалогов, в которых клиент не перешел на оператора.",
      "terms": [
        {
          "class": "Metric",
          "value": "AR",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "Automation rate",
          "start_pos": 4
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Automation rate",
            "start_pos": 4
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "AR",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 296,
      "text": "Мы попробовали разные предобученные модели с ресурса Hugging Face.",
      "terms": [
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 36
        },
        {
          "class": "InfoResource",
          "value": "Hugging Face",
          "start_pos": 53
        }
      ],
      "relations": []
    },
    {
      "id": 297,
      "text": "Лучший результат показала модель DeepPavlov/rubert-base-cased.",
      "terms": [
        {
          "class": "Model",
          "value": "DeepPavlov/rubert-base-cased",
          "start_pos": 33
        }
      ],
      "relations": []
    },
    {
      "id": 298,
      "text": "Методы, реализованные с помощью библиотеки nlpaugMask insert.",
      "terms": [
        {
          "class": "Library",
          "value": "nlpaugMask insert",
          "start_pos": 43
        }
      ],
      "relations": []
    },
    {
      "id": 299,
      "text": "Популярный способ аугментации через NMT-модели.",
      "terms": [
        {
          "class": "Model",
          "value": "NMT-модели",
          "start_pos": 36
        }
      ],
      "relations": []
    },
    {
      "id": 300,
      "text": "В результате переразметки и разделение моделей качество получилось следующее:Chain-model, sentiment, spamТак как в нашей задаче пространство всех интетов неопределенное (мы не знаем, сколько их), нужно было отделять имеющийся список интентов в чат-боте и остальную лексику, в которой могут содержаться и остальные интенты.",
      "terms": [
        {
          "class": "Model",
          "value": "Chain-model",
          "start_pos": 77
        },
        {
          "class": "Model",
          "value": "sentiment",
          "start_pos": 90
        },
        {
          "class": "Model",
          "value": "spamТак",
          "start_pos": 101
        }
      ],
      "relations": []
    },
    {
      "id": 301,
      "text": "Новая версия GPT-3, InstructGPT, лучше выполняет инструкции и выдает меньше оскорбительных выражений, дезинформации и ошибок в целом.",
      "terms": [
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 13
        },
        {
          "class": "Model",
          "value": "InstructGPT",
          "start_pos": 20
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "InstructGPT",
            "start_pos": 20
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 13
          }
        }
      ]
    },
    {
      "id": 302,
      "text": "В ходе тестирования модель китайских ученых показала улучшение на 2,74% по шкале F1 (оценка классификатора) сравнению с HFM (Hierarchical Fusion Model), представленной в прошлом году: новая нейросеть достигла 86% точности по сравнению с 83% у HFM.",
      "terms": [
        {
          "class": "Metric",
          "value": "F1",
          "start_pos": 81
        },
        {
          "class": "Model",
          "value": "HFM",
          "start_pos": 120
        },
        {
          "class": "Model",
          "value": "Hierarchical Fusion Model",
          "start_pos": 125
        },
        {
          "class": "Model",
          "value": "нейросеть",
          "start_pos": 190
        },
        {
          "class": "Value",
          "value": "86%",
          "start_pos": 209
        },
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 213
        },
        {
          "class": "Value",
          "value": "83%",
          "start_pos": 237
        },
        {
          "class": "Model",
          "value": "HFM",
          "start_pos": 243
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 213
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "86%",
            "start_pos": 209
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 213
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "83%",
            "start_pos": 237
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Hierarchical Fusion Model",
            "start_pos": 125
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "HFM",
            "start_pos": 120
          }
        }
      ]
    },
    {
      "id": 303,
      "text": "Тем не менее, в Facebook признали, что алгоритмы пока не готовы к широкому развертыванию — точность их работы составляет около 65-70%.",
      "terms": [
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 16
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 91
        },
        {
          "class": "Value",
          "value": "65-70%",
          "start_pos": 127
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 91
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "65-70%",
            "start_pos": 127
          }
        }
      ]
    },
    {
      "id": 304,
      "text": "Несмотря на все свои недостатки, библиотека (неожиданно) оказалась довольно востребованной — например, нагуглил, что pymorphy был слегка использован при разработке системы Speech-to-Text для русского языка в рамках французского проекта Quaero, и рекомендуется в качестве учебного материала в некоторых ВУЗах.",
      "terms": [
        {
          "class": "Library",
          "value": "библиотека",
          "start_pos": 33
        },
        {
          "class": "Library",
          "value": "pymorphy",
          "start_pos": 117
        },
        {
          "class": "Application",
          "value": "Speech-to-Text",
          "start_pos": 172
        },
        {
          "class": "Lang",
          "value": "русского языка",
          "start_pos": 191
        },
        {
          "class": "Activity",
          "value": "Quaero",
          "start_pos": 236
        }
      ],
      "relations": []
    },
    {
      "id": 305,
      "text": "Решающим толчком к написанию pymorphy2 послужил проект OpenCorpora — ребята оттуда, кроме всего прочего (а там много «всего прочего»), взяли словарь из aot.ru, полностью переделали его структуру и занялись пополнением и прочими улучшениями.",
      "terms": [
        {
          "class": "Library",
          "value": "pymorphy2",
          "start_pos": 29
        },
        {
          "class": "Activity",
          "value": "OpenCorpora",
          "start_pos": 55
        },
        {
          "class": "InfoResource",
          "value": "aot.ru",
          "start_pos": 152
        }
      ],
      "relations": []
    },
    {
      "id": 306,
      "text": "Что меня тут смутило: а) в статье ипользовалась C++ библиотека OpenFST (вроде самый популярный способ реализации конечных автоматов), но заставлять пользователей ставить ее вручную — не вариант; б) даже с использованием C++ библиотеки результаты, судя по статье, были достаточно скромные (2 тыс слов/сек против 100+ тыс слов/сек у mystem или lemmatizer); понятное дело, что эту цифру можно было бы, скорее всего, значительно улучшить (да и lightcaster пишет, что ничего не оптимизировал) — но все же; в) это один из тех подходов, который (по моему мнению) повышает порог вхождения — я считаю, что это скорее минус.",
      "terms": [
        {
          "class": "Environment",
          "value": "C++",
          "start_pos": 48
        },
        {
          "class": "Library",
          "value": "OpenFST",
          "start_pos": 63
        },
        {
          "class": "Environment",
          "value": "C++",
          "start_pos": 220
        }
      ],
      "relations": []
    },
    {
      "id": 307,
      "text": "В итоге получалось, что мне нужно было бы: разобраться, как оптимизировать код и почему даже с C++ библиотекой получается так медленно; написать более простую в установке обертку для OpenFST (или использовать другую реализацию FST — например, сделать свою) + сделать реализацию небольшой части OpenFST (или просто реализацию FST) на Python (чтоб pymorphy можно было использовать без компилятора), ну и формулировать все алгоритмы в терминах конечных автоматов.",
      "terms": [
        {
          "class": "Environment",
          "value": "C++",
          "start_pos": 95
        },
        {
          "class": "Library",
          "value": "OpenFST",
          "start_pos": 183
        },
        {
          "class": "Library",
          "value": "FST",
          "start_pos": 227
        },
        {
          "class": "Library",
          "value": "OpenFST",
          "start_pos": 294
        },
        {
          "class": "Library",
          "value": "FST",
          "start_pos": 325
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 333
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "C++",
            "start_pos": 95
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "OpenFST",
            "start_pos": 294
          }
        }
      ]
    },
    {
      "id": 308,
      "text": "Сперва мне приглянулась библиотека libdatrie, про обертку для нее писал тут: habrahabr.ru/post/147963.",
      "terms": [
        {
          "class": "Library",
          "value": "libdatrie",
          "start_pos": 35
        }
      ],
      "relations": []
    },
    {
      "id": 309,
      "text": "Но и этот второй вариант оставался узким местом, даже переписанный на Cython — что с ним делать, я не знал.",
      "terms": [
        {
          "class": "Environment",
          "value": "Cython",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 310,
      "text": "Выбор пал на C++ библиотеку marisa-trie, которую написал гуру структур данных Susumu Yata.",
      "terms": [
        {
          "class": "Environment",
          "value": "C++",
          "start_pos": 13
        },
        {
          "class": "Library",
          "value": "marisa-trie",
          "start_pos": 28
        },
        {
          "class": "Person",
          "value": "Susumu Yata",
          "start_pos": 78
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "marisa-trie",
            "start_pos": 28
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Susumu Yata",
            "start_pos": 78
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "C++",
            "start_pos": 13
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "marisa-trie",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 311,
      "text": "Было решено использовать библиотеку marisa-trie на C++, созданную экспертом в области структур данных Сусуму Ята.",
      "terms": [
        {
          "class": "Library",
          "value": "marisa-trie",
          "start_pos": 36
        },
        {
          "class": "Environment",
          "value": "C++",
          "start_pos": 51
        },
        {
          "class": "Person",
          "value": "Сусуму Ята",
          "start_pos": 102
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "marisa-trie",
            "start_pos": 36
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Сусуму Ята",
            "start_pos": 102
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "C++",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "marisa-trie",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 312,
      "text": "С другой стороны, ускорить версию под CPython понятно как — переписать еще что-нибудь на Cython (к слову: делать я этого не планирую); с PyPy это не так очевидно.",
      "terms": [
        {
          "class": "Environment",
          "value": "CPython",
          "start_pos": 38
        },
        {
          "class": "Environment",
          "value": "Cython",
          "start_pos": 89
        },
        {
          "class": "Environment",
          "value": "PyPy",
          "start_pos": 137
        }
      ],
      "relations": []
    },
    {
      "id": 313,
      "text": "Если не использовать ни PyPy, ни C++ реализацию DAWG, pymorphy2 все равно будет работать во много раз быстрее (по прикидкам — в пару десятков раз), чем pymorphy1 cо всеми включенными ускорениями — ну и разбирать лучше.",
      "terms": [
        {
          "class": "Environment",
          "value": "PyPy",
          "start_pos": 24
        },
        {
          "class": "Environment",
          "value": "C++",
          "start_pos": 33
        },
        {
          "class": "Library",
          "value": "DAWG",
          "start_pos": 48
        },
        {
          "class": "Library",
          "value": "pymorphy2",
          "start_pos": 54
        },
        {
          "class": "Library",
          "value": "pymorphy1",
          "start_pos": 152
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "C++",
            "start_pos": 33
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "DAWG",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 314,
      "text": "Там сейчас есть фичи, которых нет в pymorphy2 (например, интеграция с django, согласование слов с цифрами и склонение фамилий), но в версии на битбакете я поломал обратную совместимость.",
      "terms": [
        {
          "class": "Library",
          "value": "pymorphy2",
          "start_pos": 36
        },
        {
          "class": "Library",
          "value": "django",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 315,
      "text": "К примеру, одна из наиболее известных систем такого типа Grammarly выступает против использования пассивного залога.",
      "terms": [
        {
          "class": "Application",
          "value": "Grammarly",
          "start_pos": 57
        }
      ],
      "relations": []
    },
    {
      "id": 316,
      "text": "Например, сервис Textly.AI разрешает использовать свои плагины для Chrome и Firefox без создания аккаунта, а в их веб-приложении есть режим, похожий на секретный чат в браузере – после выхода из него, весь откорректированный алгоритмом контент удаляется.",
      "terms": [
        {
          "class": "Application",
          "value": "Textly.AI",
          "start_pos": 17
        },
        {
          "class": "Application",
          "value": "Chrome",
          "start_pos": 67
        },
        {
          "class": "Application",
          "value": "Firefox",
          "start_pos": 76
        }
      ],
      "relations": []
    },
    {
      "id": 317,
      "text": "Еще пример: сервис Ginger предлагает инструмент для перефразирования предложений – пользователь может написать совсем простое, а ему дадут чуть более сложный вариант (не совсем то, что нужно, но хоть что-то).",
      "terms": [
        {
          "class": "Application",
          "value": "Ginger",
          "start_pos": 19
        }
      ],
      "relations": []
    },
    {
      "id": 318,
      "text": "Например, на NLP-progress публикуются последние достижения в области commonsense reasoning.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "NLP",
          "start_pos": 13
        },
        {
          "class": "Science",
          "value": "commonsense reasoning",
          "start_pos": 69
        }
      ],
      "relations": []
    },
    {
      "id": 319,
      "text": "В этом посте мы расскажем, как мы создали датасет для задачи Common Sense Reasoning в одной из ее возможных формулировок, предложенной в статье event2mind, а также адаптировали английскую модель event2mind от AllenNLP для русского языка.",
      "terms": [
        {
          "class": "Task",
          "value": "Common Sense Reasoning",
          "start_pos": 61
        },
        {
          "class": "Model",
          "value": "event2mind",
          "start_pos": 195
        },
        {
          "class": "Organization",
          "value": "AllenNLP",
          "start_pos": 209
        },
        {
          "class": "Lang",
          "value": "русского языка",
          "start_pos": 222
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "event2mind",
            "start_pos": 195
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "Common Sense Reasoning",
            "start_pos": 61
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "event2mind",
            "start_pos": 195
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русского языка",
            "start_pos": 222
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "event2mind",
            "start_pos": 195
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "AllenNLP",
            "start_pos": 209
          }
        }
      ]
    },
    {
      "id": 320,
      "text": "Тексты из SynTagRus, который является частью Русского Национального корпуса и содержит художественные тексты вместе с новостями.",
      "terms": [
        {
          "class": "Corpus",
          "value": "SynTagRus",
          "start_pos": 10
        },
        {
          "class": "Corpus",
          "value": "Русского Национального корпуса",
          "start_pos": 45
        }
      ],
      "relations": []
    },
    {
      "id": 321,
      "text": "Для поиска подобных паттернов был использован синтаксический парсер UdPipe, с помощью которого мы выделяли в текстах паттерны вида глагол + зависимые слова в синтаксическом дереве, как например на рисунке 2, которые удовлетворяли одному из следующих правил:",
      "terms": [
        {
          "class": "Application",
          "value": "UdPipe",
          "start_pos": 68
        }
      ],
      "relations": []
    },
    {
      "id": 322,
      "text": "Однако уже при 30000 примеров, loss и recall практически не отличаются от результатов на полном объеме данных.",
      "terms": [
        {
          "class": "Metric",
          "value": "loss",
          "start_pos": 31
        },
        {
          "class": "Metric",
          "value": "recall",
          "start_pos": 38
        }
      ],
      "relations": []
    },
    {
      "id": 323,
      "text": "Изначально английский корпус собран из нескольких источников: ROC Story training set, the GoogleSyntactic N-grams, the Spinn3r corpus и idioms.",
      "terms": [
        {
          "class": "Corpus",
          "value": "ROC Story training set",
          "start_pos": 62
        },
        {
          "class": "Corpus",
          "value": "the GoogleSyntactic N-grams",
          "start_pos": 86
        },
        {
          "class": "Corpus",
          "value": "the Spinn3r corpus",
          "start_pos": 115
        },
        {
          "class": "Corpus",
          "value": "idioms",
          "start_pos": 136
        }
      ],
      "relations": []
    },
    {
      "id": 324,
      "text": "Поэтому мы взяли только примеры из ROC-story.",
      "terms": [
        {
          "class": "Corpus",
          "value": "ROC-story",
          "start_pos": 35
        }
      ],
      "relations": []
    },
    {
      "id": 325,
      "text": "таблицу 2), у этого источника коэффициент согласованности аннотаторов (Cohen's kappa coefficient), равный 0.57.",
      "terms": [
        {
          "class": "Metric",
          "value": "коэффициент согласованности аннотаторов",
          "start_pos": 30
        },
        {
          "class": "Metric",
          "value": "Cohen's kappa coefficient",
          "start_pos": 71
        },
        {
          "class": "Value",
          "value": "0.57",
          "start_pos": 106
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "коэффициент согласованности аннотаторов",
            "start_pos": 30
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.57",
            "start_pos": 106
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "Cohen's kappa coefficient",
            "start_pos": 71
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.57",
            "start_pos": 106
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "Cohen's kappa coefficient",
            "start_pos": 71
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "коэффициент согласованности аннотаторов",
            "start_pos": 30
          }
        }
      ]
    },
    {
      "id": 326,
      "text": "При этом fasttext embeddings, обученные на ruscorpora показали себя лучше обученных на araneum.",
      "terms": [
        {
          "class": "Model",
          "value": "fasttext embeddings",
          "start_pos": 9
        },
        {
          "class": "Dataset",
          "value": "ruscorpora",
          "start_pos": 43
        },
        {
          "class": "Dataset",
          "value": "araneum",
          "start_pos": 87
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "fasttext embeddings",
            "start_pos": 9
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "ruscorpora",
            "start_pos": 43
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "fasttext embeddings",
            "start_pos": 9
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "araneum",
            "start_pos": 87
          }
        }
      ]
    },
    {
      "id": 327,
      "text": "Сегодня мы расскажем, как помогли НПО Энергомаш создать корпоративную интеллектуальную информационно-поисковую систему (КИИПС) на базе ABBYY Intelligent Search – такую же удобную и быструю, как популярные поисковики.",
      "terms": [
        {
          "class": "Organization",
          "value": "НПО Энергомаш",
          "start_pos": 34
        },
        {
          "class": "Application",
          "value": "корпоративную интеллектуальную информационно-поисковую систему",
          "start_pos": 56
        },
        {
          "class": "Application",
          "value": "КИИПС",
          "start_pos": 120
        },
        {
          "class": "Application",
          "value": "ABBYY Intelligent Search",
          "start_pos": 135
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "корпоративную интеллектуальную информационно-поисковую систему",
            "start_pos": 56
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "НПО Энергомаш",
            "start_pos": 34
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "КИИПС",
            "start_pos": 120
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "НПО Энергомаш",
            "start_pos": 34
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "КИИПС",
            "start_pos": 120
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "корпоративную интеллектуальную информационно-поисковую систему",
            "start_pos": 56
          }
        }
      ]
    },
    {
      "id": 328,
      "text": "Сегодня мы расскажем о том, как мы содействовали НПО \"Энергомаш\" в разработке и внедрении их корпоративной интеллектуальной информационно-поисковой системы (КИИПС).",
      "terms": [
        {
          "class": "Organization",
          "value": "НПО \"Энергомаш\"",
          "start_pos": 49
        },
        {
          "class": "Application",
          "value": "корпоративной интеллектуальной информационно-поисковой системы",
          "start_pos": 93
        },
        {
          "class": "Application",
          "value": "КИИПС",
          "start_pos": 157
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "корпоративной интеллектуальной информационно-поисковой системы",
            "start_pos": 93
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "НПО \"Энергомаш\"",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "КИИПС",
            "start_pos": 157
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "НПО \"Энергомаш\"",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "КИИПС",
            "start_pos": 157
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "корпоративной интеллектуальной информационно-поисковой системы",
            "start_pos": 93
          }
        }
      ]
    },
    {
      "id": 329,
      "text": "Энергомаш рассматривал несколько поисковых систем, но в итоге решил попробовать ABBYY Intelligent Search.",
      "terms": [
        {
          "class": "Organization",
          "value": "Энергомаш",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "ABBYY Intelligent Search",
          "start_pos": 80
        }
      ],
      "relations": []
    },
    {
      "id": 330,
      "text": "Энергомаш подключил к поиску 7 корпоративных источников: систему электронного документооборота LanDocs, файловое хранилище, ИБД, систему поддержки жизненного цикла изделия TeamCenter, систему управления ресурсами Галактика ERP и AMM, информационную систему управления проектами.",
      "terms": [
        {
          "class": "Organization",
          "value": "Энергомаш",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "систему электронного документооборота LanDocs",
          "start_pos": 57
        },
        {
          "class": "Dataset",
          "value": "ИБД",
          "start_pos": 124
        },
        {
          "class": "Application",
          "value": "TeamCenter",
          "start_pos": 172
        },
        {
          "class": "Application",
          "value": "Галактика ERP",
          "start_pos": 213
        },
        {
          "class": "Application",
          "value": "AMM",
          "start_pos": 229
        }
      ],
      "relations": []
    },
    {
      "id": 331,
      "text": "Доступ в Систему корпоративного поиска организован через внутренний портал предприятия на главной странице.",
      "terms": [
        {
          "class": "Application",
          "value": "Систему корпоративного поиска",
          "start_pos": 9
        }
      ],
      "relations": []
    },
    {
      "id": 332,
      "text": "По данным Google Books Ngram Viewer — поискового онлайн-сервиса Google, который строит графики частоты упоминания языковых единиц на основе огромного количества печатных источников, популярность и интерес к NLP стремительно растет последние 20 лет.",
      "terms": [
        {
          "class": "Application",
          "value": "Google Books Ngram Viewer",
          "start_pos": 10
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 64
        },
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 207
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Google Books Ngram Viewer",
            "start_pos": 10
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 207
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Books Ngram Viewer",
            "start_pos": 10
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 64
          }
        }
      ]
    },
    {
      "id": 333,
      "text": "Heliograf способен генерировать новостные, финансовые и подобные им отчеты, и даже посты для социальных медиа.",
      "terms": [
        {
          "class": "Application",
          "value": "Heliograf",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 334,
      "text": "Так же, как Wordsmith, эта система используется репортерами при подготовке тысяч корпоративных финансовых отчетов, помогая Bloomberg News в нелегкой конкурентной борьбе с агентством Reuters, а также с новыми участниками информационной гонки – продвинутыми хедж-фондами, которые также используют системы на базе ИИ для поставки свежих новостей и аналитики своим клиентам.",
      "terms": [
        {
          "class": "Application",
          "value": "Wordsmith",
          "start_pos": 12
        },
        {
          "class": "Organization",
          "value": "Bloomberg News",
          "start_pos": 123
        },
        {
          "class": "Organization",
          "value": "Reuters",
          "start_pos": 182
        }
      ],
      "relations": []
    },
    {
      "id": 335,
      "text": "Наконец, компания Forbes недавно сообщила, что тестирует собственную систему Bertie, которая помогает журналистам с написанием черновых вариантов и шаблонов статей.",
      "terms": [
        {
          "class": "Organization",
          "value": "Forbes",
          "start_pos": 18
        },
        {
          "class": "Application",
          "value": "Bertie",
          "start_pos": 77
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Bertie",
            "start_pos": 77
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Forbes",
            "start_pos": 18
          }
        }
      ]
    },
    {
      "id": 336,
      "text": "Так как например модель «wiki_ru», содержит в своем корпусе 1,88 млн слов в словаре, и 2 млн n-грамм токенов, (300 мерных) векторов.",
      "terms": [
        {
          "class": "Model",
          "value": "wiki_ru",
          "start_pos": 25
        }
      ],
      "relations": []
    },
    {
      "id": 337,
      "text": "Мы в Badoo и Bumble стараемся оградить пользователей от неприятных ситуаций, поэтому внедрили инструмент Rude Message Detector.",
      "terms": [
        {
          "class": "Organization",
          "value": "Badoo",
          "start_pos": 5
        },
        {
          "class": "Organization",
          "value": "Bumble",
          "start_pos": 13
        },
        {
          "class": "Application",
          "value": "Rude Message Detector",
          "start_pos": 105
        }
      ],
      "relations": []
    },
    {
      "id": 338,
      "text": "Она очень похожа на SentencePiece, но выполняет чуть больше действий над некоторыми токенами",
      "terms": [
        {
          "class": "Library",
          "value": "SentencePiece",
          "start_pos": 20
        }
      ],
      "relations": []
    },
    {
      "id": 339,
      "text": "Нативная TensorFlow-реализация токенизатора требуется для XLM-RoBERTa.",
      "terms": [
        {
          "class": "Library",
          "value": "TensorFlow",
          "start_pos": 9
        },
        {
          "class": "Model",
          "value": "XLM-RoBERTa",
          "start_pos": 58
        }
      ],
      "relations": []
    },
    {
      "id": 340,
      "text": "Данные: 30 GB русского текста, в котором была Википедия, новости, часть корпуса Taiga и немного книг.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Википедия",
          "start_pos": 46
        },
        {
          "class": "Corpus",
          "value": "Taiga",
          "start_pos": 80
        }
      ],
      "relations": []
    },
    {
      "id": 341,
      "text": "Основным из них был SberSQUAD.",
      "terms": [
        {
          "class": "Model",
          "value": "SberSQUAD",
          "start_pos": 20
        }
      ],
      "relations": []
    },
    {
      "id": 342,
      "text": "Позднее, на RussianSuperGLUE, она показала себя чуть лучше.",
      "terms": [
        {
          "class": "Library",
          "value": "RussianSuperGLUE",
          "start_pos": 12
        }
      ],
      "relations": []
    },
    {
      "id": 343,
      "text": "В последствии эта модель легла в основу модели SBERT наших коллег из смежной команды SberDevices, которую они выложили в открытый доступ.",
      "terms": [
        {
          "class": "Model",
          "value": "SBERT",
          "start_pos": 47
        },
        {
          "class": "Organization",
          "value": "SberDevices",
          "start_pos": 85
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "SBERT",
            "start_pos": 47
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "SberDevices",
            "start_pos": 85
          }
        }
      ]
    },
    {
      "id": 344,
      "text": "Детали: немного переделали код для обучения из библиотеки Transformers.",
      "terms": [
        {
          "class": "Library",
          "value": "Transformers",
          "start_pos": 58
        }
      ],
      "relations": []
    },
    {
      "id": 345,
      "text": "Обучали на всём русском корпусе, что у нас был для ruGPT-3 (Википедия, книги, новости, русский Common Crawl и т.д.).",
      "terms": [
        {
          "class": "Model",
          "value": "ruGPT-3",
          "start_pos": 51
        },
        {
          "class": "InfoResource",
          "value": "Википедия",
          "start_pos": 60
        },
        {
          "class": "Corpus",
          "value": "Common Crawl",
          "start_pos": 95
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruGPT-3",
            "start_pos": 51
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "Common Crawl",
            "start_pos": 95
          }
        }
      ]
    },
    {
      "id": 346,
      "text": "На разных заданиях топовые метрики далеко не только у ruT5-large: лучшие single-model решения также есть у ruRoBERTa-large (задача TERRa и DaNetQA).",
      "terms": [
        {
          "class": "Model",
          "value": "ruT5-large",
          "start_pos": 54
        },
        {
          "class": "Model",
          "value": "ruRoBERTa-large",
          "start_pos": 107
        },
        {
          "class": "Task",
          "value": "TERRa",
          "start_pos": 131
        },
        {
          "class": "Task",
          "value": "DaNetQA",
          "start_pos": 139
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruT5-large",
            "start_pos": 54
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "TERRa",
            "start_pos": 131
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruT5-large",
            "start_pos": 54
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "DaNetQA",
            "start_pos": 139
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruRoBERTa-large",
            "start_pos": 107
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "TERRa",
            "start_pos": 131
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruRoBERTa-large",
            "start_pos": 107
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "DaNetQA",
            "start_pos": 139
          }
        }
      ]
    },
    {
      "id": 347,
      "text": "А на некоторых заданиях лучших результатов удалось достичь на few-shot, т. е. без дообучения модели (задача RCB и RuCoS, YaLM от Яндекса).",
      "terms": [
        {
          "class": "Task",
          "value": "few-shot",
          "start_pos": 62
        },
        {
          "class": "Task",
          "value": "RCB",
          "start_pos": 108
        },
        {
          "class": "Dataset",
          "value": "RuCoS",
          "start_pos": 114
        },
        {
          "class": "Model",
          "value": "YaLM",
          "start_pos": 121
        },
        {
          "class": "Organization",
          "value": "Яндекса",
          "start_pos": 129
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "YaLM",
            "start_pos": 121
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Яндекса",
            "start_pos": 129
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "RuCoS",
            "start_pos": 114
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "few-shot",
            "start_pos": 62
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "YaLM",
            "start_pos": 121
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "RuCoS",
            "start_pos": 114
          }
        }
      ]
    },
    {
      "id": 348,
      "text": "Модели ALBERT, RoBERTa и DistilBERT из библиотеки Hugging Face — самые популярные на сегодняшний день.",
      "terms": [
        {
          "class": "Model",
          "value": "ALBERT",
          "start_pos": 7
        },
        {
          "class": "Model",
          "value": "RoBERTa",
          "start_pos": 15
        },
        {
          "class": "Model",
          "value": "DistilBERT",
          "start_pos": 25
        },
        {
          "class": "Library",
          "value": "Hugging Face",
          "start_pos": 50
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ALBERT",
            "start_pos": 7
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "RoBERTa",
            "start_pos": 15
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DistilBERT",
            "start_pos": 25
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 50
          }
        }
      ]
    },
    {
      "id": 349,
      "text": "Есть стандартная задача извлечения именованных сущностей из текста (NER).",
      "terms": [
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 68
        }
      ],
      "relations": []
    },
    {
      "id": 350,
      "text": "Задача старая и хорошо изученная, для английского языка существует масса коммерческих и открытых решений: Spacy, Stanford NER, OpenNLP, NLTK, MITIE, Google Natural Language API, ParallelDots, Aylien, Rosette, TextRazor.",
      "terms": [
        {
          "class": "Lang",
          "value": "английского языка",
          "start_pos": 38
        },
        {
          "class": "Library",
          "value": "Spacy",
          "start_pos": 106
        },
        {
          "class": "Library",
          "value": "Stanford NER",
          "start_pos": 113
        },
        {
          "class": "Library",
          "value": "OpenNLP",
          "start_pos": 127
        },
        {
          "class": "Library",
          "value": "NLTK",
          "start_pos": 136
        },
        {
          "class": "Library",
          "value": "MITIE",
          "start_pos": 142
        },
        {
          "class": "Library",
          "value": "Google Natural Language API",
          "start_pos": 149
        },
        {
          "class": "Library",
          "value": "ParallelDots",
          "start_pos": 178
        },
        {
          "class": "Library",
          "value": "Aylien",
          "start_pos": 192
        },
        {
          "class": "Library",
          "value": "Rosette",
          "start_pos": 200
        },
        {
          "class": "Library",
          "value": "TextRazor",
          "start_pos": 209
        }
      ],
      "relations": []
    },
    {
      "id": 351,
      "text": "Для русского тоже есть хорошие решения, но они в основном закрытые: DaData, Pullenti, Abbyy Infoextractor, Dictum, Eureka, Promt, RCO, AOT, Ahunter.",
      "terms": [
        {
          "class": "Application",
          "value": "DaData",
          "start_pos": 68
        },
        {
          "class": "Library",
          "value": "Pullenti",
          "start_pos": 76
        },
        {
          "class": "Application",
          "value": "Abbyy Infoextractor",
          "start_pos": 86
        },
        {
          "class": "Library",
          "value": "Dictum",
          "start_pos": 107
        },
        {
          "class": "Library",
          "value": "Eureka",
          "start_pos": 115
        },
        {
          "class": "Library",
          "value": "Promt",
          "start_pos": 123
        },
        {
          "class": "Library",
          "value": "RCO",
          "start_pos": 130
        },
        {
          "class": "Application",
          "value": "AOT",
          "start_pos": 135
        },
        {
          "class": "Library",
          "value": "Ahunter",
          "start_pos": 140
        }
      ],
      "relations": []
    },
    {
      "id": 352,
      "text": "Из открытого мне известен только Томита-парсер и свежий Deepmipt NER.",
      "terms": [
        {
          "class": "Application",
          "value": "Томита-парсер",
          "start_pos": 33
        },
        {
          "class": "Library",
          "value": "Deepmipt NER",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 353,
      "text": "Год назад Дима Веселов начал проект Natasha.",
      "terms": [
        {
          "class": "Person",
          "value": "Дима Веселов",
          "start_pos": 10
        },
        {
          "class": "Activity",
          "value": "Natasha",
          "start_pos": 36
        }
      ],
      "relations": []
    },
    {
      "id": 354,
      "text": "Natasha — это аналог Томита-парсера для Python (Yargy-парсер) плюс набор готовых правил для извлечения имён, адресов, дат, сумм денег и других сущностей.",
      "terms": [
        {
          "class": "Library",
          "value": "Natasha",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "Томита-парсера",
          "start_pos": 21
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 40
        },
        {
          "class": "Application",
          "value": "Yargy-парсер",
          "start_pos": 48
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 40
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Yargy-парсер",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 355,
      "text": "У топовых решений F1-мера для имён была 0.9+.",
      "terms": [
        {
          "class": "Metric",
          "value": "F1-мера",
          "start_pos": 18
        },
        {
          "class": "Value",
          "value": "0.9",
          "start_pos": 40
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "F1-мера",
            "start_pos": 18
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.9",
            "start_pos": 40
          }
        }
      ]
    },
    {
      "id": 356,
      "text": "У Natasha результат хуже — 0.78.",
      "terms": [
        {
          "class": "Model",
          "value": "Natasha",
          "start_pos": 2
        },
        {
          "class": "Value",
          "value": "0.78",
          "start_pos": 27
        }
      ],
      "relations": []
    },
    {
      "id": 357,
      "text": "Yargy — сложная и интересная библиотека, в этой статье мы рассмотрим только простые примеры использования.",
      "terms": [
        {
          "class": "Library",
          "value": "Yargy",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 358,
      "text": "В словаре Opencorpora, который использует pymorphy2, для имён ставится метка Name, для фамилий — метка Surn.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Opencorpora",
          "start_pos": 10
        },
        {
          "class": "Library",
          "value": "pymorphy2",
          "start_pos": 42
        }
      ],
      "relations": []
    },
    {
      "id": 359,
      "text": "Например, качество извлечения имён у Natasha очень далеко от SOTA.",
      "terms": [
        {
          "class": "Library",
          "value": "Natasha",
          "start_pos": 37
        },
        {
          "class": "Library",
          "value": "SOTA",
          "start_pos": 61
        }
      ],
      "relations": []
    },
    {
      "id": 360,
      "text": "В начале 2018 года исследователи из OpenAI, университета Сан-Франциско, Алленовского института искусственного интеллекта и Вашингтонского университета одновременно вывели хитроумный способ приблизиться к этому.",
      "terms": [
        {
          "class": "Date",
          "value": "2018",
          "start_pos": 9
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 36
        },
        {
          "class": "Organization",
          "value": "Алленовского института искусственного интеллекта",
          "start_pos": 72
        },
        {
          "class": "Organization",
          "value": "Вашингтонского университета",
          "start_pos": 123
        }
      ],
      "relations": []
    },
    {
      "id": 361,
      "text": "Набор данных назвали Гансом (Heuristic Analysis for Natural-Language-Inference Systems, HANS) [эвристический анализ систем, делающих заключения на основе естественного языка].",
      "terms": [
        {
          "class": "Dataset",
          "value": "Гансом",
          "start_pos": 21
        },
        {
          "class": "Dataset",
          "value": "Heuristic Analysis for Natural-Language-Inference Systems",
          "start_pos": 29
        },
        {
          "class": "Dataset",
          "value": "HANS",
          "start_pos": 88
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "Heuristic Analysis for Natural-Language-Inference Systems",
            "start_pos": 29
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Dataset",
            "value": "Гансом",
            "start_pos": 21
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "HANS",
            "start_pos": 88
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Dataset",
            "value": "Гансом",
            "start_pos": 21
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "HANS",
            "start_pos": 88
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Dataset",
            "value": "Heuristic Analysis for Natural-Language-Inference Systems",
            "start_pos": 29
          }
        }
      ]
    },
    {
      "id": 363,
      "text": "Рады представить вам PyCaret – библиотеку машинного обучения с открытым исходным кодом на Python для обучения и развертывания моделей с учителем и без учителя в low-code среде.",
      "terms": [
        {
          "class": "Library",
          "value": "PyCaret",
          "start_pos": 21
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 90
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 90
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "PyCaret",
            "start_pos": 21
          }
        }
      ]
    },
    {
      "id": 364,
      "text": "PyCaret позволит вам пройти путь от подготовки данных до развертывания модели за несколько секунд в той notebook-среде, которую вы выберете.",
      "terms": [
        {
          "class": "Library",
          "value": "PyCaret",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "notebook",
          "start_pos": 104
        }
      ],
      "relations": []
    },
    {
      "id": 365,
      "text": "PyCaret – это, по сути, оболочка Python над несколькими библиотеками машинного обучения, такими как scikit-learn, XGBoost, Microsoft LightGBM, spaCy и многими другими.",
      "terms": [
        {
          "class": "Library",
          "value": "PyCaret",
          "start_pos": 0
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 33
        },
        {
          "class": "Library",
          "value": "scikit-learn",
          "start_pos": 100
        },
        {
          "class": "Library",
          "value": "XGBoost",
          "start_pos": 114
        },
        {
          "class": "Library",
          "value": "Microsoft LightGBM",
          "start_pos": 123
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 33
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "PyCaret",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 366,
      "text": "Первый стабильный релиз PyCaret версии 1.0.0 можно установить с помощью pip.",
      "terms": [
        {
          "class": "Library",
          "value": "PyCaret",
          "start_pos": 24
        },
        {
          "class": "Environment",
          "value": "pip",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 367,
      "text": "Этот датасет доступен на GitHub-репозитории PyCaret.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "GitHub",
          "start_pos": 25
        },
        {
          "class": "Library",
          "value": "PyCaret",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 368,
      "text": "Для классификации: Accuracy, AUC, Recall, Precision, F1, Kappa.",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 4
        },
        {
          "class": "Metric",
          "value": "Accuracy",
          "start_pos": 19
        },
        {
          "class": "Metric",
          "value": "AUC",
          "start_pos": 29
        },
        {
          "class": "Metric",
          "value": "Recall",
          "start_pos": 34
        },
        {
          "class": "Metric",
          "value": "Precision",
          "start_pos": 42
        },
        {
          "class": "Metric",
          "value": "F1",
          "start_pos": 53
        },
        {
          "class": "Metric",
          "value": "Kappa",
          "start_pos": 57
        }
      ],
      "relations": []
    },
    {
      "id": 369,
      "text": "Для регрессии: MAE, MSE, RMSE, R2, RMSLE, MAPE",
      "terms": [
        {
          "class": "Task",
          "value": "регрессии",
          "start_pos": 4
        },
        {
          "class": "Metric",
          "value": "MAE",
          "start_pos": 15
        },
        {
          "class": "Metric",
          "value": "MSE",
          "start_pos": 20
        },
        {
          "class": "Metric",
          "value": "RMSE",
          "start_pos": 25
        },
        {
          "class": "Metric",
          "value": "R2",
          "start_pos": 31
        },
        {
          "class": "Metric",
          "value": "RMSLE",
          "start_pos": 35
        },
        {
          "class": "Metric",
          "value": "MAPE",
          "start_pos": 42
        }
      ],
      "relations": []
    },
    {
      "id": 370,
      "text": "Стэнфордская нейросеть определяет тональность текста с точностью 85%",
      "terms": [
        {
          "class": "Model",
          "value": "Стэнфордская нейросеть",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "точностью",
          "start_pos": 55
        },
        {
          "class": "Value",
          "value": "85%",
          "start_pos": 65
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точностью",
            "start_pos": 55
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "85%",
            "start_pos": 65
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точностью",
            "start_pos": 55
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Стэнфордская нейросеть",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 371,
      "text": "Нейросеть от Стэнфорда демонстрирует точность в 85% при определении тональности текста.",
      "terms": [
        {
          "class": "Model",
          "value": "Нейросеть",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Стэнфорда",
          "start_pos": 13
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 37
        },
        {
          "class": "Value",
          "value": "85%",
          "start_pos": 48
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 37
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "Нейросеть",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Нейросеть",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Стэнфорда",
            "start_pos": 13
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 37
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "85%",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 372,
      "text": "Для англоязычного nlp-сообщества задача поиска сложного слова в тексте называется так: CWI – complex word identification.",
      "terms": [
        {
          "class": "Task",
          "value": "CWI",
          "start_pos": 87
        },
        {
          "class": "Task",
          "value": "complex word identification",
          "start_pos": 93
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "complex word identification",
            "start_pos": 93
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "CWI",
            "start_pos": 87
          }
        }
      ]
    },
    {
      "id": 373,
      "text": "Примеры обучения LDA часто демонстрируются на \"образцовых\" датасетах, например \"20 newsgroups dataset\", который есть в sklearn.",
      "terms": [
        {
          "class": "Model",
          "value": "LDA",
          "start_pos": 17
        },
        {
          "class": "Dataset",
          "value": "20 newsgroups dataset",
          "start_pos": 80
        },
        {
          "class": "Library",
          "value": "sklearn",
          "start_pos": 119
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "LDA",
            "start_pos": 17
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "20 newsgroups dataset",
            "start_pos": 80
          }
        }
      ]
    },
    {
      "id": 374,
      "text": "Для стемминга использовался pymystem3.",
      "terms": [
        {
          "class": "Library",
          "value": "pymystem3",
          "start_pos": 28
        }
      ],
      "relations": []
    },
    {
      "id": 375,
      "text": "Объединенная команда специалистов Пенсильванского и Шеффилдского университетов создала слабую форму искусственного интеллекта, которая способна предсказывать решения Европейского суда по правам человека (European Court of Human Rights, ECtHR, ЕСПЧ) с точностью в 79%.",
      "terms": [
        {
          "class": "Organization",
          "value": "Пенсильванского",
          "start_pos": 34
        },
        {
          "class": "Organization",
          "value": "Шеффилдского университетов",
          "start_pos": 52
        },
        {
          "class": "Metric",
          "value": "точностью",
          "start_pos": 251
        },
        {
          "class": "Value",
          "value": "79%",
          "start_pos": 263
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точностью",
            "start_pos": 251
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "79%",
            "start_pos": 263
          }
        }
      ]
    },
    {
      "id": 376,
      "text": "Он демонстрирует точность 95%.",
      "terms": [
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 17
        },
        {
          "class": "Value",
          "value": "95%",
          "start_pos": 26
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 17
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "95%",
            "start_pos": 26
          }
        }
      ]
    },
    {
      "id": 377,
      "text": "На данный момент подход дает прогноз с accuracy 0,64, что выше случайного предсказания.",
      "terms": [
        {
          "class": "Method",
          "value": "подход",
          "start_pos": 17
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 39
        },
        {
          "class": "Value",
          "value": "0,64",
          "start_pos": 48
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 39
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "подход",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 39
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0,64",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 378,
      "text": "Таким образом, хоть и удается достигнуть высокой точности, но результат не всегда стабилен и в моем случае колеблется в промежутке 75-80%.",
      "terms": [
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 49
        },
        {
          "class": "Value",
          "value": "75-80%",
          "start_pos": 131
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 49
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "75-80%",
            "start_pos": 131
          }
        }
      ]
    },
    {
      "id": 379,
      "text": "Видно, что при перестановках качество падает, но это падение не критично и точность остается в диапазоне 69-80%.",
      "terms": [
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 75
        },
        {
          "class": "Value",
          "value": "69-80%",
          "start_pos": 105
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 75
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "69-80%",
            "start_pos": 105
          }
        }
      ]
    },
    {
      "id": 380,
      "text": "ЗаключениеВ итоге, моделью RuBioRoBERTa в задаче RuMedDaNet мне удалось добиться качества 73.24% на закрытой тестовой части данных (хотя на dev метрика Accuracy вообще была 81.64%).",
      "terms": [
        {
          "class": "Model",
          "value": "RuBioRoBERTa",
          "start_pos": 27
        },
        {
          "class": "Task",
          "value": "RuMedDaNet",
          "start_pos": 49
        },
        {
          "class": "Metric",
          "value": "Accuracy",
          "start_pos": 152
        },
        {
          "class": "Value",
          "value": "81.64%",
          "start_pos": 173
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Accuracy",
            "start_pos": 152
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "81.64%",
            "start_pos": 173
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "Accuracy",
            "start_pos": 152
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "RuMedDaNet",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "Accuracy",
            "start_pos": 152
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "RuBioRoBERTa",
            "start_pos": 27
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "RuBioRoBERTa",
            "start_pos": 27
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "RuMedDaNet",
            "start_pos": 49
          }
        }
      ]
    },
    {
      "id": 381,
      "text": "Точность модели составила 58%, если учитывать все слот.",
      "terms": [
        {
          "class": "Metric",
          "value": "Точность",
          "start_pos": 0
        },
        {
          "class": "Value",
          "value": "58%",
          "start_pos": 26
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Точность",
            "start_pos": 0
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "58%",
            "start_pos": 26
          }
        }
      ]
    },
    {
      "id": 382,
      "text": "После тонкой настройки модель показала примерно 63%-ю точность как на учебном, так и на контрольном наборах данных.",
      "terms": [
        {
          "class": "Value",
          "value": "63%-ю",
          "start_pos": 48
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 54
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 54
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "63%-ю",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 383,
      "text": "Самые интересные для нас сущности – судья и прокурор – быстро идентифицируются из более чем 200 миллионов документов с точностью выше 92%».",
      "terms": [
        {
          "class": "Metric",
          "value": "точностью",
          "start_pos": 119
        },
        {
          "class": "Value",
          "value": "92%",
          "start_pos": 134
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точностью",
            "start_pos": 119
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "92%",
            "start_pos": 134
          }
        }
      ]
    },
    {
      "id": 384,
      "text": "В сравнении показываются FriendBERT и ChatBERT, которые по итогу исследования представили точность (MacroAVG F-меру), равную 73% для первой и 69,5% для второй модели соответственно.",
      "terms": [
        {
          "class": "Model",
          "value": "FriendBERT",
          "start_pos": 25
        },
        {
          "class": "Model",
          "value": "ChatBERT",
          "start_pos": 38
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 90
        },
        {
          "class": "Metric",
          "value": "MacroAVG F-меру",
          "start_pos": 100
        },
        {
          "class": "Value",
          "value": "73%",
          "start_pos": 125
        },
        {
          "class": "Value",
          "value": "69,5%",
          "start_pos": 142
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "MacroAVG F-меру",
            "start_pos": 100
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "FriendBERT",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MacroAVG F-меру",
            "start_pos": 100
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "ChatBERT",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 90
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "FriendBERT",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 90
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "ChatBERT",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MacroAVG F-меру",
            "start_pos": 100
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 90
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "73%",
            "start_pos": 125
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 90
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "69,5%",
            "start_pos": 142
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MacroAVG F-меру",
            "start_pos": 100
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "73%",
            "start_pos": 125
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "MacroAVG F-меру",
            "start_pos": 100
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "69,5%",
            "start_pos": 142
          }
        }
      ]
    },
    {
      "id": 385,
      "text": "Разработал систему компьютерной алгебры Mathematica и систему извлечения знаний WolframAlpha.",
      "terms": [
        {
          "class": "Application",
          "value": "Mathematica",
          "start_pos": 40
        },
        {
          "class": "Application",
          "value": "WolframAlpha",
          "start_pos": 80
        }
      ],
      "relations": []
    },
    {
      "id": 386,
      "text": "В чем проблема Пролога, да и любой системы / языка программирования, назначение которых анализировать факты и искать ответы на вопросы?",
      "terms": [
        {
          "class": "Application",
          "value": "Пролога",
          "start_pos": 15
        }
      ],
      "relations": []
    },
    {
      "id": 387,
      "text": "Интерес представляют и системы DeepMind, которые в дополнение к нейросети имеют внешнюю память фактов (или опыта), что позволяет им обучаться без учителя «правилам игры», просто проявляя активность в среде и записывая ее результат.",
      "terms": [
        {
          "class": "Application",
          "value": "DeepMind",
          "start_pos": 31
        }
      ],
      "relations": []
    },
    {
      "id": 388,
      "text": "В заглавии упомянута и на картинке представлена ELIZA — диалоговая система-психоаналитик (сейчас, ее назвали бы чат-бот), родом из 60-ых годов.",
      "terms": [
        {
          "class": "Application",
          "value": "ELIZA",
          "start_pos": 48
        }
      ],
      "relations": []
    },
    {
      "id": 389,
      "text": "GNMT есть система нейронного машинного перевода (NMT) компании Google, которая использует нейросеть (ANN) для повышения точности и скорости перевода, и в частности для создания лучших, более естественных вариантов перевода текста в Google Translate.",
      "terms": [
        {
          "class": "Application",
          "value": "GNMT",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "NMT",
          "start_pos": 49
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 63
        },
        {
          "class": "Model",
          "value": "ANN",
          "start_pos": 101
        },
        {
          "class": "Application",
          "value": "Google Translate",
          "start_pos": 232
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Google Translate",
            "start_pos": 232
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 63
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ANN",
            "start_pos": 101
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "GNMT",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "GNMT",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 63
          }
        }
      ]
    },
    {
      "id": 390,
      "text": "Его обучали с помощью большого количества текстов из Интернета и системы Reinforcement Learning from Human Feedback.",
      "terms": [
        {
          "class": "Application",
          "value": "Reinforcement Learning from Human Feedback",
          "start_pos": 73
        }
      ],
      "relations": []
    },
    {
      "id": 391,
      "text": "Во-вторых, даже перевод между русским и эрзянским ещё расти и расти: у SOTA систем для высокоресурсных языков BLEU обычно где-то между 40 и 80.",
      "terms": [
        {
          "class": "Application",
          "value": "SOTA",
          "start_pos": 71
        },
        {
          "class": "Environment",
          "value": "BLEU",
          "start_pos": 110
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "BLEU",
            "start_pos": 110
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "SOTA",
            "start_pos": 71
          }
        }
      ]
    },
    {
      "id": 392,
      "text": "Insertions – вставки слов, которых нет в исходной аудиозаписи Substitutions – замены слов на некорректные Deletions – система слово не распознала и сделала пропуск",
      "terms": [
        {
          "class": "Application",
          "value": "Deletions",
          "start_pos": 106
        }
      ],
      "relations": []
    },
    {
      "id": 393,
      "text": "“Вам курицу или рыбу?” – Рекомендательная система на “Своем Родном” знает ответ / Habr",
      "terms": [
        {
          "class": "Application",
          "value": "Своем Родном",
          "start_pos": 54
        }
      ],
      "relations": []
    },
    {
      "id": 394,
      "text": "Его обучали с помощью большого количества текстов из Интернета и системы Reinforcement Learning from Human Feedback.",
      "terms": [
        {
          "class": "Application",
          "value": "Reinforcement Learning from Human Feedback",
          "start_pos": 73
        }
      ],
      "relations": []
    },
    {
      "id": 395,
      "text": "Система Kaldi, разработанная британским специалистом по нейросетям Даниэлем Повеем, предоставляет пользователю наиболее широкий выбор алгоритмов для разных задач и удобна в использовании.",
      "terms": [
        {
          "class": "Application",
          "value": "Kaldi",
          "start_pos": 8
        },
        {
          "class": "Person",
          "value": "Даниэлем Повеем",
          "start_pos": 67
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Kaldi",
            "start_pos": 8
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Даниэлем Повеем",
            "start_pos": 67
          }
        }
      ]
    },
    {
      "id": 396,
      "text": "Британский специалист по нейросетям Даниэль Пове создал систему Kaldi, которая предоставляет пользователю разнообразные алгоритмы для решения различных задач и отличается удобством в использовании.",
      "terms": [
        {
          "class": "Person",
          "value": "Даниэль Пове",
          "start_pos": 36
        },
        {
          "class": "Application",
          "value": "Kaldi",
          "start_pos": 64
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Kaldi",
            "start_pos": 64
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Даниэль Пове",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 397,
      "text": "А AI позволяет извлекать из данных нужную информацию, что делает системы IoT намного более интеллектуальными.",
      "terms": [
        {
          "class": "Application",
          "value": "IoT",
          "start_pos": 73
        }
      ],
      "relations": []
    },
    {
      "id": 398,
      "text": "После того, как данные загружены в систему, CLI позволяет осуществить её тонкую настройку, в том числе — воспользоваться специальной опцией для двоичной классификации.",
      "terms": [
        {
          "class": "Application",
          "value": "CLI",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 399,
      "text": "Google представила систему искусственного интеллекта MusicLM, которая способна генерировать музыку в любом жанре по текстовому описанию.",
      "terms": [
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "MusicLM",
          "start_pos": 53
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "MusicLM",
            "start_pos": 53
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 400,
      "text": "Ниже показаны примеры генерации кода с использованием сервиса CodeWhisperer на всех трёх перечисленных выше языках программирования.",
      "terms": [
        {
          "class": "Application",
          "value": "CodeWhisperer",
          "start_pos": 62
        }
      ],
      "relations": []
    },
    {
      "id": 401,
      "text": "Аналогичный описанному выше сервис был запущен Microsoft в прошлом, 2021 году, и получил название Copilot.",
      "terms": [
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 47
        },
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 68
        },
        {
          "class": "Application",
          "value": "Copilot",
          "start_pos": 98
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2021",
            "start_pos": 68
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "Copilot",
            "start_pos": 98
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Copilot",
            "start_pos": 98
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 402,
      "text": "Система может быть подключена в виде расширения для сред разработки: Visual Studio Code, Visual Studio, Neovim, набора IDE от JetBrains.",
      "terms": [
        {
          "class": "Application",
          "value": "Visual Studio Code",
          "start_pos": 69
        },
        {
          "class": "Application",
          "value": "Visual Studio",
          "start_pos": 89
        },
        {
          "class": "Application",
          "value": "Neovim",
          "start_pos": 104
        },
        {
          "class": "Application",
          "value": "IDE",
          "start_pos": 119
        },
        {
          "class": "Organization",
          "value": "JetBrains",
          "start_pos": 126
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "IDE",
            "start_pos": 119
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "JetBrains",
            "start_pos": 126
          }
        }
      ]
    },
    {
      "id": 403,
      "text": "Процент роботов среди трафика относительно низок, при этом самый высокий показатель приходится на трафик поисковых систем (Baidu) и составляет 1,0%.",
      "terms": [
        {
          "class": "Application",
          "value": "Baidu",
          "start_pos": 123
        }
      ],
      "relations": []
    },
    {
      "id": 404,
      "text": "Поддерживается система рекомендаций для разработки приложений на языках Java, Javascript и Python.",
      "terms": [
        {
          "class": "Environment",
          "value": "Java",
          "start_pos": 72
        },
        {
          "class": "Environment",
          "value": "Javascript",
          "start_pos": 78
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 91
        }
      ],
      "relations": []
    },
    {
      "id": 405,
      "text": "Ниже показаны примеры генерации кода с использованием сервиса CodeWhisperer на всех трёх перечисленных выше языках программирования.",
      "terms": [
        {
          "class": "Application",
          "value": "CodeWhisperer",
          "start_pos": 62
        }
      ],
      "relations": []
    },
    {
      "id": 406,
      "text": "Одним из самых известных датасетов по задаче модерации является датасет с соревнования на Kaggle Toxic Comment Classification Challenge.",
      "terms": [
        {
          "class": "Dataset",
          "value": "датасет",
          "start_pos": 64
        },
        {
          "class": "Activity",
          "value": "Kaggle Toxic Comment Classification Challenge",
          "start_pos": 90
        }
      ],
      "relations": []
    },
    {
      "id": 407,
      "text": "Для обучения модели был использован гигантский датасет mC4, включающий в себя 6,6 млрд веб-страниц на 101 языке.",
      "terms": [
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 13
        },
        {
          "class": "Dataset",
          "value": "mC4",
          "start_pos": 55
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модели",
            "start_pos": 13
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "mC4",
            "start_pos": 55
          }
        }
      ]
    },
    {
      "id": 408,
      "text": "Есть множество датасетов, таких как:Paraphraser Plus; корпус парафраз, собранных Давидом Дале;корпус парафраз из новостных заголовков, собранный Екатериной Пронозой;корпус парафраз-заголовков, собранный командой Вадима Гудкова.",
      "terms": [
        {
          "class": "Dataset",
          "value": "Paraphraser Plus",
          "start_pos": 36
        },
        {
          "class": "Corpus",
          "value": "корпус парафраз",
          "start_pos": 54
        },
        {
          "class": "Person",
          "value": "Давидом Дале",
          "start_pos": 81
        },
        {
          "class": "Corpus",
          "value": "корпус парафраз из новостных заголовков",
          "start_pos": 94
        },
        {
          "class": "Person",
          "value": "Екатериной Пронозой",
          "start_pos": 145
        },
        {
          "class": "Corpus",
          "value": "корпус парафраз-заголовков",
          "start_pos": 165
        },
        {
          "class": "Person",
          "value": "Вадима Гудкова",
          "start_pos": 212
        }
      ],
      "relations": []
    },
    {
      "id": 409,
      "text": "На базе этих корпусов есть также обученные модели в том числе на основе ruT5 и ruGPT3 (например, несколько моделей находятся в библиотеке russian_paraphrases, или например мультитасковая модель).",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпусов",
          "start_pos": 13
        },
        {
          "class": "Model",
          "value": "ruT5",
          "start_pos": 72
        },
        {
          "class": "Model",
          "value": "ruGPT3",
          "start_pos": 79
        },
        {
          "class": "Library",
          "value": "russian_paraphrases",
          "start_pos": 138
        },
        {
          "class": "Model",
          "value": "мультитасковая модель",
          "start_pos": 172
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "мультитасковая модель",
            "start_pos": 172
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "корпусов",
            "start_pos": 13
          }
        }
      ]
    },
    {
      "id": 410,
      "text": "Прежде всего, стоит выделить Dialog State Tracking Challenge, в этом году он, кстати, будет проводиться уже в шестой раз.",
      "terms": [
        {
          "class": "Activity",
          "value": "Dialog State Tracking Challenge",
          "start_pos": 29
        }
      ],
      "relations": []
    },
    {
      "id": 411,
      "text": "Текстах аудиокниг, будем использовать датасет caito, в котором как раз есть тексты на всех языках, на которых обучалась модель (20,000 случайных предложений на каждый язык);",
      "terms": [
        {
          "class": "Dataset",
          "value": "caito",
          "start_pos": 46
        }
      ],
      "relations": []
    },
    {
      "id": 412,
      "text": "Это не упоминалось ранее, однако исходные вопросы для сбора демонстраций и генерации пар на сравнение (в RL/RM частях) были выбраны из датасета ELI5.",
      "terms": [
        {
          "class": "Dataset",
          "value": "ELI5",
          "start_pos": 144
        }
      ],
      "relations": []
    },
    {
      "id": 413,
      "text": "Пары предложений новых языков с русским я взял из датасета CCMatrix, и по ходу дообучения дополнял их эрзянскими переводами из своей русско-эрзянской модели, чтобы потом учить другую модель переводить эти эрзянские тексты на иностранный.",
      "terms": [
        {
          "class": "Dataset",
          "value": "CCMatrix",
          "start_pos": 59
        }
      ],
      "relations": []
    },
    {
      "id": 414,
      "text": "Вот несколько примеров из тренировочного датасета:ContextQuestionAnswer",
      "terms": [
        {
          "class": "Dataset",
          "value": "ContextQuestionAnswer",
          "start_pos": 50
        }
      ],
      "relations": []
    },
    {
      "id": 415,
      "text": "Например, в наборе данных CRD3 использовались стенограммы шоу Critical Role.",
      "terms": [
        {
          "class": "Dataset",
          "value": "CRD3",
          "start_pos": 26
        }
      ],
      "relations": []
    },
    {
      "id": 416,
      "text": "Проверим этот метод на практике, обучив модель на табличном датасете California Housing, в котором нужно предсказывать цену недвижимости в разных районах Калифорнии, имея 8 исходных признаков.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 40
        },
        {
          "class": "Dataset",
          "value": "California Housing",
          "start_pos": 69
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 40
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "California Housing",
            "start_pos": 69
          }
        }
      ]
    },
    {
      "id": 417,
      "text": "Давайте протестируем данную методику, обучив модель на датасете California Housing.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 45
        },
        {
          "class": "Dataset",
          "value": "California Housing",
          "start_pos": 64
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 45
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "California Housing",
            "start_pos": 64
          }
        }
      ]
    },
    {
      "id": 418,
      "text": "Чтобы оценить точность регрессора, мы будем использовать наборы данных Medical Cost Personal Datasets | Kaggle.",
      "terms": [
        {
          "class": "Task",
          "value": "оценить точность регрессора",
          "start_pos": 6
        },
        {
          "class": "Dataset",
          "value": "Medical Cost Personal Datasets",
          "start_pos": 71
        },
        {
          "class": "InfoResource",
          "value": "Kaggle",
          "start_pos": 104
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "Medical Cost Personal Datasets",
            "start_pos": 71
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "оценить точность регрессора",
            "start_pos": 6
          }
        }
      ]
    },
    {
      "id": 419,
      "text": "В задаче классификации на 10%, 20%, 30%, 40%, 50% от общего датасета тестовой выборки DatRet показал лучшие результаты.",
      "terms": [
        {
          "class": "Dataset",
          "value": "DatRet",
          "start_pos": 86
        }
      ],
      "relations": []
    },
    {
      "id": 420,
      "text": "И речь здесь даже не о том, что метрики качества оцениваются в первую очередь на общих датасетах вроде COCO, а в том, что сами метрики заточены под исследовательские цели.",
      "terms": [
        {
          "class": "Dataset",
          "value": "COCO",
          "start_pos": 103
        }
      ],
      "relations": []
    },
    {
      "id": 421,
      "text": "TAPE является логичным развитием проекта Russian SuperGLUE, где на вопросно-ответных датасетах RuCoS, MuSeRC и DaNetQA решения участников уже достигли уровня человека.",
      "terms": [
        {
          "class": "Application",
          "value": "TAPE",
          "start_pos": 0
        },
        {
          "class": "Activity",
          "value": "Russian SuperGLUE",
          "start_pos": 41
        },
        {
          "class": "Dataset",
          "value": "RuCoS",
          "start_pos": 95
        },
        {
          "class": "Dataset",
          "value": "MuSeRC",
          "start_pos": 102
        },
        {
          "class": "Dataset",
          "value": "DaNetQA",
          "start_pos": 111
        }
      ],
      "relations": []
    },
    {
      "id": 422,
      "text": "Датасет Ethics состоит из двух частей.",
      "terms": [
        {
          "class": "Dataset",
          "value": "Ethics",
          "start_pos": 8
        }
      ],
      "relations": []
    },
    {
      "id": 423,
      "text": "Для тестирования были отобраны два класса по две тысячи примеров из датасета интентов нашего чат-бота Смарти, которые показывали высокую и среднюю оценку разнообразия по self-bleu по 3-граммам.",
      "terms": [
        {
          "class": "Dataset",
          "value": "датасета интентов",
          "start_pos": 68
        },
        {
          "class": "Application",
          "value": "Смарти",
          "start_pos": 102
        }
      ],
      "relations": []
    },
    {
      "id": 424,
      "text": "В рамках этой статьи давайте предположим, что у нас есть датасет для обучения обычного многоклассового классификатора интентов.",
      "terms": [
        {
          "class": "Dataset",
          "value": "датасет для обучения обычного многоклассового классификатора интентов",
          "start_pos": 57
        }
      ],
      "relations": []
    },
    {
      "id": 425,
      "text": "Обучались на датасете открытого кода с Гитхаба, больше всего в выборке было питона.",
      "terms": [
        {
          "class": "Dataset",
          "value": "датасете открытого кода с Гитхаба",
          "start_pos": 13
        }
      ],
      "relations": []
    },
    {
      "id": 426,
      "text": "Данные для обучения включали в себя отфильтрованный датасет CommonCrawl (составляет большую пропорцию всех текстов, которые присутствовали в обучении), а также корпус книжных текстов и текстов Википедии.",
      "terms": [
        {
          "class": "Dataset",
          "value": "CommonCrawl",
          "start_pos": 60
        },
        {
          "class": "InfoResource",
          "value": "Википедии",
          "start_pos": 193
        }
      ],
      "relations": []
    },
    {
      "id": 427,
      "text": "Dusha: самый большой открытый датасет для распознавания эмоций в устной речи на русском языке.",
      "terms": [
        {
          "class": "Dataset",
          "value": "Dusha",
          "start_pos": 0
        },
        {
          "class": "Dataset",
          "value": "датасет",
          "start_pos": 30
        },
        {
          "class": "Task",
          "value": "распознавания эмоций",
          "start_pos": 42
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 80
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "Dusha",
            "start_pos": 0
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания эмоций",
            "start_pos": 42
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "датасет",
            "start_pos": 30
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания эмоций",
            "start_pos": 42
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "Dusha",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 80
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "датасет",
            "start_pos": 30
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 80
          }
        }
      ]
    },
    {
      "id": 428,
      "text": "Dusha - это крупнейший открытый набор данных на русском языке для распознавания эмоций в речи.",
      "terms": [
        {
          "class": "Dataset",
          "value": "Dusha",
          "start_pos": 0
        },
        {
          "class": "Dataset",
          "value": "набор данных",
          "start_pos": 32
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 48
        },
        {
          "class": "Task",
          "value": "распознавания эмоций в речи",
          "start_pos": 66
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "Dusha",
            "start_pos": 0
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания эмоций в речи",
            "start_pos": 66
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "набор данных",
            "start_pos": 32
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания эмоций в речи",
            "start_pos": 66
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "Dusha",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 48
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "набор данных",
            "start_pos": 32
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 429,
      "text": "Де-факто, в подавляющем большинстве случаев, бенчмарком для новых моделей распознавания эмоций является англоязычный датасет IEMOCAP с игрой профессиональных актёров.",
      "terms": [
        {
          "class": "Task",
          "value": "распознавания эмоций",
          "start_pos": 74
        },
        {
          "class": "Lang",
          "value": "англоязычный",
          "start_pos": 104
        },
        {
          "class": "Dataset",
          "value": "IEMOCAP",
          "start_pos": 125
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "IEMOCAP",
            "start_pos": 125
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания эмоций",
            "start_pos": 74
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "IEMOCAP",
            "start_pos": 125
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "англоязычный",
            "start_pos": 104
          }
        }
      ]
    },
    {
      "id": 430,
      "text": "IEMOCAP, англоязычный набор данных, служит стандартом для распознавания эмоций.",
      "terms": [
        {
          "class": "Dataset",
          "value": "IEMOCAP",
          "start_pos": 0
        },
        {
          "class": "Lang",
          "value": "англоязычный",
          "start_pos": 9
        },
        {
          "class": "Task",
          "value": "распознавания эмоций",
          "start_pos": 58
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "IEMOCAP",
            "start_pos": 0
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания эмоций",
            "start_pos": 58
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "IEMOCAP",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "англоязычный",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 431,
      "text": "Если датасеты с большим количеством семплов и находятся (к примеру, CMU-MOSEI, MURCO), то у них очень ярко проявляется проблема из п1.",
      "terms": [
        {
          "class": "Dataset",
          "value": "CMU-MOSEI",
          "start_pos": 68
        },
        {
          "class": "Dataset",
          "value": "MURCO",
          "start_pos": 79
        }
      ],
      "relations": []
    },
    {
      "id": 432,
      "text": "Столкнувшись с описанными выше проблемами, мы решили собрать свой датасет для распознавания эмоций и назвали его Dusha, по аналогии с датасетом для распознавания речи — Golos.",
      "terms": [
        {
          "class": "Task",
          "value": "распознавания эмоций",
          "start_pos": 78
        },
        {
          "class": "Dataset",
          "value": "Dusha",
          "start_pos": 113
        },
        {
          "class": "Task",
          "value": "распознавания речи",
          "start_pos": 148
        },
        {
          "class": "Dataset",
          "value": "Golos",
          "start_pos": 169
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "Dusha",
            "start_pos": 113
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания эмоций",
            "start_pos": 78
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "Golos",
            "start_pos": 169
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания речи",
            "start_pos": 148
          }
        }
      ]
    },
    {
      "id": 433,
      "text": "Эту часть датасета мы назвали Crowd.",
      "terms": [
        {
          "class": "Dataset",
          "value": "Crowd",
          "start_pos": 30
        }
      ],
      "relations": []
    },
    {
      "id": 434,
      "text": "Мы обучали движок Amazon Translate, используя «Active Custom Translation», который позволяет выполнять перевод на лету с использованием двуязычного корпуса.",
      "terms": [
        {
          "class": "Application",
          "value": "Amazon Translate",
          "start_pos": 18
        },
        {
          "class": "Application",
          "value": "Active Custom Translation",
          "start_pos": 47
        },
        {
          "class": "Task",
          "value": "перевод",
          "start_pos": 103
        },
        {
          "class": "Corpus",
          "value": "двуязычного корпуса",
          "start_pos": 136
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Amazon Translate",
            "start_pos": 18
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "перевод",
            "start_pos": 103
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Active Custom Translation",
            "start_pos": 47
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "перевод",
            "start_pos": 103
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "двуязычного корпуса",
            "start_pos": 136
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "перевод",
            "start_pos": 103
          }
        }
      ]
    },
    {
      "id": 435,
      "text": "Та статья была написана совместно с Ильей Гусевым, у которого есть библиотека для анализа и генерации стихов на русском языке и поэтический корпус русского языка.",
      "terms": [
        {
          "class": "Person",
          "value": "Ильей Гусевым",
          "start_pos": 36
        },
        {
          "class": "Library",
          "value": "библиотека для анализа и генерации стихов",
          "start_pos": 67
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 112
        },
        {
          "class": "Corpus",
          "value": "поэтический корпус",
          "start_pos": 128
        },
        {
          "class": "Lang",
          "value": "русского языка",
          "start_pos": 147
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "поэтический корпус",
            "start_pos": 128
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русского языка",
            "start_pos": 147
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "библиотека для анализа и генерации стихов",
            "start_pos": 67
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ильей Гусевым",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 436,
      "text": "Этот материал был создан совместно с Ильей Гусевым, у которого имеется библиотека для анализа и генерации стихов на русском языке, а также поэтический корпус русского языка.",
      "terms": [
        {
          "class": "Person",
          "value": "Ильей Гусевым",
          "start_pos": 37
        },
        {
          "class": "Library",
          "value": "библиотека для анализа и генерации стихов",
          "start_pos": 71
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 116
        },
        {
          "class": "Corpus",
          "value": "поэтический корпус",
          "start_pos": 139
        },
        {
          "class": "Lang",
          "value": "русского языка",
          "start_pos": 158
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "поэтический корпус",
            "start_pos": 139
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русского языка",
            "start_pos": 158
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "библиотека для анализа и генерации стихов",
            "start_pos": 71
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ильей Гусевым",
            "start_pos": 37
          }
        }
      ]
    },
    {
      "id": 437,
      "text": "Обученный на большом корпусе русской литературы «Порфирьевич» порадовал публику множеством забавных творений.",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпусе русской литературы",
          "start_pos": 21
        },
        {
          "class": "Application",
          "value": "Порфирьевич",
          "start_pos": 49
        }
      ],
      "relations": []
    },
    {
      "id": 438,
      "text": "Для обучения использовался корпус объёмом около 750 Гб, получивший название C4 (Colossal Clean Crawled Corpus, Колоссальный очищенный собранный в интернете корпус), являющийся отфильтрованной версией корпуса Common Crawl.",
      "terms": [
        {
          "class": "Corpus",
          "value": "C4",
          "start_pos": 76
        },
        {
          "class": "Corpus",
          "value": "Colossal Clean Crawled Corpus",
          "start_pos": 80
        },
        {
          "class": "Corpus",
          "value": "Колоссальный очищенный собранный в интернете корпус",
          "start_pos": 111
        },
        {
          "class": "Corpus",
          "value": "Common Crawl",
          "start_pos": 208
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "Colossal Clean Crawled Corpus",
            "start_pos": 80
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "C4",
            "start_pos": 76
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "Колоссальный очищенный собранный в интернете корпус",
            "start_pos": 111
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "C4",
            "start_pos": 76
          }
        }
      ]
    },
    {
      "id": 439,
      "text": "Для обучения использовался корпус C4 (Colossal Clean Crawled Corpus, Колоссальный очищенный собранный в интернете корпус).",
      "terms": [
        {
          "class": "Corpus",
          "value": "C4",
          "start_pos": 34
        },
        {
          "class": "Corpus",
          "value": "Colossal Clean Crawled Corpus",
          "start_pos": 38
        },
        {
          "class": "Corpus",
          "value": "Колоссальный очищенный собранный в интернете корпус",
          "start_pos": 69
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "Colossal Clean Crawled Corpus",
            "start_pos": 38
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "C4",
            "start_pos": 34
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "Колоссальный очищенный собранный в интернете корпус",
            "start_pos": 69
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "C4",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 440,
      "text": "Для ещё двух языков, английского и финского, несколько сотен параллельных предложений нашлось в эрзянском корпусе Universal Dependencies, собранном всё тем же Jack'ом Rueter'ом.",
      "terms": [
        {
          "class": "Lang",
          "value": "английского",
          "start_pos": 21
        },
        {
          "class": "Lang",
          "value": "финского",
          "start_pos": 35
        },
        {
          "class": "Lang",
          "value": "эрзянском",
          "start_pos": 96
        },
        {
          "class": "Corpus",
          "value": "Universal Dependencies",
          "start_pos": 114
        },
        {
          "class": "Person",
          "value": "Jack'ом Rueter'ом",
          "start_pos": 159
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "Universal Dependencies",
            "start_pos": 114
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "эрзянском",
            "start_pos": 96
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "Universal Dependencies",
            "start_pos": 114
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английского",
            "start_pos": 21
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "Universal Dependencies",
            "start_pos": 114
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "финского",
            "start_pos": 35
          }
        }
      ]
    },
    {
      "id": 441,
      "text": "В качестве данных используется корпус журналов из области астрономии.",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпус журналов",
          "start_pos": 31
        },
        {
          "class": "Science",
          "value": "астрономии",
          "start_pos": 58
        }
      ],
      "relations": []
    },
    {
      "id": 442,
      "text": "Они обнаружили, что логистическая регрессия с содержательными признаками (content-based features), полученными на основе близости тем и слов в корпусе ACL (корпусе научных публикаций на английском языке), даёт наилучший результат.",
      "terms": [
        {
          "class": "Method",
          "value": "логистическая регрессия",
          "start_pos": 20
        },
        {
          "class": "Corpus",
          "value": "ACL",
          "start_pos": 151
        },
        {
          "class": "Corpus",
          "value": "корпусе научных публикаций",
          "start_pos": 156
        },
        {
          "class": "Lang",
          "value": "английском языке",
          "start_pos": 186
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "ACL",
            "start_pos": 151
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английском языке",
            "start_pos": 186
          }
        }
      ]
    },
    {
      "id": 443,
      "text": "Использование логистической регрессии на корпусе ACL (корпусе научных публикаций на английском языке) даёт наилучший результат.",
      "terms": [
        {
          "class": "Method",
          "value": "логистической регрессии",
          "start_pos": 14
        },
        {
          "class": "Corpus",
          "value": "ACL",
          "start_pos": 49
        },
        {
          "class": "Corpus",
          "value": "корпусе научных публикаций",
          "start_pos": 54
        },
        {
          "class": "Lang",
          "value": "английском языке",
          "start_pos": 84
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "ACL",
            "start_pos": 49
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английском языке",
            "start_pos": 84
          }
        }
      ]
    },
    {
      "id": 444,
      "text": "Например, при изучении развёрнутой модели на 16 итераций на примере корпуса книг о Шерлоке Холмсе после 60 000 итераций (обучение на примерно 1 Мб текста) она выдаёт довольно бессмысленный текст.",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпуса книг о Шерлоке Холмсе",
          "start_pos": 68
        }
      ],
      "relations": []
    },
    {
      "id": 445,
      "text": "В нашем случае это был корпус текстов из социальных сетей с 48 млн.",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпус текстов из социальных сетей",
          "start_pos": 23
        }
      ],
      "relations": []
    },
    {
      "id": 446,
      "text": "Первое подобное исследование решает задачу автоматической оценки приемлемости в русском языке на основе корпуса предложений из лингвистических статей, что вызывает две проблемы.",
      "terms": [
        {
          "class": "Task",
          "value": "автоматической оценки приемлемости",
          "start_pos": 43
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 80
        },
        {
          "class": "Corpus",
          "value": "корпуса предложений из лингвистических статей",
          "start_pos": 104
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "корпуса предложений из лингвистических статей",
            "start_pos": 104
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "автоматической оценки приемлемости",
            "start_pos": 43
          }
        }
      ]
    },
    {
      "id": 447,
      "text": "В качестве данных был выбран открытый корпус русскоязычных твитов.",
      "terms": [
        {
          "class": "Corpus",
          "value": "открытый корпус русскоязычных твитов",
          "start_pos": 29
        }
      ],
      "relations": []
    },
    {
      "id": 448,
      "text": "Отличием self-bleu от оригинала заключается в том, что вместо референтного корпуса используются все сгенерированные тексты, кроме тестируемого.",
      "terms": [
        {
          "class": "Corpus",
          "value": "референтного корпуса",
          "start_pos": 62
        }
      ],
      "relations": []
    },
    {
      "id": 449,
      "text": "Таким образом, чем больше совпадений н-грамм между референтным корпусом и проверяемым текстом, тем выше значение этой метрики.",
      "terms": [
        {
          "class": "Object",
          "value": "н-грамм",
          "start_pos": 37
        },
        {
          "class": "Corpus",
          "value": "референтным корпусом",
          "start_pos": 51
        }
      ],
      "relations": []
    },
    {
      "id": 450,
      "text": "Хочу показать, как создать мультиязычный параллельный корпус и книги при помощи пет-проекта, которым я занимаюсь несколько лет.",
      "terms": [
        {
          "class": "Corpus",
          "value": "мультиязычный параллельный корпус",
          "start_pos": 27
        }
      ],
      "relations": []
    },
    {
      "id": 451,
      "text": "Получим параллельный корпус на 10 языках и много красивых книг.",
      "terms": [
        {
          "class": "Corpus",
          "value": "параллельный корпус",
          "start_pos": 8
        }
      ],
      "relations": []
    },
    {
      "id": 452,
      "text": "Я использовал модель, обученную на Национальном Корпусе Русского Языка (НКРЯ), ее название — ruscorpora_upos_cbow_300_20_2019.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 14
        },
        {
          "class": "Corpus",
          "value": "Национальном Корпусе Русского Языка",
          "start_pos": 35
        },
        {
          "class": "Corpus",
          "value": "НКРЯ",
          "start_pos": 72
        },
        {
          "class": "Model",
          "value": "ruscorpora_upos_cbow_300_20_2019",
          "start_pos": 93
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruscorpora_upos_cbow_300_20_2019",
            "start_pos": 93
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "Национальном Корпусе Русского Языка",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruscorpora_upos_cbow_300_20_2019",
            "start_pos": 93
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 72
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 72
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "Национальном Корпусе Русского Языка",
            "start_pos": 35
          }
        }
      ]
    },
    {
      "id": 453,
      "text": "Для наших целей прекрасно подошла модель ruscorpora_upos_cbow_300_20_2019, обученная на Национальном Корпусе Русского Языка (НКРЯ).",
      "terms": [
        {
          "class": "Model",
          "value": "ruscorpora_upos_cbow_300_20_2019",
          "start_pos": 41
        },
        {
          "class": "Corpus",
          "value": "Национальном Корпусе Русского Языка",
          "start_pos": 88
        },
        {
          "class": "Corpus",
          "value": "НКРЯ",
          "start_pos": 125
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruscorpora_upos_cbow_300_20_2019",
            "start_pos": 41
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "Национальном Корпусе Русского Языка",
            "start_pos": 88
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruscorpora_upos_cbow_300_20_2019",
            "start_pos": 41
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 125
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 125
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "Национальном Корпусе Русского Языка",
            "start_pos": 88
          }
        }
      ]
    },
    {
      "id": 454,
      "text": "Для своих целей я применил модель, обученную на Национальном Корпусе Русского Языка (НКРЯ) под названием ruscorpora_upos_cbow_300_20_2019.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Национальном Корпусе Русского Языка",
          "start_pos": 48
        },
        {
          "class": "Corpus",
          "value": "НКРЯ",
          "start_pos": 85
        },
        {
          "class": "Model",
          "value": "ruscorpora_upos_cbow_300_20_2019",
          "start_pos": 105
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruscorpora_upos_cbow_300_20_2019",
            "start_pos": 105
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "Национальном Корпусе Русского Языка",
            "start_pos": 48
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruscorpora_upos_cbow_300_20_2019",
            "start_pos": 105
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 85
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 85
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "Национальном Корпусе Русского Языка",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 455,
      "text": "Основной тип данных для обучения переводчика — это bitext-корпусы, состоящие из пар текстов «оригинал — перевод».",
      "terms": [
        {
          "class": "Corpus",
          "value": "bitext-корпусы",
          "start_pos": 51
        }
      ],
      "relations": []
    },
    {
      "id": 456,
      "text": "Например, один из крупнейших корпусов UNPC состоит из официальных и юридических текстов.",
      "terms": [
        {
          "class": "Corpus",
          "value": "UNPC",
          "start_pos": 38
        }
      ],
      "relations": []
    },
    {
      "id": 457,
      "text": "Другой полезный источник — это mono-корпусы, состоящие из большого объёма обычных текстов.",
      "terms": [
        {
          "class": "Corpus",
          "value": "mono-корпусы",
          "start_pos": 31
        }
      ],
      "relations": []
    },
    {
      "id": 458,
      "text": "На основе mono-корпусов мы предобучаем разные вспомогательные модели, начиная с токенизаторов и заканчивая большими языковыми претрейнами типа BART и T5.",
      "terms": [
        {
          "class": "Corpus",
          "value": "mono-корпусов",
          "start_pos": 10
        },
        {
          "class": "Model",
          "value": "BART",
          "start_pos": 143
        },
        {
          "class": "Model",
          "value": "T5",
          "start_pos": 150
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BART",
            "start_pos": 143
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "mono-корпусов",
            "start_pos": 10
          }
        }
      ]
    },
    {
      "id": 459,
      "text": "Исходя из моно-корпусов, мы проводим предварительное обучение различных вспомогательных моделей, начиная с токенизаторов и заканчивая обширными языковыми предварительными тренировками, такими как BART и T5.",
      "terms": [
        {
          "class": "Corpus",
          "value": "моно-корпусов",
          "start_pos": 10
        },
        {
          "class": "Model",
          "value": "BART",
          "start_pos": 196
        },
        {
          "class": "Model",
          "value": "T5",
          "start_pos": 203
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BART",
            "start_pos": 196
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "моно-корпусов",
            "start_pos": 10
          }
        }
      ]
    },
    {
      "id": 460,
      "text": "Авторы, предложившие такой подход, делали свой поиск внутри огромного корпуса Common Crawl и снапшотов Википедии, и поделились с нами новыми крупными датасетами CCMatrix и WikiMatrix.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Common Crawl",
          "start_pos": 78
        },
        {
          "class": "InfoResource",
          "value": "Википедии",
          "start_pos": 103
        },
        {
          "class": "Dataset",
          "value": "CCMatrix",
          "start_pos": 161
        },
        {
          "class": "Dataset",
          "value": "WikiMatrix",
          "start_pos": 172
        }
      ],
      "relations": []
    },
    {
      "id": 461,
      "text": "Для сравнения, размер хорошего английского корпуса The Pile составляет более 800Гб.",
      "terms": [
        {
          "class": "Lang",
          "value": "английского",
          "start_pos": 31
        },
        {
          "class": "Corpus",
          "value": "The Pile",
          "start_pos": 51
        }
      ],
      "relations": []
    },
    {
      "id": 462,
      "text": "В конце концов, основным в обучении GPT был корпус англоязычной литературы.",
      "terms": [
        {
          "class": "Model",
          "value": "GPT",
          "start_pos": 36
        },
        {
          "class": "Corpus",
          "value": "корпус англоязычной литературы",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 463,
      "text": "Я решил велосипед не изобретать и собрать свой датасет из готовых дампов Википедии, новостей, выгрузки постов с Habr и корпуса русских книг, отсекая тексты короче 10000 токенов.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Википедии",
          "start_pos": 73
        },
        {
          "class": "InfoResource",
          "value": "Habr",
          "start_pos": 112
        },
        {
          "class": "Corpus",
          "value": "корпуса русских книг",
          "start_pos": 119
        }
      ],
      "relations": []
    },
    {
      "id": 464,
      "text": "После преобразования сообщений в векторы можно использовать любой классический метод для классификации: логистическую регрессию, SVM, случайный лес, бустинг.",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 89
        },
        {
          "class": "Method",
          "value": "логистическую регрессию",
          "start_pos": 104
        },
        {
          "class": "Method",
          "value": "SVM",
          "start_pos": 129
        },
        {
          "class": "Method",
          "value": "случайный лес",
          "start_pos": 134
        },
        {
          "class": "Method",
          "value": "бустинг",
          "start_pos": 149
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "логистическую регрессию",
            "start_pos": 104
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 89
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SVM",
            "start_pos": 129
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 89
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "случайный лес",
            "start_pos": 134
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 89
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "бустинг",
            "start_pos": 149
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 89
          }
        }
      ]
    },
    {
      "id": 465,
      "text": "Для сверточных нейросетей хорошо настроенный метод стохастического градиента (SGD) почти всегда немного превосходит Adam, но область оптимальной скорости обучения гораздо более узкая и зависит от задачи.",
      "terms": [
        {
          "class": "Method",
          "value": "метод стохастического градиента",
          "start_pos": 45
        },
        {
          "class": "Method",
          "value": "SGD",
          "start_pos": 78
        },
        {
          "class": "Method",
          "value": "Adam",
          "start_pos": 116
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "SGD",
            "start_pos": 78
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "метод стохастического градиента",
            "start_pos": 45
          }
        }
      ]
    },
    {
      "id": 466,
      "text": "После работы Эдсгера Дейкстры «О вреде оператора goto», давшей отправную точку парадигмы \"структурного программирования\", было немало работ, посвященных \"структуре алгоритма\": методология ООП, функциональное программирование, паттерны проектирования, принципы SOLID…",
      "terms": [
        {
          "class": "Person",
          "value": "Эдсгера Дейкстры",
          "start_pos": 13
        },
        {
          "class": "Method",
          "value": "ООП",
          "start_pos": 188
        },
        {
          "class": "Science",
          "value": "функциональное программирование",
          "start_pos": 193
        },
        {
          "class": "Method",
          "value": "паттерны проектирования",
          "start_pos": 226
        },
        {
          "class": "Method",
          "value": "принципы SOLID",
          "start_pos": 251
        }
      ],
      "relations": []
    },
    {
      "id": 467,
      "text": "В случае GNMT речь идет о так называемом методе перевода на основе примеров (EBMT), т.е.",
      "terms": [
        {
          "class": "Method",
          "value": "GNMT",
          "start_pos": 9
        },
        {
          "class": "Method",
          "value": "методе перевода на основе примеров",
          "start_pos": 41
        },
        {
          "class": "Method",
          "value": "EBMT",
          "start_pos": 77
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "EBMT",
            "start_pos": 77
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "методе перевода на основе примеров",
            "start_pos": 41
          }
        }
      ]
    },
    {
      "id": 468,
      "text": "Мы обучаем методологии CRISP-DM, учим постановке гипотез, выбору и аргументации методов исследования, интерпретации и представлению результатов.",
      "terms": [
        {
          "class": "Method",
          "value": "CRISP-DM",
          "start_pos": 23
        }
      ],
      "relations": []
    },
    {
      "id": 469,
      "text": "На момент создания в 2020 году такая модель была наикрупнейшей.",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 21
        },
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 37
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2020",
            "start_pos": 21
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "модель",
            "start_pos": 37
          }
        }
      ]
    },
    {
      "id": 470,
      "text": "В 2020 году появился GPT-3.",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 2
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 21
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2020",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 21
          }
        }
      ]
    },
    {
      "id": 471,
      "text": "О своём партнёрстве с Microsoft OpenAI объявила в конце 2019 года.",
      "terms": [
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 22
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 32
        },
        {
          "class": "Date",
          "value": "2019",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 472,
      "text": "С появлением в 2020 году нейронной сети GPT3 и других архитектур – трансформеров, генерируемые тексты стали невероятно правдоподобными.",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 15
        },
        {
          "class": "Model",
          "value": "GPT3",
          "start_pos": 40
        },
        {
          "class": "Model",
          "value": "архитектур – трансформеров",
          "start_pos": 54
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2020",
            "start_pos": 15
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "GPT3",
            "start_pos": 40
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2020",
            "start_pos": 15
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "архитектур – трансформеров",
            "start_pos": 54
          }
        }
      ]
    },
    {
      "id": 473,
      "text": "В 2020 компания приобрела эксклюзивную лицензию на базовую технологию, лежащую в основе GPT-3.",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 2
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 88
        }
      ],
      "relations": []
    },
    {
      "id": 474,
      "text": "6 февраля 2023 года Google представил свой аналог ChatGPT — экспериментальный диалоговый ИИ-сервис под названием Bard.",
      "terms": [
        {
          "class": "Date",
          "value": "2023",
          "start_pos": 10
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 20
        },
        {
          "class": "Application",
          "value": "ChatGPT",
          "start_pos": 50
        },
        {
          "class": "Application",
          "value": "Bard",
          "start_pos": 113
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Bard",
            "start_pos": 113
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2023",
            "start_pos": 10
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "Bard",
            "start_pos": 113
          }
        }
      ]
    },
    {
      "id": 475,
      "text": "Однако, по мере углубления в тему, автор связался с разработчиками и в январе 2023 года получил первую версию ScoreCloud Songwriter на тестирование под Windows 10.",
      "terms": [
        {
          "class": "Date",
          "value": "2023",
          "start_pos": 78
        },
        {
          "class": "Application",
          "value": "ScoreCloud Songwriter",
          "start_pos": 110
        },
        {
          "class": "Environment",
          "value": "Windows 10",
          "start_pos": 152
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2023",
            "start_pos": 78
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "ScoreCloud Songwriter",
            "start_pos": 110
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Windows 10",
            "start_pos": 152
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "ScoreCloud Songwriter",
            "start_pos": 110
          }
        }
      ]
    },
    {
      "id": 476,
      "text": "В 2020 нашими коллегами из команды AGI NLP Сбербанка, лаборатории Noah’s Ark Huawei и факультета компьютерных наук ВШЭ был представлен Russian SuperGLUE — набор задач на понимание текста по аналогии с его английской версией SuperGLUE.",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "AGI NLP Сбербанка",
          "start_pos": 35
        },
        {
          "class": "Organization",
          "value": "Noah’s Ark Huawei",
          "start_pos": 66
        },
        {
          "class": "Organization",
          "value": "ВШЭ",
          "start_pos": 115
        },
        {
          "class": "Method",
          "value": "Russian SuperGLUE",
          "start_pos": 135
        },
        {
          "class": "Method",
          "value": "SuperGLUE",
          "start_pos": 224
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "SuperGLUE",
            "start_pos": 224
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "AGI NLP Сбербанка",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SuperGLUE",
            "start_pos": 224
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Noah’s Ark Huawei",
            "start_pos": 66
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SuperGLUE",
            "start_pos": 224
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "ВШЭ",
            "start_pos": 115
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Russian SuperGLUE",
            "start_pos": 135
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "AGI NLP Сбербанка",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Russian SuperGLUE",
            "start_pos": 135
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Noah’s Ark Huawei",
            "start_pos": 66
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Russian SuperGLUE",
            "start_pos": 135
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "ВШЭ",
            "start_pos": 115
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2020",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "Russian SuperGLUE",
            "start_pos": 135
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2020",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "SuperGLUE",
            "start_pos": 224
          }
        }
      ]
    },
    {
      "id": 477,
      "text": "Описание технологии появилось в общем доступе в 2020 году.",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 48
        }
      ],
      "relations": []
    },
    {
      "id": 478,
      "text": "Обучение языковой модели происходило в 2021 году.",
      "terms": [
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 39
        }
      ],
      "relations": []
    },
    {
      "id": 479,
      "text": "Первые нейронные сети были внедрены в кредитный скоринг в 2020-м году.",
      "terms": [
        {
          "class": "Date",
          "value": "2020-м",
          "start_pos": 58
        }
      ],
      "relations": []
    },
    {
      "id": 480,
      "text": "В 2021 году Amazon запустила SageMaker Studio — первый IDE для машинного обучения.",
      "terms": [
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "Amazon",
          "start_pos": 12
        },
        {
          "class": "Application",
          "value": "SageMaker Studio",
          "start_pos": 29
        },
        {
          "class": "Application",
          "value": "IDE",
          "start_pos": 55
        },
        {
          "class": "Science",
          "value": "машинного обучения",
          "start_pos": 63
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "SageMaker Studio",
            "start_pos": 29
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 63
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2021",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "SageMaker Studio",
            "start_pos": 29
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "SageMaker Studio",
            "start_pos": 29
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Amazon",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 481,
      "text": "Создана в 2021 году.",
      "terms": [
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 10
        }
      ],
      "relations": []
    },
    {
      "id": 482,
      "text": "ChatGPT был запущен 30 ноября 2022 года и привлек внимание своими широкими возможностями: написание кода, создание текстов, возможности перевода, получения точных ответов и использование контекста диалога для ответов, хотя его фактическая точность подверглась критике (источник — Википедия).",
      "terms": [
        {
          "class": "Application",
          "value": "ChatGPT",
          "start_pos": 0
        },
        {
          "class": "Date",
          "value": "30 ноября 2022",
          "start_pos": 20
        },
        {
          "class": "Task",
          "value": "написание кода",
          "start_pos": 90
        },
        {
          "class": "Task",
          "value": "создание текстов",
          "start_pos": 106
        },
        {
          "class": "Task",
          "value": "перевода",
          "start_pos": 136
        },
        {
          "class": "Task",
          "value": "получения точных ответов",
          "start_pos": 146
        },
        {
          "class": "InfoResource",
          "value": "Википедия",
          "start_pos": 280
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "30 ноября 2022",
            "start_pos": 20
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "ChatGPT",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ChatGPT",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "написание кода",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ChatGPT",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создание текстов",
            "start_pos": 106
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ChatGPT",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "перевода",
            "start_pos": 136
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ChatGPT",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "получения точных ответов",
            "start_pos": 146
          }
        }
      ]
    },
    {
      "id": 483,
      "text": "Компания уже давно работает над сложным поисковым ИИ под названием LaMDA: о нем впервые объявили еще в мае 2021 года.",
      "terms": [
        {
          "class": "Application",
          "value": "LaMDA",
          "start_pos": 67
        },
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 107
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2021",
            "start_pos": 107
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "LaMDA",
            "start_pos": 67
          }
        }
      ]
    },
    {
      "id": 484,
      "text": "И уже в 2020-2021 годах компании начали запускать альтернативные платформы, а стартапы — внедрять Feature Store в свои проекты.",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 8
        },
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 13
        },
        {
          "class": "Application",
          "value": "Feature Store",
          "start_pos": 98
        }
      ],
      "relations": []
    },
    {
      "id": 485,
      "text": "На этапе обучения text-davinci-003 используются датасеты текстов и программного кода, собранные OpenAI на момент конца 2021 года.",
      "terms": [
        {
          "class": "Model",
          "value": "text-davinci-003",
          "start_pos": 18
        },
        {
          "class": "Dataset",
          "value": "датасеты текстов",
          "start_pos": 48
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 96
        },
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 119
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "text-davinci-003",
            "start_pos": 18
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "датасеты текстов",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 486,
      "text": "На этапе обучения ChatGPT используются дополнительные текстовые данные и программный код, собранные на момент конца 2021 года.Reinforcement Learning with Human Feedback (RLHF)В основе лежит сильная предобученная языковая модель (в случае ChatGPT это InstructGPT, но могут быть и другие, например, Gopher от DeepMind).",
      "terms": [
        {
          "class": "Application",
          "value": "ChatGPT",
          "start_pos": 18
        },
        {
          "class": "Date",
          "value": "2021",
          "start_pos": 116
        }
      ],
      "relations": []
    },
    {
      "id": 487,
      "text": "Так и появился AIDungeon — уникальная для своего времени (2019 год) вещь, которая не сильно потеряла в популярности и по сей день.",
      "terms": [
        {
          "class": "Application",
          "value": "AIDungeon",
          "start_pos": 15
        },
        {
          "class": "Date",
          "value": "2019",
          "start_pos": 58
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2019",
            "start_pos": 58
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "AIDungeon",
            "start_pos": 15
          }
        }
      ]
    },
    {
      "id": 488,
      "text": "Окончательная версия TACL c достаточно хорошим внешним видом содержит около 150 цитат, связанных с BERT, и нет никаких иллюзий завершённости: в августе 2020 года у нас закончились отведённые для журнала страницы.",
      "terms": [
        {
          "class": "Environment",
          "value": "TACL",
          "start_pos": 21
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 99
        },
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 152
        }
      ],
      "relations": []
    },
    {
      "id": 489,
      "text": "Чтобы определить, какие проходы и MLP нужно обрезать, мы используем аппроксимацию, основанную на потерях: оценки важности, предложенные Michel, Levy and Neubig (2019) для проходов самонаблюдения, которые мы распространяем на MLP.",
      "terms": [
        {
          "class": "Method",
          "value": "MLP",
          "start_pos": 34
        },
        {
          "class": "Person",
          "value": "Michel",
          "start_pos": 136
        },
        {
          "class": "Person",
          "value": "Levy",
          "start_pos": 144
        },
        {
          "class": "Person",
          "value": "Neubig",
          "start_pos": 153
        },
        {
          "class": "Date",
          "value": "2019",
          "start_pos": 161
        },
        {
          "class": "Method",
          "value": "MLP",
          "start_pos": 225
        }
      ],
      "relations": []
    },
    {
      "id": 490,
      "text": "Например, в 2022 году, помимо ABBYY, это будут МТС, SberDevices, Яндекс и другие.",
      "terms": [
        {
          "class": "Date",
          "value": "2022",
          "start_pos": 12
        },
        {
          "class": "Organization",
          "value": "ABBYY",
          "start_pos": 30
        },
        {
          "class": "Organization",
          "value": "МТС",
          "start_pos": 47
        },
        {
          "class": "Organization",
          "value": "SberDevices",
          "start_pos": 52
        },
        {
          "class": "Organization",
          "value": "Яндекс",
          "start_pos": 65
        }
      ],
      "relations": []
    },
    {
      "id": 491,
      "text": "Первая была в 2019 году, называлась AGRR: Automatic Gapping Resolution for Russian.",
      "terms": [
        {
          "class": "Date",
          "value": "2019",
          "start_pos": 14
        },
        {
          "class": "Task",
          "value": "AGRR",
          "start_pos": 36
        },
        {
          "class": "Task",
          "value": "Automatic Gapping Resolution for Russian",
          "start_pos": 42
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "Automatic Gapping Resolution for Russian",
            "start_pos": 42
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "AGRR",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 492,
      "text": "Автор эксперимента может быть простым наблюдателем, однако его результаты сильно влияют на выбор рациональных допущений в исследовании.",
      "terms": [
        {
          "class": "Activity",
          "value": "эксперимента",
          "start_pos": 6
        }
      ],
      "relations": []
    },
    {
      "id": 493,
      "text": "Для данного эксперимента наилучшими оказались параметры 0.2 и 0.3.",
      "terms": [
        {
          "class": "Activity",
          "value": "эксперимента",
          "start_pos": 12
        }
      ],
      "relations": []
    },
    {
      "id": 494,
      "text": "После первых экспериментов оказалось, что краткого описания задачи недостаточно и результаты неустойчивы.",
      "terms": [
        {
          "class": "Activity",
          "value": "экспериментов",
          "start_pos": 13
        }
      ],
      "relations": []
    },
    {
      "id": 495,
      "text": "Техногиганты в зависимости от текущей повестки публикуют разные исследования то за, то против удаленной работы.",
      "terms": [
        {
          "class": "Activity",
          "value": "исследования",
          "start_pos": 64
        }
      ],
      "relations": []
    },
    {
      "id": 496,
      "text": "Некоторые люди используют его в целях академических исследований.",
      "terms": [
        {
          "class": "Activity",
          "value": "академических исследований",
          "start_pos": 38
        }
      ],
      "relations": []
    },
    {
      "id": 497,
      "text": "Если вам также интересно наше исследование, прикладываю ссылку на наш репозиторий с реализацией нашего алгоритма на фреймворке PyTorch.",
      "terms": [
        {
          "class": "Activity",
          "value": "исследование",
          "start_pos": 30
        },
        {
          "class": "Environment",
          "value": "PyTorch",
          "start_pos": 127
        }
      ],
      "relations": []
    },
    {
      "id": 498,
      "text": "Проект получил название YaLM 2.0.",
      "terms": [
        {
          "class": "Activity",
          "value": "YaLM 2.0",
          "start_pos": 24
        }
      ],
      "relations": []
    },
    {
      "id": 499,
      "text": "Важным аспектом здесь является то, что Nearby Share опирается на Google Mobile Services (GMS), а это означает, что разработчик системы заменил доступную в AOSP функцию проприетарной службой, которая не является частью проекта AOSP.",
      "terms": [
        {
          "class": "Organization",
          "value": "Nearby Share",
          "start_pos": 39
        },
        {
          "class": "Organization",
          "value": "Google Mobile Services",
          "start_pos": 65
        },
        {
          "class": "Organization",
          "value": "GMS",
          "start_pos": 89
        },
        {
          "class": "Activity",
          "value": "AOSP",
          "start_pos": 155
        },
        {
          "class": "Activity",
          "value": "AOSP",
          "start_pos": 226
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "GMS",
            "start_pos": 89
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Google Mobile Services",
            "start_pos": 65
          }
        }
      ]
    },
    {
      "id": 500,
      "text": "Nearby Share (NS) повторяют за Google Mobile Services (GMS).",
      "terms": [
        {
          "class": "Organization",
          "value": "Nearby Share",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "NS",
          "start_pos": 14
        },
        {
          "class": "Organization",
          "value": "Google Mobile Services",
          "start_pos": 31
        },
        {
          "class": "Organization",
          "value": "GMS",
          "start_pos": 55
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "NS",
            "start_pos": 14
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Nearby Share",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Organization",
            "value": "GMS",
            "start_pos": 55
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Google Mobile Services",
            "start_pos": 31
          }
        }
      ]
    },
    {
      "id": 501,
      "text": "Исходный код проекта GPT-Tokenator на GitHub",
      "terms": [
        {
          "class": "Activity",
          "value": "GPT-Tokenator",
          "start_pos": 21
        },
        {
          "class": "InfoResource",
          "value": "GitHub",
          "start_pos": 38
        }
      ],
      "relations": []
    },
    {
      "id": 502,
      "text": "В настоящее время проект Angry Email Translator находится на стадии тестирования.",
      "terms": [
        {
          "class": "Activity",
          "value": "Angry Email Translator",
          "start_pos": 25
        }
      ],
      "relations": []
    },
    {
      "id": 503,
      "text": "Этот проект называется llamaindex.",
      "terms": [
        {
          "class": "Activity",
          "value": "llamaindex",
          "start_pos": 23
        }
      ],
      "relations": []
    },
    {
      "id": 504,
      "text": "Так появился проект VoiceDock, призванный сделать ИИ доступнее для разработчиков конечных приложений.",
      "terms": [
        {
          "class": "Activity",
          "value": "VoiceDock",
          "start_pos": 20
        }
      ],
      "relations": []
    },
    {
      "id": 505,
      "text": "Построен на базе whisper.cpp (Быстрая С++ реализации проекта Whisper от Open AI).",
      "terms": [
        {
          "class": "Activity",
          "value": "whisper.cpp",
          "start_pos": 17
        },
        {
          "class": "Environment",
          "value": "С++",
          "start_pos": 38
        },
        {
          "class": "Activity",
          "value": "Whisper",
          "start_pos": 61
        },
        {
          "class": "Organization",
          "value": "Open AI",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 506,
      "text": "Сделана на базе популярного проекта llama.cpp от того же автора, что и whisper.cpp.",
      "terms": [
        {
          "class": "Activity",
          "value": "llama.cpp",
          "start_pos": 36
        },
        {
          "class": "Activity",
          "value": "whisper.cpp",
          "start_pos": 71
        }
      ],
      "relations": []
    },
    {
      "id": 507,
      "text": "Решение основано на проекте Piper и позволяет достаточно качественно и быстро синтезировать голос (демки можно послушать тут).",
      "terms": [
        {
          "class": "Activity",
          "value": "Piper",
          "start_pos": 28
        }
      ],
      "relations": []
    },
    {
      "id": 508,
      "text": "Пройдя этот путь, уже не так сложно начать строить свой проект голосового ассистента.",
      "terms": [
        {
          "class": "Activity",
          "value": "проект голосового ассистента",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 509,
      "text": "Миллер опубликовал подробное техническое описание всех своих действий по этому проекту под названием Robo Boys в своём блоге.",
      "terms": [
        {
          "class": "Person",
          "value": "Миллер",
          "start_pos": 0
        },
        {
          "class": "Activity",
          "value": "Robo Boys",
          "start_pos": 101
        }
      ],
      "relations": []
    },
    {
      "id": 510,
      "text": "В начале апреля СМИ сообщили, что подрядчики Google в проекте по оценке ответов чат-бота Bard из-за нехватки времени часто ставили оценки на ответы ИИ по сложным запросам наугад.",
      "terms": [
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 45
        },
        {
          "class": "Activity",
          "value": "проекте по оценке ответов чат-бота Bard",
          "start_pos": 54
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "проекте по оценке ответов чат-бота Bard",
            "start_pos": 54
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 45
          }
        }
      ]
    },
    {
      "id": 511,
      "text": "Еще один известный проект подобного типа — Midjourney.",
      "terms": [
        {
          "class": "Activity",
          "value": "Midjourney",
          "start_pos": 43
        }
      ],
      "relations": []
    },
    {
      "id": 512,
      "text": "Артур Самуэль тесно сотрудничал с Дональдом Кнутом при создании проекта TeX, и самостоятельно написал часть технической документации для этого стандарта.",
      "terms": [
        {
          "class": "Person",
          "value": "Артур Самуэль",
          "start_pos": 0
        },
        {
          "class": "Person",
          "value": "Дональдом Кнутом",
          "start_pos": 34
        },
        {
          "class": "Activity",
          "value": "TeX",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 513,
      "text": "Да, на сложных проектах Copilot может иногда и мешать.",
      "terms": [
        {
          "class": "Activity",
          "value": "Copilot",
          "start_pos": 24
        }
      ],
      "relations": []
    },
    {
      "id": 514,
      "text": "Во время разработки этой системы я познакомился с другими техническими проектами «Диалектика», о которых хочу рассказать в этом посте.",
      "terms": [
        {
          "class": "Activity",
          "value": "Диалектика",
          "start_pos": 82
        }
      ],
      "relations": []
    },
    {
      "id": 515,
      "text": "Инфоповоды, которые осветил коллектив проекта “АгитПроп” в своей новостной рубрике.",
      "terms": [
        {
          "class": "Activity",
          "value": "АгитПроп",
          "start_pos": 47
        }
      ],
      "relations": []
    },
    {
      "id": 516,
      "text": "Этот датасет используется в проекте Марксизм в цитатах.",
      "terms": [
        {
          "class": "Dataset",
          "value": "датасет",
          "start_pos": 5
        },
        {
          "class": "Activity",
          "value": "Марксизм",
          "start_pos": 36
        }
      ],
      "relations": []
    },
    {
      "id": 517,
      "text": "Стоит ещё понимать, что это MVP, проект совсем молодой, а экспертность у создателей в этой сфере большая - так что я думаю скоро мы будем видеть классные апдейты.WonderSlideСтоимость: 7 дней бесплатный период (можно регистрироваться на почту,ну вы поняли), потом 69 USD в год подпискаРезюме: Отличный сервис по соотношению время/качество для событий, когда не нужен выдающийся дизайн.3.",
      "terms": [
        {
          "class": "Activity",
          "value": "MVP",
          "start_pos": 28
        }
      ],
      "relations": []
    },
    {
      "id": 518,
      "text": "В 2022 году сообщалось, что в рамках проекта Riffusion разработчики развивают вариант системы машинного обучения Stable Diffusion для генерации музыки вместо изображений.",
      "terms": [
        {
          "class": "Date",
          "value": "2022",
          "start_pos": 2
        },
        {
          "class": "Activity",
          "value": "Riffusion",
          "start_pos": 45
        },
        {
          "class": "Application",
          "value": "Stable Diffusion",
          "start_pos": 113
        }
      ],
      "relations": []
    },
    {
      "id": 519,
      "text": "Бывший президент Google China и китайско-тайваньский венчурный капиталист Ли Кайфу объявил о запуске нового ИИ-проекта под названием Project AI 2.0.",
      "terms": [
        {
          "class": "Organization",
          "value": "Google China",
          "start_pos": 17
        },
        {
          "class": "Person",
          "value": "Ли Кайфу",
          "start_pos": 74
        },
        {
          "class": "Activity",
          "value": "Project AI 2.0",
          "start_pos": 133
        }
      ],
      "relations": []
    },
    {
      "id": 520,
      "text": "Например, GPT может предложить идеи для MVP-проекта и помочь с их возможной реализацией.",
      "terms": [
        {
          "class": "Application",
          "value": "GPT",
          "start_pos": 10
        },
        {
          "class": "Activity",
          "value": "MVP-проекта",
          "start_pos": 40
        }
      ],
      "relations": []
    },
    {
      "id": 521,
      "text": "Сбер создал и опубликовал в открытом доступе программную библиотеку PyTorch-LifeStream, содержащую несколько алгоритмов построения эмбеддингов событийных данных.",
      "terms": [
        {
          "class": "Organization",
          "value": "Сбер",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "PyTorch-LifeStream",
          "start_pos": 68
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "PyTorch-LifeStream",
            "start_pos": 68
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 522,
      "text": "Эмбеддинг (Embedding) – преобразования сложноструктурированных данных,  например слов, текстов, атрибутов событий, событий и их последовательностей, в машинно-читаемый набор чисел – числовой вектор.",
      "terms": [
        {
          "class": "Object",
          "value": "Эмбеддинг",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "Embedding",
          "start_pos": 11
        },
        {
          "class": "Object",
          "value": "сложноструктурированных данных",
          "start_pos": 39
        },
        {
          "class": "Object",
          "value": "слов",
          "start_pos": 81
        },
        {
          "class": "Object",
          "value": "текстов",
          "start_pos": 87
        },
        {
          "class": "Object",
          "value": "атрибутов событий",
          "start_pos": 96
        },
        {
          "class": "Object",
          "value": "событий",
          "start_pos": 115
        },
        {
          "class": "Object",
          "value": "машинно-читаемый набор чисел",
          "start_pos": 151
        },
        {
          "class": "Object",
          "value": "числовой вектор",
          "start_pos": 182
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "сложноструктурированных данных",
            "start_pos": 39
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "слов",
            "start_pos": 81
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "сложноструктурированных данных",
            "start_pos": 39
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 87
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "сложноструктурированных данных",
            "start_pos": 39
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "атрибутов событий",
            "start_pos": 96
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "сложноструктурированных данных",
            "start_pos": 39
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "событий",
            "start_pos": 115
          }
        }
      ]
    },
    {
      "id": 523,
      "text": "Самой популярной из трёх задач соревнования стала главная – Matching.",
      "terms": [
        {
          "class": "Task",
          "value": "Matching",
          "start_pos": 60
        }
      ],
      "relations": []
    },
    {
      "id": 524,
      "text": "Стоит отметить, что и для них всё было непросто – конкурсная задача матчинга позволила удачно применить разработанный в Лаборатории ИИ метод генерации эмбеддингов транзакционных данных одновременно для двух разных доменов событийных данных (транзакции и кликстрим – атрибуты посещения веб-страниц).",
      "terms": [
        {
          "class": "Organization",
          "value": "Лаборатории ИИ",
          "start_pos": 120
        },
        {
          "class": "Method",
          "value": "метод генерации эмбеддингов транзакционных данных",
          "start_pos": 135
        },
        {
          "class": "Object",
          "value": "транзакции",
          "start_pos": 241
        },
        {
          "class": "Object",
          "value": "кликстрим",
          "start_pos": 254
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "метод генерации эмбеддингов транзакционных данных",
            "start_pos": 135
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Лаборатории ИИ",
            "start_pos": 120
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "метод генерации эмбеддингов транзакционных данных",
            "start_pos": 135
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "транзакции",
            "start_pos": 241
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "метод генерации эмбеддингов транзакционных данных",
            "start_pos": 135
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "кликстрим",
            "start_pos": 254
          }
        }
      ]
    },
    {
      "id": 525,
      "text": "Однако использование разработанного в Лаборатории ИИ метода генерации эмбеддингов транзакционных данных позволило успешно применить его одновременно к двум различным доменам событийных данных – транзакциям и кликстриму (атрибутам посещения веб-страниц).",
      "terms": [
        {
          "class": "Organization",
          "value": "Лаборатории ИИ",
          "start_pos": 38
        },
        {
          "class": "Method",
          "value": "метода генерации эмбеддингов транзакционных данных",
          "start_pos": 53
        },
        {
          "class": "Object",
          "value": "транзакциям",
          "start_pos": 194
        },
        {
          "class": "Object",
          "value": "кликстриму",
          "start_pos": 208
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "метода генерации эмбеддингов транзакционных данных",
            "start_pos": 53
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Лаборатории ИИ",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "метода генерации эмбеддингов транзакционных данных",
            "start_pos": 53
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "транзакциям",
            "start_pos": 194
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "метода генерации эмбеддингов транзакционных данных",
            "start_pos": 53
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "кликстриму",
            "start_pos": 208
          }
        }
      ]
    },
    {
      "id": 526,
      "text": "Победители создали лучшее решение благодаря применению собственной библиотеки PyTorch-LifeStream, которая позволила ускорить разработку решения, так как содержит много готовых инструментов для работы с событийными данными, и дала возможность стать фаворитом престижного конкурса.",
      "terms": [
        {
          "class": "Application",
          "value": "PyTorch-LifeStream",
          "start_pos": 78
        }
      ],
      "relations": []
    },
    {
      "id": 527,
      "text": "Фичи для транзакций и кликов объединялись и подавались в алгоритм бустинга.",
      "terms": [
        {
          "class": "Object",
          "value": "Фичи",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "бустинга",
          "start_pos": 66
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "бустинга",
            "start_pos": 66
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "Фичи",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 528,
      "text": "Алгоритм обучался как задача бинарной классификации.",
      "terms": [
        {
          "class": "Task",
          "value": "задача бинарной классификации",
          "start_pos": 22
        }
      ],
      "relations": []
    },
    {
      "id": 529,
      "text": "Команда решила использовать схему обучения, похожую на сиамскую сеть.",
      "terms": [
        {
          "class": "Method",
          "value": "сиамскую сеть",
          "start_pos": 55
        }
      ],
      "relations": []
    },
    {
      "id": 530,
      "text": "Метки использованы для выборки положительных и отрицательных образцов для функции потерь Softmax Loss.",
      "terms": [
        {
          "class": "Method",
          "value": "Softmax Loss",
          "start_pos": 89
        }
      ],
      "relations": []
    },
    {
      "id": 531,
      "text": "SequenceEncoder – рекурентно-нейронная сеть (RNN), совместно используемая для транзакций и кликов.",
      "terms": [
        {
          "class": "Model",
          "value": "SequenceEncoder",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "рекурентно-нейронная сеть",
          "start_pos": 18
        },
        {
          "class": "Model",
          "value": "RNN",
          "start_pos": 45
        },
        {
          "class": "Object",
          "value": "транзакций",
          "start_pos": 78
        },
        {
          "class": "Object",
          "value": "кликов",
          "start_pos": 91
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "RNN",
            "start_pos": 45
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "рекурентно-нейронная сеть",
            "start_pos": 18
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "рекурентно-нейронная сеть",
            "start_pos": 18
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "SequenceEncoder",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "RNN",
            "start_pos": 45
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "SequenceEncoder",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 532,
      "text": "В итоге это дало самый большой прирост качества: для ансамбля из пяти моделей метрика качества R1 выросла с 0.2819 до 0.2949.",
      "terms": [
        {
          "class": "Metric",
          "value": "R1",
          "start_pos": 95
        },
        {
          "class": "Value",
          "value": "0.2819",
          "start_pos": 108
        },
        {
          "class": "Value",
          "value": "0.2949",
          "start_pos": 118
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "R1",
            "start_pos": 95
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.2819",
            "start_pos": 108
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "R1",
            "start_pos": 95
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.2949",
            "start_pos": 118
          }
        }
      ]
    },
    {
      "id": 533,
      "text": "Основатель компании Imagination Engines, Stephen L. Thaler продвигает свою нейронную сеть по имени DABUS (Device for the Autonomous Boot-strapping of Unified Sentience), указывая ее в качестве автора изобретения в заявках на патенты на разные изобретения, сгенерированные этой сетью.",
      "terms": [
        {
          "class": "Organization",
          "value": "Imagination Engines",
          "start_pos": 20
        },
        {
          "class": "Person",
          "value": "Stephen L. Thaler",
          "start_pos": 41
        },
        {
          "class": "Model",
          "value": "DABUS",
          "start_pos": 99
        },
        {
          "class": "Model",
          "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
          "start_pos": 106
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
            "start_pos": 106
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Stephen L. Thaler",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DABUS",
            "start_pos": 99
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Stephen L. Thaler",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
            "start_pos": 106
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Imagination Engines",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DABUS",
            "start_pos": 99
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Imagination Engines",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
            "start_pos": 106
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "DABUS",
            "start_pos": 99
          }
        }
      ]
    },
    {
      "id": 534,
      "text": "Стивен Л. Тейлер, основатель компании Imagination Engines, продвигает свою нейросеть под названием DABUS (Device for the Autonomous Boot-strapping of Unified Sentience).",
      "terms": [
        {
          "class": "Person",
          "value": "Стивен Л. Тейлер",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Imagination Engines",
          "start_pos": 38
        },
        {
          "class": "Model",
          "value": "DABUS",
          "start_pos": 99
        },
        {
          "class": "Model",
          "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
          "start_pos": 106
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
            "start_pos": 106
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Стивен Л. Тейлер",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DABUS",
            "start_pos": 99
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Стивен Л. Тейлер",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
            "start_pos": 106
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Imagination Engines",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DABUS",
            "start_pos": 99
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Imagination Engines",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Device for the Autonomous Boot-strapping of Unified Sentience",
            "start_pos": 106
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "DABUS",
            "start_pos": 99
          }
        }
      ]
    },
    {
      "id": 535,
      "text": "Специалисты Data Science часто применяют различные методы получения датасетов.",
      "terms": [
        {
          "class": "Science",
          "value": "Data Science",
          "start_pos": 12
        },
        {
          "class": "Method",
          "value": "методы получения",
          "start_pos": 51
        },
        {
          "class": "Object",
          "value": "датасетов",
          "start_pos": 68
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методы получения",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "Data Science",
            "start_pos": 12
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы получения",
            "start_pos": 51
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "датасетов",
            "start_pos": 68
          }
        }
      ]
    },
    {
      "id": 536,
      "text": "Профессионалы в области Data Science часто используют различные подходы к созданию наборов данных.",
      "terms": [
        {
          "class": "Science",
          "value": "Data Science",
          "start_pos": 24
        },
        {
          "class": "Method",
          "value": "подходы к созданию",
          "start_pos": 64
        },
        {
          "class": "Object",
          "value": "наборов данных",
          "start_pos": 83
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "подходы к созданию",
            "start_pos": 64
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "Data Science",
            "start_pos": 24
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "подходы к созданию",
            "start_pos": 64
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "наборов данных",
            "start_pos": 83
          }
        }
      ]
    },
    {
      "id": 537,
      "text": "Цель этой статьи — представить краткий обзор трех разных методов извлечения данных с использованием языка Python.",
      "terms": [
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 106
        }
      ],
      "relations": []
    },
    {
      "id": 538,
      "text": "Я расскажу, как делать это с помощью Jupyter Notebook.",
      "terms": [
        {
          "class": "Environment",
          "value": "Jupyter Notebook",
          "start_pos": 37
        }
      ],
      "relations": []
    },
    {
      "id": 539,
      "text": "Библиотека SQLAlchemy позволит связать ваш код в ноутбуке с наиболее распространенными типами баз данных.",
      "terms": [
        {
          "class": "Environment",
          "value": "SQLAlchemy",
          "start_pos": 11
        },
        {
          "class": "InfoResource",
          "value": "баз данных",
          "start_pos": 94
        }
      ],
      "relations": []
    },
    {
      "id": 540,
      "text": "Мы собираемся применить Beautiful Soup и библиотеку urllib, чтобы соскрапить названия отелей и цены на них с веб-сайта TripAdvisor.",
      "terms": [
        {
          "class": "Library",
          "value": "Beautiful Soup",
          "start_pos": 24
        },
        {
          "class": "Library",
          "value": "urllib",
          "start_pos": 52
        },
        {
          "class": "Object",
          "value": "названия отелей",
          "start_pos": 77
        },
        {
          "class": "Object",
          "value": "цены",
          "start_pos": 95
        },
        {
          "class": "InfoResource",
          "value": "TripAdvisor",
          "start_pos": 119
        }
      ],
      "relations": []
    },
    {
      "id": 541,
      "text": "Я приведу простой пример извлечения данных о погоде с общедоступного API Dark Sky.",
      "terms": [
        {
          "class": "Task",
          "value": "извлечения",
          "start_pos": 25
        },
        {
          "class": "Object",
          "value": "данных о погоде",
          "start_pos": 36
        },
        {
          "class": "Application",
          "value": "API Dark Sky",
          "start_pos": 69
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "данных о погоде",
            "start_pos": 36
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "извлечения",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "API Dark Sky",
            "start_pos": 69
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "извлечения",
            "start_pos": 25
          }
        }
      ]
    },
    {
      "id": 542,
      "text": "Для доступа к данным из Dark Sky я воспользуюсь библиотекой requests.",
      "terms": [
        {
          "class": "Application",
          "value": "Dark Sky",
          "start_pos": 24
        },
        {
          "class": "Library",
          "value": "requests",
          "start_pos": 60
        }
      ],
      "relations": []
    },
    {
      "id": 543,
      "text": "Решать задачу будем с использованием нейронных сетей, но оптимизируемых генетическим алгоритмом (ГА) – такой процесс называют нейроэволюцией.",
      "terms": [
        {
          "class": "Task",
          "value": "задачу",
          "start_pos": 7
        },
        {
          "class": "Method",
          "value": "генетическим алгоритмом",
          "start_pos": 72
        },
        {
          "class": "Method",
          "value": "ГА",
          "start_pos": 97
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "ГА",
            "start_pos": 97
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "генетическим алгоритмом",
            "start_pos": 72
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "генетическим алгоритмом",
            "start_pos": 72
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "задачу",
            "start_pos": 7
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "ГА",
            "start_pos": 97
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "задачу",
            "start_pos": 7
          }
        }
      ]
    },
    {
      "id": 544,
      "text": "Мы воспользовались методом NEAT (NeuroEvolution of Augmenting Topologies), изобретенным Кеннетом Стенли и Ристо Мииккулайненом в начале века [1]: во-первых, он хорошо зарекомендовал себя в важных для народного хозяйства проблемах, во-вторых, к началу работы над проектом у нас уже был свой фреймворк, реализующий NEAT.",
      "terms": [
        {
          "class": "Method",
          "value": "NEAT",
          "start_pos": 27
        },
        {
          "class": "Method",
          "value": "NeuroEvolution of Augmenting Topologies",
          "start_pos": 33
        },
        {
          "class": "Person",
          "value": "Кеннетом Стенли",
          "start_pos": 88
        },
        {
          "class": "Person",
          "value": "Ристо Мииккулайненом",
          "start_pos": 106
        },
        {
          "class": "Activity",
          "value": "проектом",
          "start_pos": 262
        },
        {
          "class": "Application",
          "value": "фреймворк",
          "start_pos": 290
        },
        {
          "class": "Method",
          "value": "NEAT",
          "start_pos": 313
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "NeuroEvolution of Augmenting Topologies",
            "start_pos": 33
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "NEAT",
            "start_pos": 27
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "NEAT",
            "start_pos": 313
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "фреймворк",
            "start_pos": 290
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "NeuroEvolution of Augmenting Topologies",
            "start_pos": 33
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Кеннетом Стенли",
            "start_pos": 88
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "NeuroEvolution of Augmenting Topologies",
            "start_pos": 33
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ристо Мииккулайненом",
            "start_pos": 106
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "NEAT",
            "start_pos": 27
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Кеннетом Стенли",
            "start_pos": 88
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "NEAT",
            "start_pos": 27
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ристо Мииккулайненом",
            "start_pos": 106
          }
        }
      ]
    },
    {
      "id": 545,
      "text": "Речь шла о морфологической разметке (part of speech tagging) современных текстов на русском языке.",
      "terms": [
        {
          "class": "Method",
          "value": "морфологической разметке",
          "start_pos": 11
        },
        {
          "class": "Method",
          "value": "part of speech tagging",
          "start_pos": 37
        },
        {
          "class": "Object",
          "value": "текстов",
          "start_pos": 73
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 84
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "part of speech tagging",
            "start_pos": 37
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "морфологической разметке",
            "start_pos": 11
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "морфологической разметке",
            "start_pos": 11
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 73
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "part of speech tagging",
            "start_pos": 37
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 73
          }
        }
      ]
    },
    {
      "id": 546,
      "text": "Как обычно, результат разметки будет опубликован на условиях лицензии Creative Commons.",
      "terms": [
        {
          "class": "Method",
          "value": "разметки",
          "start_pos": 22
        },
        {
          "class": "Environment",
          "value": "Creative Commons",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 547,
      "text": "Извлечение именованных сущностей из текста — одна из востребованных функций текстовой аналитики.",
      "terms": [
        {
          "class": "Task",
          "value": "Извлечение именованных сущностей",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "текстовой аналитики",
          "start_pos": 76
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "Извлечение именованных сущностей",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "текстовой аналитики",
            "start_pos": 76
          }
        }
      ]
    },
    {
      "id": 548,
      "text": "Строго говоря, нам нужно получить параллельный корпус из двух текстов.",
      "terms": [
        {
          "class": "Object",
          "value": "параллельный корпус",
          "start_pos": 34
        }
      ],
      "relations": []
    },
    {
      "id": 549,
      "text": "Для выравнивания воспользуемся библиотекой lingtrain-aligner, над которой я работаю около года и которая родилась из кучи скриптов на python, часть из которых еще ждет своего часа.",
      "terms": [
        {
          "class": "Task",
          "value": "выравнивания воспользуемся",
          "start_pos": 4
        },
        {
          "class": "Library",
          "value": "lingtrain-aligner",
          "start_pos": 43
        },
        {
          "class": "Environment",
          "value": "python",
          "start_pos": 134
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "lingtrain-aligner",
            "start_pos": 43
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "выравнивания воспользуемся",
            "start_pos": 4
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "python",
            "start_pos": 134
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "lingtrain-aligner",
            "start_pos": 43
          }
        }
      ]
    },
    {
      "id": 550,
      "text": "Хорошим решением мне видится регрессия на координаты строк при выравнивании батча и сдвиг окна на конец потока при выравнивании следующего.",
      "terms": [
        {
          "class": "Method",
          "value": "регрессия",
          "start_pos": 29
        },
        {
          "class": "Object",
          "value": "координаты строк",
          "start_pos": 42
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "регрессия",
            "start_pos": 29
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "координаты строк",
            "start_pos": 42
          }
        }
      ]
    },
    {
      "id": 551,
      "text": "Facebook представила систему распознавания речи wav2vec-U.",
      "terms": [
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "распознавания речи",
          "start_pos": 29
        },
        {
          "class": "Application",
          "value": "wav2vec-U",
          "start_pos": 48
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "wav2vec-U",
            "start_pos": 48
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "wav2vec-U",
            "start_pos": 48
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания речи",
            "start_pos": 29
          }
        }
      ]
    },
    {
      "id": 552,
      "text": "Система разбивает запись на речевые единицы, которые приблизительно соответствуют отдельным звукам.",
      "terms": [
        {
          "class": "Application",
          "value": "Система",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "речевые единицы",
          "start_pos": 28
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Система",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "речевые единицы",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 553,
      "text": "Чтобы научиться распознавать слова в аудиозаписи, Facebook обучила генеративную состязательную сеть (GAN).",
      "terms": [
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 50
        },
        {
          "class": "Model",
          "value": "генеративную состязательную сеть",
          "start_pos": 67
        },
        {
          "class": "Model",
          "value": "GAN",
          "start_pos": 101
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "генеративную состязательную сеть",
            "start_pos": 67
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GAN",
            "start_pos": 101
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "генеративную состязательную сеть",
            "start_pos": 67
          }
        }
      ]
    },
    {
      "id": 554,
      "text": "Генератор берет каждый аудиосегмент и предсказывает фонему, соответствующую звуку на языке.",
      "terms": [
        {
          "class": "Method",
          "value": "Генератор",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "аудиосегмент",
          "start_pos": 23
        },
        {
          "class": "Object",
          "value": "фонему",
          "start_pos": 52
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Генератор",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "аудиосегмент",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Генератор",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "фонему",
            "start_pos": 52
          }
        }
      ]
    },
    {
      "id": 555,
      "text": "Новая модель распознавания речи Facebook AI — это последняя разработка за несколько лет работы над моделями распознавания речи.",
      "terms": [
        {
          "class": "Model",
          "value": "модель распознавания речи",
          "start_pos": 6
        },
        {
          "class": "Organization",
          "value": "Facebook AI",
          "start_pos": 32
        },
        {
          "class": "Task",
          "value": "распознавания речи",
          "start_pos": 108
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель распознавания речи",
            "start_pos": 6
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook AI",
            "start_pos": 32
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель распознавания речи",
            "start_pos": 6
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания речи",
            "start_pos": 108
          }
        }
      ]
    },
    {
      "id": 556,
      "text": "Ее предшественниками стали wav2letter, wav2vec, Librilight, wav2vec 2.0, XLSR и wav2vec 2.0.",
      "terms": [],
      "relations": []
    },
    {
      "id": 557,
      "text": "В этой статье мы расскажем о методе Propensity Score Adjustment, который применим для коррекции смещений и улучшения данных, полученных на онлайн-панелях.",
      "terms": [
        {
          "class": "Method",
          "value": "методе Propensity Score Adjustment",
          "start_pos": 29
        },
        {
          "class": "Task",
          "value": "коррекции смещений",
          "start_pos": 86
        },
        {
          "class": "Task",
          "value": "улучшения данных",
          "start_pos": 107
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методе Propensity Score Adjustment",
            "start_pos": 29
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "коррекции смещений",
            "start_pos": 86
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методе Propensity Score Adjustment",
            "start_pos": 29
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "улучшения данных",
            "start_pos": 107
          }
        }
      ]
    },
    {
      "id": 558,
      "text": "Итоговые коэффициенты, корректирующие смещение онлайн-выборки, можно рассчитать по методу Хорвица-Томпсона.",
      "terms": [
        {
          "class": "Object",
          "value": "коэффициенты",
          "start_pos": 9
        },
        {
          "class": "Method",
          "value": "методу Хорвица-Томпсона",
          "start_pos": 83
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методу Хорвица-Томпсона",
            "start_pos": 83
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "коэффициенты",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 559,
      "text": "Взвешивание (Weighting) - метод предназначен для коррекции известных перекосов выборок по социально-демографическим атрибутам.",
      "terms": [
        {
          "class": "Method",
          "value": "Взвешивание",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "Weighting",
          "start_pos": 13
        },
        {
          "class": "Task",
          "value": "коррекции",
          "start_pos": 49
        },
        {
          "class": "Object",
          "value": "перекосов выборок",
          "start_pos": 69
        },
        {
          "class": "Object",
          "value": "социально-демографическим атрибутам",
          "start_pos": 90
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Взвешивание",
            "start_pos": 0
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "коррекции",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Weighting",
            "start_pos": 13
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "коррекции",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Взвешивание",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "перекосов выборок",
            "start_pos": 69
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "перекосов выборок",
            "start_pos": 69
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "социально-демографическим атрибутам",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "перекосов выборок",
            "start_pos": 69
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "коррекции",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "социально-демографическим атрибутам",
            "start_pos": 90
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "коррекции",
            "start_pos": 49
          }
        }
      ]
    },
    {
      "id": 560,
      "text": "Авторы оригинального исследования Pew Research рекомендуют использовать для корректировки онлайн-опросов модели случайных лесов (random forest).",
      "terms": [
        {
          "class": "Activity",
          "value": "Pew Research",
          "start_pos": 34
        },
        {
          "class": "Task",
          "value": "корректировки",
          "start_pos": 76
        },
        {
          "class": "Object",
          "value": "онлайн-опросов",
          "start_pos": 90
        },
        {
          "class": "Method",
          "value": "случайных лесов",
          "start_pos": 112
        },
        {
          "class": "Method",
          "value": "random forest",
          "start_pos": 129
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "случайных лесов",
            "start_pos": 112
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "корректировки",
            "start_pos": 76
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "random forest",
            "start_pos": 129
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "корректировки",
            "start_pos": 76
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "случайных лесов",
            "start_pos": 112
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "онлайн-опросов",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "random forest",
            "start_pos": 129
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "онлайн-опросов",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "онлайн-опросов",
            "start_pos": 90
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "корректировки",
            "start_pos": 76
          }
        }
      ]
    },
    {
      "id": 561,
      "text": "Сейчас стандарт коррекции онлайн-выборок находится на стадии обсуждения и разработки и метод Propensity Score Adjustment, который мы рассмотрели, может стать общепринятым способом коррекции онлайн-панелей.",
      "terms": [
        {
          "class": "Method",
          "value": "метод Propensity Score Adjustment",
          "start_pos": 87
        },
        {
          "class": "Task",
          "value": "коррекции",
          "start_pos": 180
        },
        {
          "class": "Object",
          "value": "онлайн-панелей",
          "start_pos": 190
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "метод Propensity Score Adjustment",
            "start_pos": 87
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "коррекции",
            "start_pos": 180
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "метод Propensity Score Adjustment",
            "start_pos": 87
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "онлайн-панелей",
            "start_pos": 190
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "онлайн-панелей",
            "start_pos": 190
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "коррекции",
            "start_pos": 180
          }
        }
      ]
    },
    {
      "id": 562,
      "text": "В полку LLM прибыло: недавно специалисты из Французского национального центра научных исследований (French National Center for Scientific Research) объявили о релизе новой большой языковой модели под названием BLOOM (расшифровывается как BigScience Large Open-science Open-access Multilingual Language Model).",
      "terms": [
        {
          "class": "Model",
          "value": "LLM",
          "start_pos": 8
        },
        {
          "class": "Organization",
          "value": "Французского национального центра научных исследований",
          "start_pos": 44
        },
        {
          "class": "Organization",
          "value": "French National Center for Scientific Research",
          "start_pos": 100
        },
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 210
        },
        {
          "class": "Model",
          "value": "BigScience Large Open-science Open-access Multilingual Language Model",
          "start_pos": 238
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 210
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Французского национального центра научных исследований",
            "start_pos": 44
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BigScience Large Open-science Open-access Multilingual Language Model",
            "start_pos": 238
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Французского национального центра научных исследований",
            "start_pos": 44
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 210
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "French National Center for Scientific Research",
            "start_pos": 100
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BigScience Large Open-science Open-access Multilingual Language Model",
            "start_pos": 238
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "French National Center for Scientific Research",
            "start_pos": 100
          }
        },
        {
          "term1": {
            "class": "Organization",
            "value": "French National Center for Scientific Research",
            "start_pos": 100
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Французского национального центра научных исследований",
            "start_pos": 44
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 210
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "BigScience Large Open-science Open-access Multilingual Language Model",
            "start_pos": 238
          }
        }
      ]
    },
    {
      "id": 563,
      "text": "Недавно ученые из Французского национального центра научных исследований (French National Center for Scientific Research) объявили о выходе модели BLOOM.",
      "terms": [
        {
          "class": "Organization",
          "value": "Французского национального центра научных исследований",
          "start_pos": 18
        },
        {
          "class": "Organization",
          "value": "French National Center for Scientific Research",
          "start_pos": 74
        },
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 147
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "French National Center for Scientific Research",
            "start_pos": 74
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Французского национального центра научных исследований",
            "start_pos": 18
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 147
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Французского национального центра научных исследований",
            "start_pos": 18
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 147
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "French National Center for Scientific Research",
            "start_pos": 74
          }
        }
      ]
    },
    {
      "id": 564,
      "text": "Недавно был релиз модели BLOOM, которую разработала команда из Французского национального центра научных исследований (French National Center for Scientific Research).",
      "terms": [
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 25
        },
        {
          "class": "Organization",
          "value": "Французского национального центра научных исследований",
          "start_pos": 63
        },
        {
          "class": "Organization",
          "value": "French National Center for Scientific Research",
          "start_pos": 119
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "French National Center for Scientific Research",
            "start_pos": 119
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Французского национального центра научных исследований",
            "start_pos": 63
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 25
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Французского национального центра научных исследований",
            "start_pos": 63
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 25
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "French National Center for Scientific Research",
            "start_pos": 119
          }
        }
      ]
    },
    {
      "id": 565,
      "text": "Большие языковые модели или LLM (Large Language Models) — это алгоритмы глубокого обучения, которые обучаются на огромных объемах данных.",
      "terms": [
        {
          "class": "Model",
          "value": "LLM",
          "start_pos": 28
        },
        {
          "class": "Model",
          "value": "Large Language Models",
          "start_pos": 33
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Large Language Models",
            "start_pos": 33
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "LLM",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 566,
      "text": "Их можно использовать в качестве чат-ботов, для поиска информации, модерации онлайн-контента, анализа литературы или для создания совершенно новых фрагментов текста на основе подсказок (чем занимается, например, «Порфирьевич», который способен генерировать весьма забавные короткие рассказы).",
      "terms": [
        {
          "class": "Application",
          "value": "чат-ботов",
          "start_pos": 33
        },
        {
          "class": "Task",
          "value": "поиска информации",
          "start_pos": 48
        },
        {
          "class": "Activity",
          "value": "модерации",
          "start_pos": 67
        },
        {
          "class": "Object",
          "value": "онлайн-контента",
          "start_pos": 77
        },
        {
          "class": "Activity",
          "value": "анализа",
          "start_pos": 94
        },
        {
          "class": "Object",
          "value": "литературы",
          "start_pos": 102
        },
        {
          "class": "Activity",
          "value": "создания",
          "start_pos": 121
        },
        {
          "class": "Object",
          "value": "новых фрагментов текста",
          "start_pos": 141
        },
        {
          "class": "Application",
          "value": "Порфирьевич",
          "start_pos": 213
        },
        {
          "class": "Activity",
          "value": "генерировать весьма забавные короткие рассказы",
          "start_pos": 244
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "чат-ботов",
            "start_pos": 33
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "поиска информации",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 567,
      "text": "Новая LLM с открытым исходным кодом в отличие от таких известных LLM, как GPT-3 от OpenAI и LaMDA от Google, BLOOM является открытой языковой моделью, а исследователи охотно делятся подробностями о тех данных, на которых она обучалась, рассказывают о проблемах в ее разработке и о том, как они оценивали производительность BLOOM.",
      "terms": [
        {
          "class": "Model",
          "value": "LLM",
          "start_pos": 6
        },
        {
          "class": "Model",
          "value": "LLM",
          "start_pos": 65
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 74
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 83
        },
        {
          "class": "Model",
          "value": "LaMDA",
          "start_pos": 92
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 101
        },
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 109
        },
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 323
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 74
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 83
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "LaMDA",
            "start_pos": 92
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 101
          }
        }
      ]
    },
    {
      "id": 568,
      "text": "OpenAI и Google не делились своим кодом и не делали свои модели общедоступными.",
      "terms": [
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 9
        }
      ],
      "relations": []
    },
    {
      "id": 569,
      "text": "И уже сейчас над BLOOM работают более тысячи исследователей-добровольцев в рамках проекта под названием BigScience, который координирует стартап Hugging Face, существующий за счет финансовой поддержки французского правительства.",
      "terms": [
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 17
        },
        {
          "class": "Activity",
          "value": "BigScience",
          "start_pos": 104
        },
        {
          "class": "Organization",
          "value": "Hugging Face",
          "start_pos": 145
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "BigScience",
            "start_pos": 104
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Hugging Face",
            "start_pos": 145
          }
        }
      ]
    },
    {
      "id": 570,
      "text": "Более тысячи добровольных исследователей уже вовлечены в работу над моделью BLOOM в рамках проекта BigScience, который управляется стартапом Hugging Face.",
      "terms": [
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 76
        },
        {
          "class": "Activity",
          "value": "BigScience",
          "start_pos": 99
        },
        {
          "class": "Organization",
          "value": "Hugging Face",
          "start_pos": 141
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "BigScience",
            "start_pos": 99
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Hugging Face",
            "start_pos": 141
          }
        }
      ]
    },
    {
      "id": 571,
      "text": "BLOOM может обрабатывать 46 языков, включая французский, испанский, арабский, вьетнамский, китайский, индонезийский, каталанский, целых 13 языков Индии (хинди, бенгали, маратхи и ряд других) и аж 20 африканских.",
      "terms": [
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 0
        },
        {
          "class": "Lang",
          "value": "французский",
          "start_pos": 44
        },
        {
          "class": "Lang",
          "value": "испанский",
          "start_pos": 57
        },
        {
          "class": "Lang",
          "value": "арабский",
          "start_pos": 68
        },
        {
          "class": "Lang",
          "value": "вьетнамский",
          "start_pos": 78
        },
        {
          "class": "Lang",
          "value": "китайский",
          "start_pos": 91
        },
        {
          "class": "Lang",
          "value": "индонезийский",
          "start_pos": 102
        },
        {
          "class": "Lang",
          "value": "каталанский",
          "start_pos": 117
        },
        {
          "class": "Lang",
          "value": "хинди",
          "start_pos": 153
        },
        {
          "class": "Lang",
          "value": "бенгали",
          "start_pos": 160
        },
        {
          "class": "Lang",
          "value": "маратхи",
          "start_pos": 169
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "французский",
            "start_pos": 44
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "испанский",
            "start_pos": 57
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "арабский",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "вьетнамский",
            "start_pos": 78
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "китайский",
            "start_pos": 91
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "индонезийский",
            "start_pos": 102
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "каталанский",
            "start_pos": 117
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "хинди",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "бенгали",
            "start_pos": 160
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "маратхи",
            "start_pos": 169
          }
        }
      ]
    },
    {
      "id": 572,
      "text": "На русском BLOOM тоже пишет, но пока довольно вяло.",
      "terms": [
        {
          "class": "Lang",
          "value": "русском",
          "start_pos": 3
        },
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 11
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 11
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском",
            "start_pos": 3
          }
        }
      ]
    },
    {
      "id": 573,
      "text": "Почти треть обучающих данных была введена в модель BLOOM на английском языке: следствие того, что именно английский является наиболее часто используемым языком в интернете.",
      "terms": [
        {
          "class": "Model",
          "value": "BLOOM",
          "start_pos": 51
        },
        {
          "class": "Lang",
          "value": "английском",
          "start_pos": 60
        },
        {
          "class": "Lang",
          "value": "английский",
          "start_pos": 105
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 51
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английском",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BLOOM",
            "start_pos": 51
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английский",
            "start_pos": 105
          }
        }
      ]
    },
    {
      "id": 574,
      "text": "В июне текущего года инженер Google Блейк Лемуан (он на фото выше) ошарашил мировую общественность заявлением, что LLM LaMDA, над которой он работал вместе с другими программистами, может обладать некоторым подобием разума.",
      "terms": [
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 29
        },
        {
          "class": "Person",
          "value": "Блейк Лемуан",
          "start_pos": 36
        },
        {
          "class": "Model",
          "value": "LLM LaMDA",
          "start_pos": 115
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "LLM LaMDA",
            "start_pos": 115
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Блейк Лемуан",
            "start_pos": 36
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "LLM LaMDA",
            "start_pos": 115
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 29
          }
        }
      ]
    },
    {
      "id": 575,
      "text": "Американский ученый и исследователь ИИ Гэри Маркус еще до появления в сети откровений Лемуана опубликовал на портале Scientific American материал под названием «Общий ИИ не так неизбежен, как вы думаете».",
      "terms": [
        {
          "class": "Person",
          "value": "Гэри Маркус",
          "start_pos": 39
        },
        {
          "class": "Person",
          "value": "Лемуана",
          "start_pos": 86
        },
        {
          "class": "InfoResource",
          "value": "Scientific American",
          "start_pos": 117
        },
        {
          "class": "InfoResource",
          "value": "«Общий ИИ не так неизбежен, как вы думаете»",
          "start_pos": 160
        }
      ],
      "relations": []
    },
    {
      "id": 576,
      "text": "В частности, DALL-E 2 от OpenAI провалил тест на различение изображений астронавтов, едущих на лошадях, перепутав их с лошадьми, оседлавшими астронавтов.",
      "terms": [
        {
          "class": "Model",
          "value": "DALL-E 2",
          "start_pos": 13
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 25
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "DALL-E 2",
            "start_pos": 13
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 25
          }
        }
      ]
    },
    {
      "id": 577,
      "text": "Известный учёный Алан Тьюринг в 1950 году усомнился в том, что машина не может мыслить, и для проверки предложил свой знаменитый тест.",
      "terms": [
        {
          "class": "Person",
          "value": "Алан Тьюринг",
          "start_pos": 17
        },
        {
          "class": "Date",
          "value": "1950",
          "start_pos": 32
        },
        {
          "class": "Method",
          "value": "тест",
          "start_pos": 129
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "тест",
            "start_pos": 129
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Алан Тьюринг",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "1950",
            "start_pos": 32
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "тест",
            "start_pos": 129
          }
        }
      ]
    },
    {
      "id": 578,
      "text": "В 1954 году прошёл Джорджтаунский эксперимент.",
      "terms": [
        {
          "class": "Date",
          "value": "1954",
          "start_pos": 2
        },
        {
          "class": "Activity",
          "value": "Джорджтаунский эксперимент",
          "start_pos": 19
        }
      ],
      "relations": []
    },
    {
      "id": 579,
      "text": "В его рамках демонстрировалась система, которая автоматически перевела 60 предложений с русского языка на французский.",
      "terms": [
        {
          "class": "Application",
          "value": "система",
          "start_pos": 31
        },
        {
          "class": "Object",
          "value": "предложений",
          "start_pos": 74
        },
        {
          "class": "Lang",
          "value": "русского",
          "start_pos": 88
        },
        {
          "class": "Object",
          "value": "языка",
          "start_pos": 97
        },
        {
          "class": "Lang",
          "value": "французский",
          "start_pos": 106
        }
      ],
      "relations": []
    },
    {
      "id": 580,
      "text": "В 1960-е годы появились первые чат-боты, очень примитивные: в основном они перефразировали то, что говорил им собеседник-человек.",
      "terms": [
        {
          "class": "Date",
          "value": "1960-е",
          "start_pos": 2
        },
        {
          "class": "Application",
          "value": "чат-боты",
          "start_pos": 31
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1960-е",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "чат-боты",
            "start_pos": 31
          }
        }
      ]
    },
    {
      "id": 581,
      "text": "Даже знаменитый чат-бот Женя Густман, который, как считается, прошёл одну из версий теста Тьюринга, сделал это не благодаря хитрым алгоритмам.",
      "terms": [
        {
          "class": "Application",
          "value": "чат-бот Женя Густман",
          "start_pos": 16
        },
        {
          "class": "Method",
          "value": "теста Тьюринга",
          "start_pos": 84
        }
      ],
      "relations": []
    },
    {
      "id": 582,
      "text": "Учёные пытались всё формализовать, построить формальную модель, онтологию, понятия, связи, общие правила синтаксического разбора и универсальную грамматику.",
      "terms": [
        {
          "class": "Model",
          "value": "формальную модель",
          "start_pos": 45
        },
        {
          "class": "InfoResource",
          "value": "онтологию",
          "start_pos": 64
        },
        {
          "class": "Object",
          "value": "понятия",
          "start_pos": 75
        },
        {
          "class": "Object",
          "value": "связи",
          "start_pos": 84
        },
        {
          "class": "Method",
          "value": "синтаксического разбора",
          "start_pos": 105
        },
        {
          "class": "Method",
          "value": "универсальную грамматику",
          "start_pos": 131
        }
      ],
      "relations": []
    },
    {
      "id": 583,
      "text": "Тогда возникла теория грамматик Хомского.",
      "terms": [
        {
          "class": "Method",
          "value": "теория грамматик Хомского",
          "start_pos": 15
        }
      ],
      "relations": []
    },
    {
      "id": 584,
      "text": "Поэтому в 1980-е годы внимание переключилось на систему другого класса: на алгоритмы машинного обучения и так называемую корпусную лингвистику.",
      "terms": [
        {
          "class": "Date",
          "value": "1980-е",
          "start_pos": 10
        },
        {
          "class": "Method",
          "value": "алгоритмы машинного обучения",
          "start_pos": 75
        },
        {
          "class": "Science",
          "value": "корпусную лингвистику",
          "start_pos": 121
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1980-е",
            "start_pos": 10
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "алгоритмы машинного обучения",
            "start_pos": 75
          }
        }
      ]
    },
    {
      "id": 585,
      "text": "Поэтому внимание в 1980-х годах было перенаправлено на системы другого типа: на алгоритмы машинного обучения и корпусную лингвистику.",
      "terms": [
        {
          "class": "Date",
          "value": "1980-х годах",
          "start_pos": 19
        },
        {
          "class": "Method",
          "value": "алгоритмы машинного",
          "start_pos": 80
        },
        {
          "class": "Science",
          "value": "корпусную лингвистику",
          "start_pos": 111
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1980-х годах",
            "start_pos": 19
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "алгоритмы машинного",
            "start_pos": 80
          }
        }
      ]
    },
    {
      "id": 586,
      "text": "В 1990-е годы эта область получила очень мощный толчок благодаря развитию Всемирной паутины с большим количеством слабоструктурированного текста, по которому нужно было искать, его требовалось каталогизировать.",
      "terms": [
        {
          "class": "Date",
          "value": "1990-е",
          "start_pos": 2
        },
        {
          "class": "Application",
          "value": "Всемирной паутины",
          "start_pos": 74
        },
        {
          "class": "Object",
          "value": "слабоструктурированного текста",
          "start_pos": 114
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1990-е",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "Всемирной паутины",
            "start_pos": 74
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Всемирной паутины",
            "start_pos": 74
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "слабоструктурированного текста",
            "start_pos": 114
          }
        }
      ]
    },
    {
      "id": 587,
      "text": "В 2000-е анализ естественных языков начал применяться уже не только для поиска в Интернете, но и для решения разнообразных задач.",
      "terms": [
        {
          "class": "Method",
          "value": "анализ естественных языков",
          "start_pos": 9
        },
        {
          "class": "Task",
          "value": "поиска",
          "start_pos": 72
        },
        {
          "class": "Application",
          "value": "Интернете",
          "start_pos": 81
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализ естественных языков",
            "start_pos": 9
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "поиска",
            "start_pos": 72
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Интернете",
            "start_pos": 81
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "поиска",
            "start_pos": 72
          }
        }
      ]
    },
    {
      "id": 588,
      "text": "Возникли модели, основанные на краудсорсинге: мы не только пытаемся что-то понять с помощью машины, а подключаем людей, которые за небольшую плату определяют, на каком языке написан текст.",
      "terms": [
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 9
        },
        {
          "class": "Method",
          "value": "краудсорсинге",
          "start_pos": 31
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "краудсорсинге",
            "start_pos": 31
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "модели",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 589,
      "text": "В некотором смысле начали возрождаться идеи использования формальных онтологий, но теперь онтологии крутятся вокруг краудсорсинговых баз знаний, в частности баз на основе Linked Open Data.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "формальных онтологий",
          "start_pos": 58
        },
        {
          "class": "InfoResource",
          "value": "онтологии",
          "start_pos": 90
        },
        {
          "class": "InfoResource",
          "value": "краудсорсинговых баз знаний",
          "start_pos": 116
        },
        {
          "class": "InfoResource",
          "value": "Linked Open Data",
          "start_pos": 171
        }
      ],
      "relations": []
    },
    {
      "id": 590,
      "text": "Это целый набор баз знаний, его центр — машиночитаемый вариант «Википедии» DBpedia, который тоже наполняется по краудсорсинговой модели.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Википедии",
          "start_pos": 64
        },
        {
          "class": "InfoResource",
          "value": "DBpedia",
          "start_pos": 75
        },
        {
          "class": "Model",
          "value": "краудсорсинговой модели",
          "start_pos": 112
        }
      ],
      "relations": []
    },
    {
      "id": 591,
      "text": "В частности, семантический анализ (о чём документ?), генерация автоматической аннотации и автоматического summary, перевод и создание документов.",
      "terms": [
        {
          "class": "Method",
          "value": "семантический анализ",
          "start_pos": 13
        },
        {
          "class": "Task",
          "value": "генерация автоматической аннотации и автоматического summary",
          "start_pos": 53
        },
        {
          "class": "Task",
          "value": "перевод",
          "start_pos": 115
        },
        {
          "class": "Task",
          "value": "создание документов",
          "start_pos": 125
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "семантический анализ",
            "start_pos": 13
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "генерация автоматической аннотации и автоматического summary",
            "start_pos": 53
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "семантический анализ",
            "start_pos": 13
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "перевод",
            "start_pos": 115
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "семантический анализ",
            "start_pos": 13
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "создание документов",
            "start_pos": 125
          }
        }
      ]
    },
    {
      "id": 592,
      "text": "Все наверняка слышали об известном генераторе научных статей SCIgen, который создал статью «Корчеватель: Алгоритм типичной унификации точек доступа и избыточности».",
      "terms": [
        {
          "class": "Application",
          "value": "SCIgen",
          "start_pos": 61
        }
      ],
      "relations": []
    },
    {
      "id": 593,
      "text": "Но в случае с лентой такие рекомендации работают плохо: здесь постоянно возникает ситуация холодного старта.",
      "terms": [
        {
          "class": "Object",
          "value": "ситуация холодного старта",
          "start_pos": 82
        }
      ],
      "relations": []
    },
    {
      "id": 594,
      "text": "Поэтому применим классический воркэраунд для задачи холодного старта и построим систему контентных рекомендаций: попробуем научить машину понимать, о чём написан пост.",
      "terms": [
        {
          "class": "Method",
          "value": "воркэраунд",
          "start_pos": 30
        },
        {
          "class": "Task",
          "value": "холодного старта",
          "start_pos": 52
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "воркэраунд",
            "start_pos": 30
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "холодного старта",
            "start_pos": 52
          }
        }
      ]
    },
    {
      "id": 595,
      "text": "Соответственно, требуется метод семантического анализа.",
      "terms": [
        {
          "class": "Method",
          "value": "метод семантического анализа",
          "start_pos": 26
        }
      ],
      "relations": []
    },
    {
      "id": 596,
      "text": "Тут поможет анализ эмоциональной окраски.",
      "terms": [
        {
          "class": "Method",
          "value": "анализ эмоциональной окраски",
          "start_pos": 12
        }
      ],
      "relations": []
    },
    {
      "id": 597,
      "text": "В частности, это Apache Tika, японская библиотека language-detection и одна из последних разработок — питоновский пакет Ldig, который как раз работает на инфинитиграммах.",
      "terms": [
        {
          "class": "Library",
          "value": "Apache Tika",
          "start_pos": 17
        },
        {
          "class": "Library",
          "value": "language-detection",
          "start_pos": 50
        },
        {
          "class": "Library",
          "value": "Ldig",
          "start_pos": 120
        },
        {
          "class": "Object",
          "value": "инфинитиграммах",
          "start_pos": 154
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "Ldig",
            "start_pos": 120
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "инфинитиграммах",
            "start_pos": 154
          }
        }
      ]
    },
    {
      "id": 598,
      "text": "Но если текст короткий, из одного предложения или нескольких слов, то классический подход, основанный на триграммах, очень часто ошибается.",
      "terms": [
        {
          "class": "Object",
          "value": "текст",
          "start_pos": 8
        },
        {
          "class": "Object",
          "value": "предложения",
          "start_pos": 34
        },
        {
          "class": "Object",
          "value": "слов",
          "start_pos": 61
        },
        {
          "class": "Object",
          "value": "триграммах",
          "start_pos": 105
        }
      ],
      "relations": []
    },
    {
      "id": 599,
      "text": "Исправить ситуацию могут инфинитиграммы, но это новая область, далеко не для всех языков уже есть обученные и готовые классификаторы.",
      "terms": [
        {
          "class": "Object",
          "value": "инфинитиграммы",
          "start_pos": 25
        }
      ],
      "relations": []
    },
    {
      "id": 600,
      "text": "Первый основан на так называемом фонетическом матчинге.",
      "terms": [
        {
          "class": "Method",
          "value": "фонетическом матчинге",
          "start_pos": 33
        }
      ],
      "relations": []
    },
    {
      "id": 601,
      "text": "Альтернативный подход — так называемое редакционное расстояние, с помощью которого мы ищем в словаре максимально похожие слова-аналоги.",
      "terms": [
        {
          "class": "Metric",
          "value": "редакционное расстояние",
          "start_pos": 39
        }
      ],
      "relations": []
    },
    {
      "id": 602,
      "text": "Первая концепция — стемминг, мы пытаемся найти основу слова.",
      "terms": [
        {
          "class": "Method",
          "value": "стемминг",
          "start_pos": 19
        },
        {
          "class": "Object",
          "value": "основу слова",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "стемминг",
            "start_pos": 19
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "основу слова",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 603,
      "text": "Здесь используется подход affix stripping.",
      "terms": [
        {
          "class": "Method",
          "value": "affix stripping",
          "start_pos": 26
        }
      ],
      "relations": []
    },
    {
      "id": 604,
      "text": "Есть известная реализация, так называемый стеммер Портера, или проект Snowball.",
      "terms": [
        {
          "class": "Method",
          "value": "стеммер Портера",
          "start_pos": 42
        },
        {
          "class": "Activity",
          "value": "Snowball",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 605,
      "text": "Самый распространённый, наверное, инструмент — реализация в пакете Apache Lucene.",
      "terms": [
        {
          "class": "Library",
          "value": "Apache Lucene",
          "start_pos": 67
        }
      ],
      "relations": []
    },
    {
      "id": 606,
      "text": "Вторая концепция, альтернатива стемминга — лемматизация.",
      "terms": [
        {
          "class": "Method",
          "value": "стемминга",
          "start_pos": 31
        },
        {
          "class": "Method",
          "value": "лемматизация",
          "start_pos": 43
        }
      ],
      "relations": []
    },
    {
      "id": 607,
      "text": "Она пытается привести слово не к основе или корню, а к базовой, словарной форме — т. е. лемме.",
      "terms": [
        {
          "class": "Object",
          "value": "слово",
          "start_pos": 22
        },
        {
          "class": "Object",
          "value": "основе",
          "start_pos": 33
        },
        {
          "class": "Object",
          "value": "корню",
          "start_pos": 44
        },
        {
          "class": "Object",
          "value": "словарной форме",
          "start_pos": 64
        },
        {
          "class": "Object",
          "value": "лемме",
          "start_pos": 88
        }
      ],
      "relations": []
    },
    {
      "id": 608,
      "text": "Существует множество реализаций, и тема очень хорошо проработана именно для user generated текстов, пользовательски зашумлённых текстов.",
      "terms": [
        {
          "class": "Object",
          "value": "тема",
          "start_pos": 35
        },
        {
          "class": "Object",
          "value": "user generated текстов",
          "start_pos": 76
        },
        {
          "class": "Object",
          "value": "пользовательски зашумлённых текстов",
          "start_pos": 100
        }
      ],
      "relations": []
    },
    {
      "id": 609,
      "text": "Теперь отобразим это в векторном пространстве, потому что почти все математические модели работают в векторных пространствах больших размерностей.",
      "terms": [
        {
          "class": "Object",
          "value": "векторном пространстве",
          "start_pos": 23
        },
        {
          "class": "Method",
          "value": "математические модели",
          "start_pos": 68
        },
        {
          "class": "Object",
          "value": "векторных пространствах",
          "start_pos": 101
        }
      ],
      "relations": []
    },
    {
      "id": 610,
      "text": "Базовый подход, который используют многие модели, — метод \"мешка слов\".",
      "terms": [
        {
          "class": "Method",
          "value": "метод \"мешка слов\"",
          "start_pos": 52
        }
      ],
      "relations": []
    },
    {
      "id": 611,
      "text": "Доминирует так называемый TF-IDF.",
      "terms": [
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 26
        }
      ],
      "relations": []
    },
    {
      "id": 612,
      "text": "Частоту слова (term frequency, TF) определяют по-разному.",
      "terms": [
        {
          "class": "Metric",
          "value": "Частоту слова",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "term frequency",
          "start_pos": 15
        },
        {
          "class": "Metric",
          "value": "TF",
          "start_pos": 31
        }
      ],
      "relations": []
    },
    {
      "id": 613,
      "text": "Определив TF в документе, мы перемножаем её с обратной частотой документа (inverse document frequency, IDF).",
      "terms": [
        {
          "class": "Metric",
          "value": "TF",
          "start_pos": 10
        },
        {
          "class": "Metric",
          "value": "обратной частотой документа",
          "start_pos": 46
        },
        {
          "class": "Metric",
          "value": "inverse document frequency",
          "start_pos": 75
        },
        {
          "class": "Metric",
          "value": "IDF",
          "start_pos": 103
        }
      ],
      "relations": []
    },
    {
      "id": 614,
      "text": "IDF обычно вычисляют как логарифм от числа документов в корпусе, разделённый на количество документов, где это слово представлено.",
      "terms": [
        {
          "class": "Metric",
          "value": "IDF",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "логарифм",
          "start_pos": 25
        },
        {
          "class": "Object",
          "value": "корпусе",
          "start_pos": 56
        },
        {
          "class": "Object",
          "value": "слово",
          "start_pos": 111
        }
      ],
      "relations": []
    },
    {
      "id": 615,
      "text": "Например, при анализе эмоциональной окраски очень важно, к чему относилось, условно говоря, слово «хороший» или «нет».",
      "terms": [
        {
          "class": "Method",
          "value": "анализе эмоциональной окраски",
          "start_pos": 14
        },
        {
          "class": "Object",
          "value": "слово",
          "start_pos": 92
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализе эмоциональной окраски",
            "start_pos": 14
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "слово",
            "start_pos": 92
          }
        }
      ]
    },
    {
      "id": 616,
      "text": "Тогда наряду с мешком слов поможет мешок N-грамм: мы добавляем в словарь не только слова, но и словосочетания.",
      "terms": [
        {
          "class": "Method",
          "value": "мешком слов",
          "start_pos": 15
        },
        {
          "class": "Method",
          "value": "мешок N-грамм",
          "start_pos": 35
        },
        {
          "class": "Object",
          "value": "слова",
          "start_pos": 83
        },
        {
          "class": "Object",
          "value": "словосочетания",
          "start_pos": 95
        }
      ],
      "relations": []
    },
    {
      "id": 617,
      "text": "Мы не будем вносить все словосочетания, потому что это приведёт к комбинаторному взрыву, но часто используемые статистически значимые пары или пары, соответствующие именованным сущностям, можно добавить, и это повысит качество работы итоговой модели.",
      "terms": [
        {
          "class": "Object",
          "value": "словосочетания",
          "start_pos": 24
        },
        {
          "class": "Object",
          "value": "именованным сущностям",
          "start_pos": 165
        },
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 243
        }
      ],
      "relations": []
    },
    {
      "id": 618,
      "text": "Отчасти эти ситуации позволяют обработать методы построения \"векторных представлений слов\", например, знаменитый word2vec или более модные skip-gramm.",
      "terms": [
        {
          "class": "Method",
          "value": "методы построения",
          "start_pos": 42
        },
        {
          "class": "Object",
          "value": "векторных представлений слов",
          "start_pos": 61
        },
        {
          "class": "Method",
          "value": "word2vec",
          "start_pos": 113
        },
        {
          "class": "Method",
          "value": "skip-gramm",
          "start_pos": 139
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методы построения",
            "start_pos": 42
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "word2vec",
            "start_pos": 113
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы построения",
            "start_pos": 42
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "skip-gramm",
            "start_pos": 139
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы построения",
            "start_pos": 42
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "векторных представлений слов",
            "start_pos": 61
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "word2vec",
            "start_pos": 113
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "векторных представлений слов",
            "start_pos": 61
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "skip-gramm",
            "start_pos": 139
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "векторных представлений слов",
            "start_pos": 61
          }
        }
      ]
    },
    {
      "id": 619,
      "text": "Стандартные хеш-функции равномерно размазывают данные по пространству хешей.",
      "terms": [
        {
          "class": "Method",
          "value": "хеш-функции",
          "start_pos": 12
        }
      ],
      "relations": []
    },
    {
      "id": 620,
      "text": "Локально-чувствительный хеш похожие объекты поместит в пространстве объектов близко.",
      "terms": [
        {
          "class": "Method",
          "value": "Локально-чувствительный хеш",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 621,
      "text": "Мы выбираем случайный базис из случайных векторов.",
      "terms": [
        {
          "class": "Object",
          "value": "базис",
          "start_pos": 22
        },
        {
          "class": "Object",
          "value": "случайных векторов",
          "start_pos": 31
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "базис",
            "start_pos": 22
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "случайных векторов",
            "start_pos": 31
          }
        }
      ]
    },
    {
      "id": 622,
      "text": "Задача семантического анализа достаточно старая.",
      "terms": [
        {
          "class": "Task",
          "value": "семантического анализа",
          "start_pos": 7
        }
      ],
      "relations": []
    },
    {
      "id": 623,
      "text": "Современный подход — анализ семантики без учителя, поэтому его называют анализом скрытой (латентной) семантики.",
      "terms": [
        {
          "class": "Method",
          "value": "анализ семантики без учителя",
          "start_pos": 21
        },
        {
          "class": "Method",
          "value": "анализом скрытой (латентной) семантики",
          "start_pos": 72
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализ семантики без учителя",
            "start_pos": 21
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "анализом скрытой (латентной) семантики",
            "start_pos": 72
          }
        }
      ]
    },
    {
      "id": 624,
      "text": "Исторически первый подход к латентно-семантическому анализу — это латентно-семантическое индексирование.",
      "terms": [
        {
          "class": "Method",
          "value": "латентно-семантическому анализу",
          "start_pos": 28
        },
        {
          "class": "Method",
          "value": "латентно-семантическое индексирование",
          "start_pos": 66
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "латентно-семантическому анализу",
            "start_pos": 28
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "латентно-семантическое индексирование",
            "start_pos": 66
          }
        }
      ]
    },
    {
      "id": 625,
      "text": "Мы уже использовали для решения задач коллаборативных рекомендаций хорошо зарекомендовавшие себя техники факторизации матриц.",
      "terms": [
        {
          "class": "Task",
          "value": "задач коллаборативных рекомендаций",
          "start_pos": 32
        },
        {
          "class": "Method",
          "value": "техники факторизации матриц",
          "start_pos": 97
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "техники факторизации матриц",
            "start_pos": 97
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "задач коллаборативных рекомендаций",
            "start_pos": 32
          }
        }
      ]
    },
    {
      "id": 626,
      "text": "В чём суть факторизации?",
      "terms": [
        {
          "class": "Method",
          "value": "факторизации",
          "start_pos": 11
        }
      ],
      "relations": []
    },
    {
      "id": 627,
      "text": "Одной из альтернатив стал так называемый вероятностный латентно-семантический индекс.",
      "terms": [
        {
          "class": "Metric",
          "value": "вероятностный латентно-семантический индекс",
          "start_pos": 41
        }
      ],
      "relations": []
    },
    {
      "id": 628,
      "text": "Важно понять, что техника вероятностного латентно-семантического индекса — это техника факторизации матрицы.",
      "terms": [
        {
          "class": "Method",
          "value": "техника вероятностного латентно-семантического индекса",
          "start_pos": 18
        },
        {
          "class": "Method",
          "value": "техника факторизации матрицы",
          "start_pos": 79
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "техника факторизации матрицы",
            "start_pos": 79
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "техника вероятностного латентно-семантического индекса",
            "start_pos": 18
          }
        }
      ]
    },
    {
      "id": 629,
      "text": "По сравнению с классической факторизацией на основе сингулярного разложения у вероятностной генерирующей модели есть важное преимущество.",
      "terms": [
        {
          "class": "Method",
          "value": "классической факторизацией",
          "start_pos": 15
        },
        {
          "class": "Method",
          "value": "сингулярного разложения",
          "start_pos": 52
        },
        {
          "class": "Model",
          "value": "вероятностной генерирующей модели",
          "start_pos": 78
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "классической факторизацией",
            "start_pos": 15
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "сингулярного разложения",
            "start_pos": 52
          }
        }
      ]
    },
    {
      "id": 630,
      "text": "Для этого используется перплексия.",
      "terms": [
        {
          "class": "Method",
          "value": "перплексия",
          "start_pos": 23
        }
      ],
      "relations": []
    },
    {
      "id": 631,
      "text": "Есть так называемый EM-алгоритм.",
      "terms": [
        {
          "class": "Method",
          "value": "EM-алгоритм",
          "start_pos": 20
        }
      ],
      "relations": []
    },
    {
      "id": 632,
      "text": "«Сбер» представил mGPT — версию нейросети GPT-3, способную генерировать тексты на 61 языке",
      "terms": [
        {
          "class": "Organization",
          "value": "Сбер",
          "start_pos": 1
        },
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 18
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 42
        },
        {
          "class": "Task",
          "value": "генерировать тексты",
          "start_pos": 59
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 18
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 1
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 18
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 42
          }
        }
      ]
    },
    {
      "id": 633,
      "text": "21 апреля 2022 года команда разработчиков SberDevices представила многоязычную версию нейросети GPT-3 под названием mGPT.",
      "terms": [
        {
          "class": "Date",
          "value": "21 апреля 2022",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "SberDevices",
          "start_pos": 42
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 96
        },
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 116
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 116
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "SberDevices",
            "start_pos": 42
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "21 апреля 2022",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 116
          }
        }
      ]
    },
    {
      "id": 634,
      "text": "21 апреля 2022 года SberDevices представили многоязычную версию нейросети GPT-3 под названием mGPT.",
      "terms": [
        {
          "class": "Date",
          "value": "21 апреля 2022",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "SberDevices",
          "start_pos": 20
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 74
        },
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 94
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 94
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "SberDevices",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "21 апреля 2022",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 94
          }
        }
      ]
    },
    {
      "id": 635,
      "text": "«Сбер» рассказал, что модель mGPT может использоваться как просто для генерации текста, так и для решения различных задач в области обработки естественного языка на одном из поддерживаемых языков путем дообучения или в составе ансамблей моделей.",
      "terms": [
        {
          "class": "Organization",
          "value": "Сбер",
          "start_pos": 1
        },
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 29
        },
        {
          "class": "Task",
          "value": "генерации текста",
          "start_pos": 70
        },
        {
          "class": "Science",
          "value": "обработки естественного языка",
          "start_pos": 132
        },
        {
          "class": "Method",
          "value": "ансамблей моделей",
          "start_pos": 227
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "генерации текста",
            "start_pos": 70
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "обработки естественного языка",
            "start_pos": 132
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 29
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации текста",
            "start_pos": 70
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 29
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 1
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "ансамблей моделей",
            "start_pos": 227
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "обработки естественного языка",
            "start_pos": 132
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "ансамблей моделей",
            "start_pos": 227
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 29
          }
        }
      ]
    },
    {
      "id": 636,
      "text": "Разработчики уточнили, что модель mGPT показывает выдающиеся результаты на многих задачах few-shot и zero-shot learning: в этой области машинного обучения не требуется отдельно доучивать модель, достаточно сформулировать задачу текстом и привести несколько примеров, после чего mGPT научится выполнять новую задачу.",
      "terms": [
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 34
        },
        {
          "class": "Task",
          "value": "few-shot",
          "start_pos": 90
        },
        {
          "class": "Task",
          "value": "zero-shot learning",
          "start_pos": 101
        },
        {
          "class": "Science",
          "value": "машинного обучения",
          "start_pos": 136
        },
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 278
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 34
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "few-shot",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 34
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "zero-shot learning",
            "start_pos": 101
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 34
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "few-shot",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 34
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 136
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "few-shot",
            "start_pos": 90
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 136
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "zero-shot learning",
            "start_pos": 101
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "машинного обучения",
            "start_pos": 136
          }
        }
      ]
    },
    {
      "id": 637,
      "text": "Это может использоваться для того, чтобы научить автоматизированную систему отвечать на вопросы, определять эмоциональную окраску текста, извлекать из текста имена, фамилии, названия компаний и тому подобное.",
      "terms": [
        {
          "class": "Task",
          "value": "отвечать на вопросы",
          "start_pos": 76
        },
        {
          "class": "Task",
          "value": "определять эмоциональную окраску текста",
          "start_pos": 97
        },
        {
          "class": "Task",
          "value": "извлекать",
          "start_pos": 138
        },
        {
          "class": "Object",
          "value": "имена",
          "start_pos": 158
        },
        {
          "class": "Object",
          "value": "фамилии",
          "start_pos": 165
        },
        {
          "class": "Object",
          "value": "названия компаний",
          "start_pos": 174
        }
      ],
      "relations": []
    },
    {
      "id": 638,
      "text": "«Сбер» раскрыл, что модель mGPT может также использоваться как компонент различных речевых технологий — например, для улучшения качества распознавания речи, генерации сценариев диалоговых систем и других задачах.",
      "terms": [
        {
          "class": "Organization",
          "value": "Сбер",
          "start_pos": 1
        },
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 27
        },
        {
          "class": "Science",
          "value": "речевых технологий",
          "start_pos": 83
        },
        {
          "class": "Task",
          "value": "улучшения качества распознавания речи",
          "start_pos": 118
        },
        {
          "class": "Task",
          "value": "генерации сценариев диалоговых систем",
          "start_pos": 157
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 27
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "улучшения качества распознавания речи",
            "start_pos": 118
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 27
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации сценариев диалоговых систем",
            "start_pos": 157
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 27
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 1
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "улучшения качества распознавания речи",
            "start_pos": 118
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "речевых технологий",
            "start_pos": 83
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "генерации сценариев диалоговых систем",
            "start_pos": 157
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "речевых технологий",
            "start_pos": 83
          }
        }
      ]
    },
    {
      "id": 639,
      "text": "Полный перечень языков, доступный в модели mGPT: азербайджанский, английский, арабский, армянский, африкаанс, баскский, башкирский, белорусский, бенгали, бирманский, болгарский, бурятский, венгерский, вьетнамский, голландский, греческий, грузинский, датский, иврит, индонезийский, испанский, итальянский, йоруба, казахский, калмыцкий, киргизский, китайский, корейский, латышский, литовский, малайский, малаялам, маратхи, молдавский, монгольский, немецкий, осетинский, персидский, польский, португальский, румынский, русский, суахили, таджикский, тайский, тамильский, татарский, телугу, тувинский, турецкий, туркменский, узбекский, украинский, урду, финский, французский, хинди, чувашский, шведский, якутский, японский.",
      "terms": [
        {
          "class": "Model",
          "value": "mGPT",
          "start_pos": 43
        },
        {
          "class": "Lang",
          "value": "азербайджанский",
          "start_pos": 49
        },
        {
          "class": "Lang",
          "value": "английский",
          "start_pos": 66
        },
        {
          "class": "Lang",
          "value": "арабский",
          "start_pos": 78
        },
        {
          "class": "Lang",
          "value": "армянский",
          "start_pos": 88
        },
        {
          "class": "Lang",
          "value": "африкаанс",
          "start_pos": 99
        },
        {
          "class": "Lang",
          "value": "баскский",
          "start_pos": 110
        },
        {
          "class": "Lang",
          "value": "башкирский",
          "start_pos": 120
        },
        {
          "class": "Lang",
          "value": "белорусский",
          "start_pos": 132
        },
        {
          "class": "Lang",
          "value": "бенгали",
          "start_pos": 145
        },
        {
          "class": "Lang",
          "value": "бирманский",
          "start_pos": 154
        },
        {
          "class": "Lang",
          "value": "болгарский",
          "start_pos": 166
        },
        {
          "class": "Lang",
          "value": "бурятский",
          "start_pos": 178
        },
        {
          "class": "Lang",
          "value": "венгерский",
          "start_pos": 189
        },
        {
          "class": "Lang",
          "value": "вьетнамский",
          "start_pos": 201
        },
        {
          "class": "Lang",
          "value": "голландский",
          "start_pos": 214
        },
        {
          "class": "Lang",
          "value": "греческий",
          "start_pos": 227
        },
        {
          "class": "Lang",
          "value": "грузинский",
          "start_pos": 238
        },
        {
          "class": "Lang",
          "value": "датский",
          "start_pos": 250
        },
        {
          "class": "Lang",
          "value": "иврит",
          "start_pos": 259
        },
        {
          "class": "Lang",
          "value": "индонезийский",
          "start_pos": 266
        },
        {
          "class": "Lang",
          "value": "испанский",
          "start_pos": 281
        },
        {
          "class": "Lang",
          "value": "итальянский",
          "start_pos": 292
        },
        {
          "class": "Lang",
          "value": "йоруба",
          "start_pos": 305
        },
        {
          "class": "Lang",
          "value": "казахский",
          "start_pos": 313
        },
        {
          "class": "Lang",
          "value": "калмыцкий",
          "start_pos": 324
        },
        {
          "class": "Lang",
          "value": "киргизский",
          "start_pos": 335
        },
        {
          "class": "Lang",
          "value": "китайский",
          "start_pos": 347
        },
        {
          "class": "Lang",
          "value": "корейский",
          "start_pos": 358
        },
        {
          "class": "Lang",
          "value": "латышский",
          "start_pos": 369
        },
        {
          "class": "Lang",
          "value": "литовский",
          "start_pos": 380
        },
        {
          "class": "Lang",
          "value": "малайский",
          "start_pos": 391
        },
        {
          "class": "Lang",
          "value": "малаялам",
          "start_pos": 402
        },
        {
          "class": "Lang",
          "value": "маратхи",
          "start_pos": 412
        },
        {
          "class": "Lang",
          "value": "молдавский",
          "start_pos": 421
        },
        {
          "class": "Lang",
          "value": "монгольский",
          "start_pos": 433
        },
        {
          "class": "Lang",
          "value": "немецкий",
          "start_pos": 446
        },
        {
          "class": "Lang",
          "value": "осетинский",
          "start_pos": 456
        },
        {
          "class": "Lang",
          "value": "персидский",
          "start_pos": 468
        },
        {
          "class": "Lang",
          "value": "польский",
          "start_pos": 480
        },
        {
          "class": "Lang",
          "value": "португальский",
          "start_pos": 490
        },
        {
          "class": "Lang",
          "value": "румынский",
          "start_pos": 505
        },
        {
          "class": "Lang",
          "value": "русский",
          "start_pos": 516
        },
        {
          "class": "Lang",
          "value": "суахили",
          "start_pos": 525
        },
        {
          "class": "Lang",
          "value": "таджикский",
          "start_pos": 534
        },
        {
          "class": "Lang",
          "value": "тайский",
          "start_pos": 546
        },
        {
          "class": "Lang",
          "value": "тамильский",
          "start_pos": 555
        },
        {
          "class": "Lang",
          "value": "татарский",
          "start_pos": 567
        },
        {
          "class": "Lang",
          "value": "телугу",
          "start_pos": 578
        },
        {
          "class": "Lang",
          "value": "тувинский",
          "start_pos": 586
        },
        {
          "class": "Lang",
          "value": "турецкий",
          "start_pos": 597
        },
        {
          "class": "Lang",
          "value": "туркменский",
          "start_pos": 607
        },
        {
          "class": "Lang",
          "value": "узбекский",
          "start_pos": 620
        },
        {
          "class": "Lang",
          "value": "украинский",
          "start_pos": 631
        },
        {
          "class": "Lang",
          "value": "урду",
          "start_pos": 643
        },
        {
          "class": "Lang",
          "value": "финский",
          "start_pos": 649
        },
        {
          "class": "Lang",
          "value": "французский",
          "start_pos": 658
        },
        {
          "class": "Lang",
          "value": "хинди",
          "start_pos": 671
        },
        {
          "class": "Lang",
          "value": "чувашский",
          "start_pos": 678
        },
        {
          "class": "Lang",
          "value": "шведский",
          "start_pos": 689
        },
        {
          "class": "Lang",
          "value": "якутский",
          "start_pos": 699
        },
        {
          "class": "Lang",
          "value": "японский",
          "start_pos": 709
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "азербайджанский",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английский",
            "start_pos": 66
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "арабский",
            "start_pos": 78
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "армянский",
            "start_pos": 88
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "африкаанс",
            "start_pos": 99
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "баскский",
            "start_pos": 110
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "башкирский",
            "start_pos": 120
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "белорусский",
            "start_pos": 132
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "бенгали",
            "start_pos": 145
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "бирманский",
            "start_pos": 154
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "болгарский",
            "start_pos": 166
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "бурятский",
            "start_pos": 178
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "венгерский",
            "start_pos": 189
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "вьетнамский",
            "start_pos": 201
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "голландский",
            "start_pos": 214
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "греческий",
            "start_pos": 227
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "грузинский",
            "start_pos": 238
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "датский",
            "start_pos": 250
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "иврит",
            "start_pos": 259
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "индонезийский",
            "start_pos": 266
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "испанский",
            "start_pos": 281
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "итальянский",
            "start_pos": 292
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "йоруба",
            "start_pos": 305
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "казахский",
            "start_pos": 313
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "калмыцкий",
            "start_pos": 324
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "киргизский",
            "start_pos": 335
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "китайский",
            "start_pos": 347
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "корейский",
            "start_pos": 358
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "латышский",
            "start_pos": 369
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "литовский",
            "start_pos": 380
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "малайский",
            "start_pos": 391
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "малаялам",
            "start_pos": 402
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "маратхи",
            "start_pos": 412
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "молдавский",
            "start_pos": 421
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "монгольский",
            "start_pos": 433
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "немецкий",
            "start_pos": 446
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "осетинский",
            "start_pos": 456
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "персидский",
            "start_pos": 468
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "польский",
            "start_pos": 480
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "португальский",
            "start_pos": 490
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "румынский",
            "start_pos": 505
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русский",
            "start_pos": 516
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "суахили",
            "start_pos": 525
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "таджикский",
            "start_pos": 534
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "тайский",
            "start_pos": 546
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "тамильский",
            "start_pos": 555
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "татарский",
            "start_pos": 567
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "телугу",
            "start_pos": 578
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "тувинский",
            "start_pos": 586
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "турецкий",
            "start_pos": 597
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "туркменский",
            "start_pos": 607
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "узбекский",
            "start_pos": 620
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "украинский",
            "start_pos": 631
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "урду",
            "start_pos": 643
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "финский",
            "start_pos": 649
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "французский",
            "start_pos": 658
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "хинди",
            "start_pos": 671
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "чувашский",
            "start_pos": 678
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "шведский",
            "start_pos": 689
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "якутский",
            "start_pos": 699
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "mGPT",
            "start_pos": 43
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "японский",
            "start_pos": 709
          }
        }
      ]
    },
    {
      "id": 640,
      "text": "В 2020 году «Сбер» представил русскоязычную версию нейросети GPT-3, именно она используется в двух виртуальных ассистентах семейства «Салют» от «Сбера».",
      "terms": [
        {
          "class": "Date",
          "value": "2020",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "Сбер",
          "start_pos": 13
        },
        {
          "class": "Lang",
          "value": "русскоязычную",
          "start_pos": 30
        },
        {
          "class": "Model",
          "value": "версию нейросети GPT-3",
          "start_pos": 44
        },
        {
          "class": "Application",
          "value": "Салют",
          "start_pos": 134
        },
        {
          "class": "Organization",
          "value": "Сбера",
          "start_pos": 145
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Салют",
            "start_pos": 134
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 13
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "версию нейросети GPT-3",
            "start_pos": 44
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русскоязычную",
            "start_pos": 30
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2020",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "версию нейросети GPT-3",
            "start_pos": 44
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "версию нейросети GPT-3",
            "start_pos": 44
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 13
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "версию нейросети GPT-3",
            "start_pos": 44
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Салют",
            "start_pos": 134
          }
        }
      ]
    },
    {
      "id": 641,
      "text": "Русскоязычная версия GPT-3, разработанная «Сбером», доступна на платформе SmartMarket.",
      "terms": [
        {
          "class": "Lang",
          "value": "Русскоязычная",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "версия GPT-3",
          "start_pos": 14
        },
        {
          "class": "Organization",
          "value": "Сбером",
          "start_pos": 43
        },
        {
          "class": "InfoResource",
          "value": "SmartMarket",
          "start_pos": 74
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "версия GPT-3",
            "start_pos": 14
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "Русскоязычная",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "версия GPT-3",
            "start_pos": 14
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбером",
            "start_pos": 43
          }
        }
      ]
    },
    {
      "id": 642,
      "text": "В ноябре 2021 года «Сбер» обучил нейросеть ruGPT-3 автоматически писать код и назвал эту функцию JARVIS.",
      "terms": [
        {
          "class": "Date",
          "value": "ноябре 2021 года",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "Сбер",
          "start_pos": 20
        },
        {
          "class": "Model",
          "value": "ruGPT-3",
          "start_pos": 43
        },
        {
          "class": "Method",
          "value": "JARVIS",
          "start_pos": 97
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "ноябре 2021 года",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "JARVIS",
            "start_pos": 97
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "JARVIS",
            "start_pos": 97
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruGPT-3",
            "start_pos": 43
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "ноябре 2021 года",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "ruGPT-3",
            "start_pos": 43
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "JARVIS",
            "start_pos": 97
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "ruGPT-3",
            "start_pos": 43
          }
        }
      ]
    },
    {
      "id": 643,
      "text": "В ноябре 2021 года компания \"Сбер\" провела обучение нейросети ruGPT-3 для автоматического написания кода, представив эту функцию под названием JARVIS.",
      "terms": [
        {
          "class": "Date",
          "value": "ноябре 2021 года",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "Сбер",
          "start_pos": 29
        },
        {
          "class": "Model",
          "value": "ruGPT-3",
          "start_pos": 62
        },
        {
          "class": "Method",
          "value": "JARVIS",
          "start_pos": 143
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "ноябре 2021 года",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "JARVIS",
            "start_pos": 143
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "JARVIS",
            "start_pos": 143
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 29
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruGPT-3",
            "start_pos": 62
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбер",
            "start_pos": 29
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "ноябре 2021 года",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "ruGPT-3",
            "start_pos": 62
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "JARVIS",
            "start_pos": 143
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "ruGPT-3",
            "start_pos": 62
          }
        }
      ]
    },
    {
      "id": 644,
      "text": "Не заблокированы: Sber AI — на GitHub; ruDALL-E — на GitHub; Russian GPT-3 models — GitHub.",
      "terms": [
        {
          "class": "Model",
          "value": "Sber AI",
          "start_pos": 18
        },
        {
          "class": "InfoResource",
          "value": "GitHub",
          "start_pos": 31
        },
        {
          "class": "Model",
          "value": "ruDALL-E",
          "start_pos": 39
        },
        {
          "class": "InfoResource",
          "value": "GitHub",
          "start_pos": 53
        },
        {
          "class": "Model",
          "value": "Russian GPT-3 models",
          "start_pos": 61
        },
        {
          "class": "InfoResource",
          "value": "GitHub",
          "start_pos": 84
        }
      ],
      "relations": []
    },
    {
      "id": 645,
      "text": "Заблокированы: большая часть ссылок на открытом портале Open Source от разработчиков «Сбера»; SberDevices.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Open Source",
          "start_pos": 56
        },
        {
          "class": "Organization",
          "value": "Сбера",
          "start_pos": 86
        },
        {
          "class": "Application",
          "value": "SberDevices",
          "start_pos": 94
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "SberDevices",
            "start_pos": 94
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбера",
            "start_pos": 86
          }
        }
      ]
    },
    {
      "id": 646,
      "text": "Как поясняет сам Томас Димсон, This Word Does Not Exist является вариацией нейросети GPT-2.",
      "terms": [
        {
          "class": "Person",
          "value": "Томас Димсон",
          "start_pos": 17
        },
        {
          "class": "Model",
          "value": "This Word Does Not Exist",
          "start_pos": 31
        },
        {
          "class": "Model",
          "value": "GPT-2",
          "start_pos": 85
        }
      ],
      "relations": []
    },
    {
      "id": 647,
      "text": "Существует также твиттер-бот проекта.",
      "terms": [
        {
          "class": "Application",
          "value": "твиттер-бот",
          "start_pos": 17
        }
      ],
      "relations": []
    },
    {
      "id": 648,
      "text": "Чтобы натренировать свою нейросеть на основе загруженных файлов, Димсон рекомендует воспользоваться контентом Apple Dictionary или Urban Dictionary.",
      "terms": [
        {
          "class": "Person",
          "value": "Димсон",
          "start_pos": 65
        },
        {
          "class": "InfoResource",
          "value": "Apple Dictionary",
          "start_pos": 110
        },
        {
          "class": "InfoResource",
          "value": "Urban Dictionary",
          "start_pos": 131
        }
      ],
      "relations": []
    },
    {
      "id": 649,
      "text": "Правда, пользователи YCombinator уже заметили, что This Word Does Not Exist иногда предлагает уже существующие слова — например, refactoring.",
      "terms": [
        {
          "class": "Application",
          "value": "YCombinator",
          "start_pos": 21
        },
        {
          "class": "Model",
          "value": "This Word Does Not Exist",
          "start_pos": 51
        }
      ],
      "relations": []
    },
    {
      "id": 650,
      "text": "После выхода учебника я читал курс на его основе в УрФУ, ШАДе, ИТМО и СПбГУ и убедился, что наличие перевода очень помогает.",
      "terms": [
        {
          "class": "Organization",
          "value": "УрФУ",
          "start_pos": 51
        },
        {
          "class": "Organization",
          "value": "ШАДе",
          "start_pos": 57
        },
        {
          "class": "Organization",
          "value": "ИТМО",
          "start_pos": 63
        },
        {
          "class": "Organization",
          "value": "СПбГУ",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 651,
      "text": "В случае NLP потребность в «локализованных» учебных материалах еще заметнее, чем в информационном поиске.",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 9
        },
        {
          "class": "Science",
          "value": "информационном поиске",
          "start_pos": 83
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 9
          },
          "predicate": "includes",
          "term2": {
            "class": "Science",
            "value": "информационном поиске",
            "start_pos": 83
          }
        }
      ]
    },
    {
      "id": 652,
      "text": "Слушателям предлагается самостоятельно реализовать методы морфологического анализа, определения тональности текста, автоматического реферирования документов, извлечения именованных сущностей и машинного перевода.",
      "terms": [
        {
          "class": "Method",
          "value": "методы морфологического анализа",
          "start_pos": 51
        },
        {
          "class": "Task",
          "value": "определения тональности текста",
          "start_pos": 84
        },
        {
          "class": "Task",
          "value": "автоматического реферирования документов",
          "start_pos": 116
        },
        {
          "class": "Task",
          "value": "извлечения именованных сущностей",
          "start_pos": 158
        },
        {
          "class": "Task",
          "value": "машинного перевода",
          "start_pos": 193
        }
      ],
      "relations": []
    },
    {
      "id": 653,
      "text": "Желательно, чтобы слушатели обладали базовыми знаниями линейной алгебры, теории вероятностей, математической статистики и машинного обучения, а также навыками программирования (необходимы для решения практических заданий).",
      "terms": [
        {
          "class": "Science",
          "value": "линейной алгебры",
          "start_pos": 55
        },
        {
          "class": "Science",
          "value": "теории вероятностей",
          "start_pos": 73
        },
        {
          "class": "Science",
          "value": "математической статистики",
          "start_pos": 94
        },
        {
          "class": "Method",
          "value": "машинного обучения",
          "start_pos": 122
        },
        {
          "class": "Science",
          "value": "программирования",
          "start_pos": 159
        }
      ],
      "relations": []
    },
    {
      "id": 654,
      "text": "Он опубликовал программу (репозиторий на гитхабе), которая делает именно это: генерирует политические речи, удивительно похожие на настоящие.",
      "terms": [
        {
          "class": "Application",
          "value": "программу",
          "start_pos": 15
        },
        {
          "class": "Task",
          "value": "генерирует политические речи",
          "start_pos": 78
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "программу",
            "start_pos": 15
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерирует политические речи",
            "start_pos": 78
          }
        }
      ]
    },
    {
      "id": 655,
      "text": "В данной статье мы будем использовать модель трансформера для бинарной классификации текста.",
      "terms": [
        {
          "class": "Model",
          "value": "модель трансформера",
          "start_pos": 38
        },
        {
          "class": "Task",
          "value": "бинарной классификации текста",
          "start_pos": 62
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель трансформера",
            "start_pos": 38
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "бинарной классификации текста",
            "start_pos": 62
          }
        }
      ]
    },
    {
      "id": 656,
      "text": "Самая простая и популярная связка – TF-IDF + линейная модель.",
      "terms": [
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 36
        },
        {
          "class": "Model",
          "value": "линейная модель",
          "start_pos": 45
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "TF-IDF",
            "start_pos": 36
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "линейная модель",
            "start_pos": 45
          }
        }
      ]
    },
    {
      "id": 657,
      "text": "В случае с BERT можно (даже нужно) опустить препроцессинг и сразу перейти к токенизации и обучению.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 11
        },
        {
          "class": "Method",
          "value": "препроцессинг",
          "start_pos": 44
        },
        {
          "class": "Method",
          "value": "токенизации",
          "start_pos": 76
        }
      ],
      "relations": []
    },
    {
      "id": 658,
      "text": "Необходимо обучить модель находить обращения с жалобой на сотрудника или другими словами – бинарная классификация.",
      "terms": [
        {
          "class": "Task",
          "value": "бинарная классификация",
          "start_pos": 91
        }
      ],
      "relations": []
    },
    {
      "id": 659,
      "text": "Для решения описанной задачи используется модель от DeepPavlov rubert-base-cased-sentence.",
      "terms": [
        {
          "class": "Organization",
          "value": "DeepPavlov",
          "start_pos": 52
        },
        {
          "class": "Model",
          "value": "rubert-base-cased-sentence",
          "start_pos": 63
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "rubert-base-cased-sentence",
            "start_pos": 63
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "DeepPavlov",
            "start_pos": 52
          }
        }
      ]
    },
    {
      "id": 660,
      "text": "На выходе мы получаем метрику f1 = 0.91.",
      "terms": [
        {
          "class": "Metric",
          "value": "f1",
          "start_pos": 30
        },
        {
          "class": "Value",
          "value": "0.91",
          "start_pos": 35
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "f1",
            "start_pos": 30
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.91",
            "start_pos": 35
          }
        }
      ]
    },
    {
      "id": 661,
      "text": "Обученные модели можно найти на сайтах HuggingFace и DeepPavlov.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "HuggingFace",
          "start_pos": 39
        },
        {
          "class": "InfoResource",
          "value": "DeepPavlov",
          "start_pos": 53
        }
      ],
      "relations": []
    },
    {
      "id": 662,
      "text": "Соответственно, мы приходим к стандартной задаче Machine Learning (ML) – «многоклассовая классификация».",
      "terms": [
        {
          "class": "Science",
          "value": "Machine Learning",
          "start_pos": 49
        },
        {
          "class": "Science",
          "value": "ML",
          "start_pos": 67
        },
        {
          "class": "Task",
          "value": "многоклассовая классификация",
          "start_pos": 74
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "ML",
            "start_pos": 67
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "Machine Learning",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "многоклассовая классификация",
            "start_pos": 74
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "Machine Learning",
            "start_pos": 49
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "многоклассовая классификация",
            "start_pos": 74
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "ML",
            "start_pos": 67
          }
        }
      ]
    },
    {
      "id": 663,
      "text": "Стандартной задачей Machine Learning (ML)  является многоклассовая классификация.",
      "terms": [
        {
          "class": "Science",
          "value": "Machine Learning",
          "start_pos": 20
        },
        {
          "class": "Science",
          "value": "ML",
          "start_pos": 38
        },
        {
          "class": "Task",
          "value": "многоклассовая классификация",
          "start_pos": 52
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "ML",
            "start_pos": 38
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "Machine Learning",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "многоклассовая классификация",
            "start_pos": 52
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "Machine Learning",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "многоклассовая классификация",
            "start_pos": 52
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "ML",
            "start_pos": 38
          }
        }
      ]
    },
    {
      "id": 664,
      "text": "Многоклассовая классификация - это известная задача Machine Learning (ML).",
      "terms": [
        {
          "class": "Task",
          "value": "Многоклассовая классификация",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "Machine Learning",
          "start_pos": 52
        },
        {
          "class": "Science",
          "value": "ML",
          "start_pos": 70
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "ML",
            "start_pos": 70
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "Machine Learning",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Многоклассовая классификация",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "Machine Learning",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Многоклассовая классификация",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "ML",
            "start_pos": 70
          }
        }
      ]
    },
    {
      "id": 665,
      "text": "В результате данного анализа решается задача — сбор сводной аналитики по организации.",
      "terms": [
        {
          "class": "Method",
          "value": "анализа",
          "start_pos": 21
        },
        {
          "class": "Task",
          "value": "сбор сводной аналитики по организации",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализа",
            "start_pos": 21
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "сбор сводной аналитики по организации",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 666,
      "text": "В случае многоклассовой классификации число классов должно быть более 2 и может достигать даже многих тысяч.",
      "terms": [
        {
          "class": "Task",
          "value": "многоклассовой классификации",
          "start_pos": 9
        },
        {
          "class": "Object",
          "value": "классов",
          "start_pos": 44
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "классов",
            "start_pos": 44
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "многоклассовой классификации",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 667,
      "text": "Во-вторых, такого разброса тематик, связанных с техническими текстами, у нас еще не было: нейросети, переиспользование контента, автоматическое тестирование документации, встраивание текста в интерфейс, мастерство технических коммуникаций, построение процессов перевода и принципы написания документов с расчетом на их последующую локализацию.",
      "terms": [
        {
          "class": "Object",
          "value": "техническими текстами",
          "start_pos": 48
        },
        {
          "class": "Task",
          "value": "переиспользование контента",
          "start_pos": 101
        },
        {
          "class": "Task",
          "value": "автоматическое тестирование документации",
          "start_pos": 129
        },
        {
          "class": "Task",
          "value": "встраивание текста в интерфейс",
          "start_pos": 171
        },
        {
          "class": "Task",
          "value": "мастерство технических коммуникаций",
          "start_pos": 203
        },
        {
          "class": "Task",
          "value": "построение процессов перевода",
          "start_pos": 240
        },
        {
          "class": "Task",
          "value": "принципы написания документов",
          "start_pos": 272
        }
      ],
      "relations": []
    },
    {
      "id": 668,
      "text": "Зачастую суммаризация предполагает работу с большими генеративными текстовыми моделями, куда надо «положить» все отзывы.",
      "terms": [
        {
          "class": "Method",
          "value": "суммаризация",
          "start_pos": 9
        },
        {
          "class": "Object",
          "value": "генеративными текстовыми моделями",
          "start_pos": 53
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "суммаризация",
            "start_pos": 9
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "генеративными текстовыми моделями",
            "start_pos": 53
          }
        }
      ]
    },
    {
      "id": 669,
      "text": "То есть какие аспекты искать; выделять эти аспекты в отзывах; оценивать тональность высказываний.",
      "terms": [
        {
          "class": "Object",
          "value": "тональность высказываний",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 670,
      "text": "Мы начали со внутреннего инструмента Яндекса — библиотеки регулярных выражений под названием Remorph.",
      "terms": [
        {
          "class": "Organization",
          "value": "Яндекса",
          "start_pos": 37
        },
        {
          "class": "Application",
          "value": "библиотеки регулярных выражений",
          "start_pos": 47
        },
        {
          "class": "Application",
          "value": "Remorph",
          "start_pos": 93
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "библиотеки регулярных выражений",
            "start_pos": 47
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Яндекса",
            "start_pos": 37
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Remorph",
            "start_pos": 93
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Яндекса",
            "start_pos": 37
          }
        }
      ]
    },
    {
      "id": 671,
      "text": "Исследователи Массачусетского технологического университета разработали систему искусственного интеллекта, которая способна переписывать устаревшие предложения в статьях «Википедии».",
      "terms": [
        {
          "class": "Organization",
          "value": "Массачусетского технологического университета",
          "start_pos": 14
        },
        {
          "class": "Application",
          "value": "систему искусственного интеллекта",
          "start_pos": 72
        },
        {
          "class": "Task",
          "value": "переписывать устаревшие предложения",
          "start_pos": 124
        },
        {
          "class": "Object",
          "value": "статьях",
          "start_pos": 162
        },
        {
          "class": "InfoResource",
          "value": "Википедии",
          "start_pos": 171
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "статьях",
            "start_pos": 162
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "переписывать устаревшие предложения",
            "start_pos": 124
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "систему искусственного интеллекта",
            "start_pos": 72
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "статьях",
            "start_pos": 162
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "систему искусственного интеллекта",
            "start_pos": 72
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "переписывать устаревшие предложения",
            "start_pos": 124
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "систему искусственного интеллекта",
            "start_pos": 72
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Массачусетского технологического университета",
            "start_pos": 14
          }
        }
      ]
    },
    {
      "id": 672,
      "text": "Расширение статей, серьезные переписывания или другие рутинные изменения, такие как обновление номеров, дат, имен и местоположений в настоящее время добровольно выполняются пользователями из разных стран.",
      "terms": [
        {
          "class": "Task",
          "value": "Расширение статей",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "переписывания",
          "start_pos": 29
        }
      ],
      "relations": []
    },
    {
      "id": 673,
      "text": "Если она видит какие-либо противоречия между этими двумя высказываниями, то использует «маску нейтральности», чтобы определить те противоречивые слова, которые нужно удалить, и те, которые обязательно нужно сохранить.",
      "terms": [
        {
          "class": "Object",
          "value": "маску нейтральности",
          "start_pos": 88
        }
      ],
      "relations": []
    },
    {
      "id": 674,
      "text": "Отмечается, что систему также можно использовать для дополнения наборов данных, предназначенных для обучения детекторов фейкньюс, что потенциально снижает предвзятость и повышает точность информации.",
      "terms": [
        {
          "class": "Application",
          "value": "систему",
          "start_pos": 16
        },
        {
          "class": "Task",
          "value": "дополнения наборов данных",
          "start_pos": 53
        },
        {
          "class": "Task",
          "value": "обучения детекторов фейкньюс",
          "start_pos": 100
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 179
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "систему",
            "start_pos": 16
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "дополнения наборов данных",
            "start_pos": 53
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "систему",
            "start_pos": 16
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "обучения детекторов фейкньюс",
            "start_pos": 100
          }
        }
      ]
    },
    {
      "id": 675,
      "text": "Наше выработанное решение – обучить нейронную сеть, которая способна по тексту обращения автоматически распознавать заранее ранжированные по классам проблемы, извлекать сущность (номер заказа и телефон клиента) и по определённым классам сделать автоматизацию решения.",
      "terms": [
        {
          "class": "Method",
          "value": "нейронную сеть",
          "start_pos": 36
        },
        {
          "class": "Task",
          "value": "автоматически распознавать заранее ранжированные по классам проблемы",
          "start_pos": 89
        },
        {
          "class": "Task",
          "value": "извлекать сущность",
          "start_pos": 159
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "нейронную сеть",
            "start_pos": 36
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "автоматически распознавать заранее ранжированные по классам проблемы",
            "start_pos": 89
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "нейронную сеть",
            "start_pos": 36
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "извлекать сущность",
            "start_pos": 159
          }
        }
      ]
    },
    {
      "id": 676,
      "text": "На самом деле уже существуют продвинутые и проверенные методы ее обработки, использующие нейронные сети, с распознаванием смысла и контекста – BERT (Bidirectional Encoder Representations from Transformers).",
      "terms": [
        {
          "class": "Model",
          "value": "нейронные сети",
          "start_pos": 89
        },
        {
          "class": "Task",
          "value": "распознаванием смысла и контекста",
          "start_pos": 107
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 143
        },
        {
          "class": "Model",
          "value": "Bidirectional Encoder Representations from Transformers",
          "start_pos": 149
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Bidirectional Encoder Representations from Transformers",
            "start_pos": 149
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 143
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Bidirectional Encoder Representations from Transformers",
            "start_pos": 149
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознаванием смысла и контекста",
            "start_pos": 107
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "нейронные сети",
            "start_pos": 89
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознаванием смысла и контекста",
            "start_pos": 107
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 143
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознаванием смысла и контекста",
            "start_pos": 107
          }
        }
      ]
    },
    {
      "id": 677,
      "text": "Перед тем как выбрать нейронные сети, мы протестировали несколько более стандартных архитектур, случайные леса и бустинг.",
      "terms": [
        {
          "class": "Method",
          "value": "нейронные сети",
          "start_pos": 22
        },
        {
          "class": "Method",
          "value": "случайные леса",
          "start_pos": 96
        },
        {
          "class": "Method",
          "value": "бустинг",
          "start_pos": 113
        }
      ],
      "relations": []
    },
    {
      "id": 678,
      "text": "Эта модель была обучена на огромном корпусе русскоязычного текста с двумя задачами – предсказать замаскированное слово в предложениях и предсказать, если одно из предложений следует по смыслу за вторым.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 4
        },
        {
          "class": "Corpus",
          "value": "корпусе русскоязычного текста",
          "start_pos": 36
        },
        {
          "class": "Task",
          "value": "предсказать замаскированное слово в предложениях",
          "start_pos": 85
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 4
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "предсказать замаскированное слово в предложениях",
            "start_pos": 85
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 4
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "корпусе русскоязычного текста",
            "start_pos": 36
          }
        }
      ]
    },
    {
      "id": 679,
      "text": "На обширном корпусе русскоязычного текста данная модель была обучена выполнять две задачи: предсказывать замаскированные слова в предложениях и определять, следует ли одно предложение за другим по смыслу.",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпусе русскоязычного текста",
          "start_pos": 12
        },
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 49
        },
        {
          "class": "Task",
          "value": "предсказывать замаскированные слова в предложениях",
          "start_pos": 91
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 49
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "предсказывать замаскированные слова в предложениях",
            "start_pos": 91
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 49
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "корпусе русскоязычного текста",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 680,
      "text": "Наша задача – дообучить эту языковую модель для нашего приложения (одна модель для классификации и одна – для извлечения сущности).",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 72
        },
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 83
        },
        {
          "class": "Task",
          "value": "извлечения сущности",
          "start_pos": 110
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 72
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 83
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 72
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "извлечения сущности",
            "start_pos": 110
          }
        }
      ]
    },
    {
      "id": 681,
      "text": "результат первой модели – точность 77%",
      "terms": [
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 26
        },
        {
          "class": "Value",
          "value": "77%",
          "start_pos": 35
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 26
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "77%",
            "start_pos": 35
          }
        }
      ]
    },
    {
      "id": 682,
      "text": "Чтобы определить, какие ещё есть потенциальные классы, мы повели так называемое тематическое моделирование, используя несколько подходов: начиная от пробалистических моделей (латентное распределение Дирихле, ARTM) и всё те же нейронные сети (BERT).",
      "terms": [
        {
          "class": "Method",
          "value": "тематическое моделирование",
          "start_pos": 80
        },
        {
          "class": "Model",
          "value": "пробалистических моделей",
          "start_pos": 149
        },
        {
          "class": "Method",
          "value": "латентное распределение Дирихле",
          "start_pos": 175
        },
        {
          "class": "Method",
          "value": "ARTM",
          "start_pos": 208
        },
        {
          "class": "Method",
          "value": "нейронные сети",
          "start_pos": 226
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 242
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "ARTM",
            "start_pos": 208
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "латентное распределение Дирихле",
            "start_pos": 175
          }
        }
      ]
    },
    {
      "id": 683,
      "text": "Теперь нам нужно было использовать некоторые технические способы, чтобы сделать максимально высоким качество модели, которая на новых классах давала точность 72%.",
      "terms": [
        {
          "class": "Method",
          "value": "технические способы",
          "start_pos": 45
        },
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 109
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 149
        },
        {
          "class": "Value",
          "value": "72%",
          "start_pos": 158
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 149
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "72%",
            "start_pos": 158
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 149
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "модели",
            "start_pos": 109
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "технические способы",
            "start_pos": 45
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "модели",
            "start_pos": 109
          }
        }
      ]
    },
    {
      "id": 684,
      "text": "Второе, мы стандартно провели экстенсивный тюнинг гиперпараметров и изменили нашу метрику с точности на F1, чтобы ставить больше акцента на точность по каждому классу, так как общая точность предвзято относится к доминирующим классам.",
      "terms": [
        {
          "class": "Method",
          "value": "экстенсивный тюнинг гиперпараметров",
          "start_pos": 30
        },
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 92
        },
        {
          "class": "Metric",
          "value": "F1",
          "start_pos": 104
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 140
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 182
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 92
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "экстенсивный тюнинг гиперпараметров",
            "start_pos": 30
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "F1",
            "start_pos": 104
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "экстенсивный тюнинг гиперпараметров",
            "start_pos": 30
          }
        }
      ]
    },
    {
      "id": 685,
      "text": "Мы провели экстенсивный тюнинг гиперпараметров и переключили нашу метрику с точности на F1.",
      "terms": [
        {
          "class": "Method",
          "value": "экстенсивный тюнинг гиперпараметров",
          "start_pos": 11
        },
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 76
        },
        {
          "class": "Metric",
          "value": "F1",
          "start_pos": 88
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 76
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "экстенсивный тюнинг гиперпараметров",
            "start_pos": 11
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "F1",
            "start_pos": 88
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "экстенсивный тюнинг гиперпараметров",
            "start_pos": 11
          }
        }
      ]
    },
    {
      "id": 686,
      "text": "Изменение оптимизирующей метрики на F1 позволило алгоритму обучения дольше обучаться, так как почти на каждом этапе происходило улучшение по F1, когда метрика была точность, мы достигали плато гораздо быстрее.",
      "terms": [
        {
          "class": "Metric",
          "value": "F1",
          "start_pos": 36
        },
        {
          "class": "Metric",
          "value": "F1",
          "start_pos": 141
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 164
        }
      ],
      "relations": []
    },
    {
      "id": 687,
      "text": "Изначально на этапе MVP (minimum viable product) мы применяли регулярные выражения для извлечения сущности.",
      "terms": [
        {
          "class": "Object",
          "value": "MVP",
          "start_pos": 20
        },
        {
          "class": "Object",
          "value": "minimum viable product",
          "start_pos": 25
        },
        {
          "class": "Method",
          "value": "регулярные выражения",
          "start_pos": 62
        },
        {
          "class": "Task",
          "value": "извлечения сущности",
          "start_pos": 87
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "регулярные выражения",
            "start_pos": 62
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "извлечения сущности",
            "start_pos": 87
          }
        }
      ]
    },
    {
      "id": 688,
      "text": "Протестировав поведение модели на продовских данных, мы обнаружили, что точность извлечения была около 50%.",
      "terms": [
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 24
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 72
        },
        {
          "class": "Value",
          "value": "50%",
          "start_pos": 103
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 72
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "модели",
            "start_pos": 24
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 72
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "50%",
            "start_pos": 103
          }
        }
      ]
    },
    {
      "id": 689,
      "text": "Мы поняли, что даже извлечение сущности зависит от контекста, и решили использовать BERT.",
      "terms": [
        {
          "class": "Task",
          "value": "извлечение сущности",
          "start_pos": 20
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 84
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 84
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "извлечение сущности",
            "start_pos": 20
          }
        }
      ]
    },
    {
      "id": 690,
      "text": "На вход необходимо представить размеченные данные с маркировкой BIO (beginning, intermediate, O – пустота).",
      "terms": [
        {
          "class": "Object",
          "value": "маркировкой",
          "start_pos": 52
        },
        {
          "class": "Object",
          "value": "BIO",
          "start_pos": 64
        }
      ],
      "relations": []
    },
    {
      "id": 691,
      "text": "Мы производили разметку 800 обращений на DataTurcks: Точность подхода BERT – 94% на этапе обучения, она валидирована на тестовых данных.",
      "terms": [
        {
          "class": "Method",
          "value": "разметку",
          "start_pos": 15
        },
        {
          "class": "Dataset",
          "value": "DataTurcks",
          "start_pos": 41
        },
        {
          "class": "Metric",
          "value": "Точность",
          "start_pos": 53
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 70
        },
        {
          "class": "Value",
          "value": "94%",
          "start_pos": 77
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 70
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "DataTurcks",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "Точность",
            "start_pos": 53
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 70
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "Точность",
            "start_pos": 53
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "94%",
            "start_pos": 77
          }
        }
      ]
    },
    {
      "id": 692,
      "text": "Метод BERT демонстрирует точность 94% на этапе обучения, и эта точность проверена на тестовых данных.",
      "terms": [
        {
          "class": "Method",
          "value": "Метод BERT",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 25
        },
        {
          "class": "Value",
          "value": "94%",
          "start_pos": 34
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 63
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 25
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "Метод BERT",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 25
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "94%",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 693,
      "text": "Это постобработка увеличила точность до 98%.",
      "terms": [
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 28
        },
        {
          "class": "Value",
          "value": "98%",
          "start_pos": 40
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 28
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "98%",
            "start_pos": 40
          }
        }
      ]
    },
    {
      "id": 694,
      "text": "В иностранной литературе можно встретить термин Continuous Learning (CL), который объединяет различные методы использования новых данных для поддержания эффективности моделей.",
      "terms": [
        {
          "class": "Method",
          "value": "Continuous Learning",
          "start_pos": 48
        },
        {
          "class": "Method",
          "value": "CL",
          "start_pos": 69
        },
        {
          "class": "Method",
          "value": "методы использования новых данных для поддержания эффективности моделей",
          "start_pos": 103
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Continuous Learning",
            "start_pos": 48
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "методы использования новых данных для поддержания эффективности моделей",
            "start_pos": 103
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CL",
            "start_pos": 69
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Continuous Learning",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 695,
      "text": "Методы CL были положены в основу пайплайна переобучения.",
      "terms": [
        {
          "class": "Method",
          "value": "CL",
          "start_pos": 7
        }
      ],
      "relations": []
    },
    {
      "id": 696,
      "text": "Ученые Новосибирского государственного технического университета НЭТИ завершают разработку системы распознавания русского жестового языка.",
      "terms": [
        {
          "class": "Organization",
          "value": "Новосибирского государственного технического университета",
          "start_pos": 7
        },
        {
          "class": "Organization",
          "value": "НЭТИ",
          "start_pos": 65
        },
        {
          "class": "Application",
          "value": "системы распознавания",
          "start_pos": 91
        },
        {
          "class": "Object",
          "value": "русского жестового языка",
          "start_pos": 113
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "системы распознавания",
            "start_pos": 91
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "русского жестового языка",
            "start_pos": 113
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "системы распознавания",
            "start_pos": 91
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Новосибирского государственного технического университета",
            "start_pos": 7
          }
        }
      ]
    },
    {
      "id": 697,
      "text": "Точность распознавания составляет 92%.",
      "terms": [
        {
          "class": "Metric",
          "value": "Точность",
          "start_pos": 0
        },
        {
          "class": "Value",
          "value": "92%",
          "start_pos": 34
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Точность",
            "start_pos": 0
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "92%",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 698,
      "text": "«Мы также вели работу над выделением эпентезы (межжестовое движение).",
      "terms": [
        {
          "class": "Task",
          "value": "выделением эпентезы",
          "start_pos": 26
        },
        {
          "class": "Object",
          "value": "межжестовое движение",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "межжестовое движение",
            "start_pos": 47
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "выделением эпентезы",
            "start_pos": 26
          }
        }
      ]
    },
    {
      "id": 699,
      "text": "Сейчас точность выделения жестов в видеопотоке составляет 85—90%.",
      "terms": [
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 7
        },
        {
          "class": "Task",
          "value": "выделения жестов",
          "start_pos": 16
        },
        {
          "class": "Object",
          "value": "видеопотоке",
          "start_pos": 35
        },
        {
          "class": "Value",
          "value": "85—90%",
          "start_pos": 58
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 7
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "выделения жестов",
            "start_pos": 16
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 7
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "85—90%",
            "start_pos": 58
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "видеопотоке",
            "start_pos": 35
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "выделения жестов",
            "start_pos": 16
          }
        }
      ]
    },
    {
      "id": 700,
      "text": "С моделью от OpenAI связано сразу несколько новостей — хорошая и не очень.",
      "terms": [
        {
          "class": "Model",
          "value": "моделью",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 13
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "моделью",
            "start_pos": 2
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 13
          }
        }
      ]
    },
    {
      "id": 701,
      "text": "Сделка OpenAI и Microsoft.",
      "terms": [
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 7
        },
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 16
        }
      ],
      "relations": []
    },
    {
      "id": 702,
      "text": "Начать придется с менее приятной — компания Майкрософт завладела эксклюзивными правами на GPT-3.",
      "terms": [
        {
          "class": "Organization",
          "value": "Майкрософт",
          "start_pos": 44
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 90
        }
      ],
      "relations": []
    },
    {
      "id": 703,
      "text": "Сделка предсказуемо вызвала негодование — Элон Маск, основатель OpenAI, а ныне бывший член совета директоров компании, заявил, что Майкрософт по сути захватили OpenAI.",
      "terms": [
        {
          "class": "Person",
          "value": "Элон Маск",
          "start_pos": 42
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 64
        },
        {
          "class": "Organization",
          "value": "Майкрософт",
          "start_pos": 131
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 160
        }
      ],
      "relations": []
    },
    {
      "id": 704,
      "text": "Дело в том, что OpenAI изначально создавалась как некоммерческая организация с высокой миссией — не позволить искусственному интеллекту оказаться в руках отдельного государства или корпорации.",
      "terms": [
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 16
        },
        {
          "class": "Object",
          "value": "искусственному интеллекту",
          "start_pos": 110
        }
      ],
      "relations": []
    },
    {
      "id": 705,
      "text": "ruGPT3 от Сбера.",
      "terms": [
        {
          "class": "Model",
          "value": "ruGPT3",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Сбера",
          "start_pos": 10
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruGPT3",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбера",
            "start_pos": 10
          }
        }
      ]
    },
    {
      "id": 706,
      "text": "Теперь к более приятной новости — исследователи из Сбера выложили в открытый доступ модель, которая повторяет архитектуру GPT-3 и основана на коде GPT-2 и, самое главное, обучена на русскоязычном корпусе.",
      "terms": [
        {
          "class": "Organization",
          "value": "Сбера",
          "start_pos": 51
        },
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 84
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 122
        },
        {
          "class": "Model",
          "value": "GPT-2",
          "start_pos": 147
        },
        {
          "class": "Lang",
          "value": "русскоязычном",
          "start_pos": 182
        },
        {
          "class": "Corpus",
          "value": "корпусе",
          "start_pos": 196
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 84
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "корпусе",
            "start_pos": 196
          }
        }
      ]
    },
    {
      "id": 707,
      "text": "Если коммерческие организации можно оправдать тем, что код часто вплетен в инфраструктуру проектов, то что говорить про исследовательские институты и некоммерческие компании вроде DeepMind и OpenAI?",
      "terms": [
        {
          "class": "Organization",
          "value": "DeepMind",
          "start_pos": 180
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 191
        }
      ],
      "relations": []
    },
    {
      "id": 708,
      "text": "Платформа для видеозвонков Maxine объединяет в себе целый зоопарк ML-алгоритмов.",
      "terms": [
        {
          "class": "Application",
          "value": "Maxine",
          "start_pos": 27
        },
        {
          "class": "Method",
          "value": "ML-алгоритмов",
          "start_pos": 66
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "ML-алгоритмов",
            "start_pos": 66
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Maxine",
            "start_pos": 27
          }
        }
      ]
    },
    {
      "id": 709,
      "text": "Maxine, платформа для видеозвонков, включает в себя разнообразные алгоритмы машинного обучения.",
      "terms": [
        {
          "class": "Application",
          "value": "Maxine",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "алгоритмы машинного обучения",
          "start_pos": 66
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "алгоритмы машинного обучения",
            "start_pos": 66
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Maxine",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 710,
      "text": "Google Meet поделились кейсом создания своего алгоритма для качественного удаления фона на основе фреймворка от Mediapipe (который умеет отслеживание движение глаз, головы и рук).",
      "terms": [
        {
          "class": "Organization",
          "value": "Google Meet",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "алгоритма для качественного удаления",
          "start_pos": 46
        },
        {
          "class": "Object",
          "value": "фона",
          "start_pos": 83
        },
        {
          "class": "Library",
          "value": "фреймворка",
          "start_pos": 98
        },
        {
          "class": "Organization",
          "value": "Mediapipe",
          "start_pos": 112
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "фреймворка",
            "start_pos": 98
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "фона",
            "start_pos": 83
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритма для качественного удаления",
            "start_pos": 46
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google Meet",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "фреймворка",
            "start_pos": 98
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Mediapipe",
            "start_pos": 112
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритма для качественного удаления",
            "start_pos": 46
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "фона",
            "start_pos": 83
          }
        }
      ]
    },
    {
      "id": 711,
      "text": "Google также запустил новую функцию для сервиса YouTube Stories на iOS, который позволяет улучшать качество речи.",
      "terms": [
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "YouTube Stories",
          "start_pos": 48
        },
        {
          "class": "Environment",
          "value": "iOS",
          "start_pos": 67
        },
        {
          "class": "Object",
          "value": "речи",
          "start_pos": 108
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "iOS",
            "start_pos": 67
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "YouTube Stories",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 712,
      "text": "Для решения этой проблемы требуется архитектура, которая позволяет GPT-3 анализировать содержание письма и оценивать, какая информация актуальна для ответа.",
      "terms": [
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 67
        },
        {
          "class": "Task",
          "value": "анализировать содержание письма",
          "start_pos": 73
        },
        {
          "class": "Task",
          "value": "оценивать, какая информация актуальна",
          "start_pos": 107
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 67
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализировать содержание письма",
            "start_pos": 73
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 67
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "оценивать, какая информация актуальна",
            "start_pos": 107
          }
        }
      ]
    },
    {
      "id": 713,
      "text": "OpenAI представила модель машинного обучения GPT-3, обученную на 175 млрд параметров, в июне 2020 года.",
      "terms": [
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 45
        },
        {
          "class": "Date",
          "value": "июне 2020 года",
          "start_pos": 88
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "июне 2020 года",
            "start_pos": 88
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 45
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 45
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 714,
      "text": "В июне 2020 года OpenAI представила модель машинного обучения GPT-3, обученную на 175 миллиардах параметров.",
      "terms": [
        {
          "class": "Date",
          "value": "июне 2020 года",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 17
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 62
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "июне 2020 года",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 62
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GPT-3",
            "start_pos": 62
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 715,
      "text": "В отличие от предшественников GPT-2 и GPT-1 ее исходный код или обучающий набор данных решили не открывать.",
      "terms": [
        {
          "class": "Model",
          "value": "GPT-2",
          "start_pos": 30
        },
        {
          "class": "Model",
          "value": "GPT-1",
          "start_pos": 38
        }
      ],
      "relations": []
    },
    {
      "id": 716,
      "text": "Модель уже попытались применить в медицинской сфере для общения с пациентами, но результаты эксперимента оказались неутешительными.",
      "terms": [
        {
          "class": "Model",
          "value": "Модель",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "медицинской сфере",
          "start_pos": 34
        },
        {
          "class": "Activity",
          "value": "эксперимента",
          "start_pos": 92
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Модель",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "медицинской сфере",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 717,
      "text": "Между тем создатели проекта GPT-Neo от EleutherAI решили воссоздать аналог GPT-3, но с открытым исходным кодом.",
      "terms": [
        {
          "class": "Activity",
          "value": "GPT-Neo",
          "start_pos": 28
        },
        {
          "class": "Organization",
          "value": "EleutherAI",
          "start_pos": 39
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 75
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "GPT-Neo",
            "start_pos": 28
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "EleutherAI",
            "start_pos": 39
          }
        }
      ]
    },
    {
      "id": 718,
      "text": "Тем временем, разработчики проекта GPT-Neo от EleutherAI решили разработать свой аналог GPT-3 с открытым исходным кодом.",
      "terms": [
        {
          "class": "Activity",
          "value": "GPT-Neo",
          "start_pos": 35
        },
        {
          "class": "Organization",
          "value": "EleutherAI",
          "start_pos": 46
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 88
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "GPT-Neo",
            "start_pos": 35
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "EleutherAI",
            "start_pos": 46
          }
        }
      ]
    },
    {
      "id": 719,
      "text": "Однако только сейчас мы немного приблизились к сюжетам фантастических фильмов: можем попросить Алису убавить громкость, Google Assistant — заказать такси или Siri — завести будильник.",
      "terms": [
        {
          "class": "Application",
          "value": "Алису",
          "start_pos": 95
        },
        {
          "class": "Task",
          "value": "убавить громкость",
          "start_pos": 101
        },
        {
          "class": "Application",
          "value": "Google Assistant",
          "start_pos": 120
        },
        {
          "class": "Task",
          "value": "заказать такси",
          "start_pos": 139
        },
        {
          "class": "Application",
          "value": "Siri",
          "start_pos": 158
        },
        {
          "class": "Task",
          "value": "завести будильник",
          "start_pos": 165
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Алису",
            "start_pos": 95
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "убавить громкость",
            "start_pos": 101
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Assistant",
            "start_pos": 120
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "заказать такси",
            "start_pos": 139
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Siri",
            "start_pos": 158
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "завести будильник",
            "start_pos": 165
          }
        }
      ]
    },
    {
      "id": 720,
      "text": "Технологии языкового процессинга востребованы в разработках, связанных с построением искусственного интеллекта: в поисковых системах, для извлечения фактов, оценки тональности текста, машинного перевода и диалога.",
      "terms": [
        {
          "class": "Method",
          "value": "Технологии языкового процессинга",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "поисковых системах",
          "start_pos": 114
        },
        {
          "class": "Task",
          "value": "извлечения фактов",
          "start_pos": 138
        },
        {
          "class": "Task",
          "value": "оценки тональности текста",
          "start_pos": 157
        },
        {
          "class": "Science",
          "value": "машинного перевода",
          "start_pos": 184
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Технологии языкового процессинга",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "поисковых системах",
            "start_pos": 114
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Технологии языкового процессинга",
            "start_pos": 0
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "извлечения фактов",
            "start_pos": 138
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Технологии языкового процессинга",
            "start_pos": 0
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "оценки тональности текста",
            "start_pos": 157
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Технологии языкового процессинга",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного перевода",
            "start_pos": 184
          }
        }
      ]
    },
    {
      "id": 721,
      "text": "Технологии обработки естественного языка широко используются в разработках, связанных с созданием искусственного интеллекта, включая применение в поисковых системах и машинном переводе.",
      "terms": [
        {
          "class": "Method",
          "value": "Технологии обработки естественного языка",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "поисковых системах",
          "start_pos": 146
        },
        {
          "class": "Science",
          "value": "машинном переводе",
          "start_pos": 167
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Технологии обработки естественного языка",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "поисковых системах",
            "start_pos": 146
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Технологии обработки естественного языка",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинном переводе",
            "start_pos": 167
          }
        }
      ]
    },
    {
      "id": 722,
      "text": "Первые разговоры об обработке естественного языка компьютером начались еще в 30-е годы XX-го века с философских рассуждений Айера — он предлагал отличать разумного человека от глупой машины с помощью эмпирического теста.",
      "terms": [
        {
          "class": "Task",
          "value": "обработке естественного языка",
          "start_pos": 20
        },
        {
          "class": "Date",
          "value": "30-е годы XX-го века",
          "start_pos": 77
        },
        {
          "class": "Person",
          "value": "Айера",
          "start_pos": 124
        }
      ],
      "relations": []
    },
    {
      "id": 723,
      "text": "В 1950 году Алан Тьюринг в философском журнале Mind предложил такой тест, где судья должен определить, с кем он ведет диалог: с человеком или компьютером.",
      "terms": [
        {
          "class": "Date",
          "value": "1950",
          "start_pos": 2
        },
        {
          "class": "Person",
          "value": "Алан Тьюринг",
          "start_pos": 12
        },
        {
          "class": "InfoResource",
          "value": "Mind",
          "start_pos": 47
        },
        {
          "class": "Method",
          "value": "тест",
          "start_pos": 68
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1950",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "тест",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "тест",
            "start_pos": 68
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Алан Тьюринг",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 724,
      "text": "В 1950 году Алан Тьюринг предложил такой тест в философском журнале \"Mind\", в котором судье необходимо определить, ведет ли он диалог с человеком или с компьютером.",
      "terms": [
        {
          "class": "Date",
          "value": "1950",
          "start_pos": 2
        },
        {
          "class": "Person",
          "value": "Алан Тьюринг",
          "start_pos": 12
        },
        {
          "class": "Method",
          "value": "тест",
          "start_pos": 41
        },
        {
          "class": "InfoResource",
          "value": "Mind",
          "start_pos": 69
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1950",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "тест",
            "start_pos": 41
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "тест",
            "start_pos": 41
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Алан Тьюринг",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 725,
      "text": "В 1954 году Джорджтаунский университет совместно с компанией IBM продемонстрировали программу машинного перевода с русского на английский, которая работала на базе словаря из 250 слов и набора из 6 грамматических правил.",
      "terms": [
        {
          "class": "Date",
          "value": "1954",
          "start_pos": 2
        },
        {
          "class": "Organization",
          "value": "Джорджтаунский университет",
          "start_pos": 12
        },
        {
          "class": "Organization",
          "value": "IBM",
          "start_pos": 61
        },
        {
          "class": "Application",
          "value": "программу машинного перевода",
          "start_pos": 84
        },
        {
          "class": "Lang",
          "value": "русского",
          "start_pos": 115
        },
        {
          "class": "Lang",
          "value": "английский",
          "start_pos": 127
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1954",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "программу машинного перевода",
            "start_pos": 84
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "программу машинного перевода",
            "start_pos": 84
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Джорджтаунский университет",
            "start_pos": 12
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "программу машинного перевода",
            "start_pos": 84
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "IBM",
            "start_pos": 61
          }
        }
      ]
    },
    {
      "id": 726,
      "text": "Параллельно с попытками научить компьютер переводить текст, ученые и целые университеты думали над созданием робота, способного имитировать речевое поведение человека.",
      "terms": [
        {
          "class": "Task",
          "value": "имитировать речевое поведение человека",
          "start_pos": 128
        }
      ],
      "relations": []
    },
    {
      "id": 727,
      "text": "Первой успешной реализацией чат-бота стал виртуальный собеседник ELIZA, написанный в 1966 году Джозефом Вейценбаумом.",
      "terms": [
        {
          "class": "Application",
          "value": "виртуальный собеседник",
          "start_pos": 42
        },
        {
          "class": "Application",
          "value": "ELIZA",
          "start_pos": 65
        },
        {
          "class": "Date",
          "value": "1966 году",
          "start_pos": 85
        },
        {
          "class": "Person",
          "value": "Джозефом Вейценбаумом",
          "start_pos": 95
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1966 году",
            "start_pos": 85
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "ELIZA",
            "start_pos": 65
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ELIZA",
            "start_pos": 65
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Джозефом Вейценбаумом",
            "start_pos": 95
          }
        }
      ]
    },
    {
      "id": 728,
      "text": "Элиза пародировала поведение психотерапевта, выделяя значимые слова из фразы собеседника и задавая встречный вопрос.",
      "terms": [
        {
          "class": "Application",
          "value": "Элиза",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 729,
      "text": "Можно считать, что это был первый чат-бот, построенный на правилах (rule-based bot), и он положил начало целому классу таких систем.",
      "terms": [
        {
          "class": "Application",
          "value": "чат-бот",
          "start_pos": 34
        },
        {
          "class": "Application",
          "value": "rule-based bot",
          "start_pos": 68
        }
      ],
      "relations": []
    },
    {
      "id": 730,
      "text": "Без Элизы не появились бы такие программы-собеседники, как Cleverbot, WeChat Xiaoice, Eugene Goostman — формально прошедший тест Тьюринга в 2014 году, — и даже Siri, Jarvis и Alexa.",
      "terms": [
        {
          "class": "Application",
          "value": "Элизы",
          "start_pos": 4
        },
        {
          "class": "Application",
          "value": "Cleverbot",
          "start_pos": 59
        },
        {
          "class": "Application",
          "value": "WeChat Xiaoice",
          "start_pos": 70
        },
        {
          "class": "Application",
          "value": "Eugene Goostman",
          "start_pos": 86
        },
        {
          "class": "Method",
          "value": "тест Тьюринга",
          "start_pos": 124
        },
        {
          "class": "Date",
          "value": "2014",
          "start_pos": 140
        },
        {
          "class": "Application",
          "value": "Siri",
          "start_pos": 160
        },
        {
          "class": "Application",
          "value": "Jarvis",
          "start_pos": 166
        },
        {
          "class": "Application",
          "value": "Alexa",
          "start_pos": 175
        }
      ],
      "relations": []
    },
    {
      "id": 731,
      "text": "В 1968 году Терри Виноградом на языке LISP была разработана программа SHRDLU.",
      "terms": [
        {
          "class": "Date",
          "value": "1968",
          "start_pos": 2
        },
        {
          "class": "Person",
          "value": "Терри Виноградом",
          "start_pos": 12
        },
        {
          "class": "Environment",
          "value": "LISP",
          "start_pos": 38
        },
        {
          "class": "Application",
          "value": "SHRDLU",
          "start_pos": 70
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "LISP",
            "start_pos": 38
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "SHRDLU",
            "start_pos": 70
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "1968",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "SHRDLU",
            "start_pos": 70
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "SHRDLU",
            "start_pos": 70
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Терри Виноградом",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 732,
      "text": "Следующим шагом в развитии чат-ботов стала программа A.L.I.C.E., для которой Ричард Уоллес разработал специальный язык разметки — AIML (англ. Artificial Intelligence Markup Language).",
      "terms": [
        {
          "class": "Application",
          "value": "A.L.I.C.E.",
          "start_pos": 53
        },
        {
          "class": "Person",
          "value": "Ричард Уоллес",
          "start_pos": 77
        },
        {
          "class": "Method",
          "value": "разметки",
          "start_pos": 119
        },
        {
          "class": "Method",
          "value": "AIML",
          "start_pos": 130
        },
        {
          "class": "Method",
          "value": "Artificial Intelligence Markup Language",
          "start_pos": 142
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 130
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 53
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 142
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 53
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 130
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ричард Уоллес",
            "start_pos": 77
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 142
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ричард Уоллес",
            "start_pos": 77
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "A.L.I.C.E.",
            "start_pos": 53
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Ричард Уоллес",
            "start_pos": 77
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Artificial Intelligence Markup Language",
            "start_pos": 142
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "AIML",
            "start_pos": 130
          }
        }
      ]
    },
    {
      "id": 733,
      "text": "Разговоры о нейронных сетях и глубоком обучении ходили уже в 90-е годы, а первый нейрокомпьютер «Марк-1» появился вообще в 1958 году.",
      "terms": [
        {
          "class": "Method",
          "value": "нейронных сетях",
          "start_pos": 12
        },
        {
          "class": "Application",
          "value": "нейрокомпьютер",
          "start_pos": 81
        },
        {
          "class": "Application",
          "value": "Марк-1",
          "start_pos": 97
        },
        {
          "class": "Date",
          "value": "1958 году",
          "start_pos": 123
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1958 году",
            "start_pos": 123
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "Марк-1",
            "start_pos": 97
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "1958 году",
            "start_pos": 123
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "нейрокомпьютер",
            "start_pos": 81
          }
        }
      ]
    },
    {
      "id": 734,
      "text": "1970 г. Машинный перевод на основе правил (англ. RBMT) был первой попыткой научить машину переводить.",
      "terms": [
        {
          "class": "Date",
          "value": "1970 г.",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "Машинный перевод на основе правил",
          "start_pos": 8
        },
        {
          "class": "Method",
          "value": ". RBMT",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1970 г.",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "Машинный перевод на основе правил",
            "start_pos": 8
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "1970 г.",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": ". RBMT",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": ". RBMT",
            "start_pos": 47
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Машинный перевод на основе правил",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 735,
      "text": "1984 г. Машинный перевод на основе примеров (англ. EBMT) был способен переводить даже совсем не похожие друг на друга языки, где задавать какие-то правила было бесполезно.",
      "terms": [
        {
          "class": "Date",
          "value": "1984 г.",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "Машинный перевод на основе примеров",
          "start_pos": 8
        },
        {
          "class": "Method",
          "value": "EBMT",
          "start_pos": 51
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1984 г.",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "Машинный перевод на основе примеров",
            "start_pos": 8
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "1984 г.",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "EBMT",
            "start_pos": 51
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "EBMT",
            "start_pos": 51
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Машинный перевод на основе примеров",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 736,
      "text": "1990 г. Статистический машинный перевод (англ. SMT) в эпоху развития интернета позволил использовать не только готовые языковые корпуса, но даже книги и вольно переведенные статьи.",
      "terms": [
        {
          "class": "Date",
          "value": "1990 г.",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "Статистический машинный перевод",
          "start_pos": 8
        },
        {
          "class": "Method",
          "value": "SMT",
          "start_pos": 47
        },
        {
          "class": "Object",
          "value": "языковые корпуса",
          "start_pos": 119
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "1990 г.",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "Статистический машинный перевод",
            "start_pos": 8
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "1990 г.",
            "start_pos": 0
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Method",
            "value": "SMT",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SMT",
            "start_pos": 47
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Статистический машинный перевод",
            "start_pos": 8
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Статистический машинный перевод",
            "start_pos": 8
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "языковые корпуса",
            "start_pos": 119
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SMT",
            "start_pos": 47
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "языковые корпуса",
            "start_pos": 119
          }
        }
      ]
    },
    {
      "id": 737,
      "text": "Статистические методы и сейчас активно используются в языковом процессинге.",
      "terms": [
        {
          "class": "Method",
          "value": "Статистические методы",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "языковом процессинге",
          "start_pos": 54
        }
      ],
      "relations": []
    },
    {
      "id": 738,
      "text": "По мере развития обработки естественного языка множество задач решалось классическими статистическими методами и множеством правил, однако проблему нечеткости и неоднозначности в языке это не решало.",
      "terms": [
        {
          "class": "Task",
          "value": "обработки естественного языка",
          "start_pos": 17
        },
        {
          "class": "Method",
          "value": "статистическими методами",
          "start_pos": 86
        },
        {
          "class": "Task",
          "value": "проблему нечеткости и неоднозначности",
          "start_pos": 139
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "статистическими методами",
            "start_pos": 86
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "обработки естественного языка",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 739,
      "text": "Так родился статистический метод анализа текста word2vec (англ. Word to vector).",
      "terms": [
        {
          "class": "Method",
          "value": "статистический метод анализа текста",
          "start_pos": 12
        },
        {
          "class": "Method",
          "value": "word2vec",
          "start_pos": 48
        },
        {
          "class": "Method",
          "value": "Word to vector",
          "start_pos": 64
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "статистический метод анализа текста",
            "start_pos": 12
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "word2vec",
            "start_pos": 48
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Word to vector",
            "start_pos": 64
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "word2vec",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 740,
      "text": "Под эти критерии отлично подходит рекуррентная нейронная сеть (RNN), однако по мере увеличения расстояния между связанными частями текста необходимо увеличивать и размер RNN, из-за чего падает качество обработки информации.",
      "terms": [
        {
          "class": "Method",
          "value": "рекуррентная нейронная сеть",
          "start_pos": 34
        },
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 63
        },
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 170
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "RNN",
            "start_pos": 63
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "рекуррентная нейронная сеть",
            "start_pos": 34
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "RNN",
            "start_pos": 170
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "рекуррентная нейронная сеть",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 741,
      "text": "Эту проблему решает сеть LSTM (англ. Long short-term memory).",
      "terms": [
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 25
        },
        {
          "class": "Method",
          "value": "Long short-term memory",
          "start_pos": 37
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Long short-term memory",
            "start_pos": 37
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 25
          }
        }
      ]
    },
    {
      "id": 742,
      "text": "Если говорить о языке Python, который часто используется для анализа данных, то это NLTK и Spacy.",
      "terms": [
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 22
        },
        {
          "class": "Method",
          "value": "анализа данных",
          "start_pos": 61
        },
        {
          "class": "Application",
          "value": "NLTK",
          "start_pos": 84
        },
        {
          "class": "Application",
          "value": "Spacy",
          "start_pos": 91
        }
      ],
      "relations": []
    },
    {
      "id": 743,
      "text": "Крупные компании также принимают участие в разработке библиотек для NLP, как например NLP Architect от Intel или PyTorch от исследователей из Facebook и Uber.",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 68
        },
        {
          "class": "Library",
          "value": "NLP Architect",
          "start_pos": 86
        },
        {
          "class": "Organization",
          "value": "Intel",
          "start_pos": 103
        },
        {
          "class": "Library",
          "value": "PyTorch",
          "start_pos": 113
        },
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 142
        },
        {
          "class": "Organization",
          "value": "Uber",
          "start_pos": 153
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "NLP Architect",
            "start_pos": 86
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch",
            "start_pos": 113
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "NLP Architect",
            "start_pos": 86
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Intel",
            "start_pos": 103
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch",
            "start_pos": 113
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook",
            "start_pos": 142
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch",
            "start_pos": 113
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Uber",
            "start_pos": 153
          }
        }
      ]
    },
    {
      "id": 744,
      "text": "Большие компании также активно участвуют в разработке библиотек для обработки естественного языка, таких как NLP Architect от Intel и PyTorch от исследователей из Facebook и Uber.",
      "terms": [
        {
          "class": "Science",
          "value": "обработки естественного языка",
          "start_pos": 68
        },
        {
          "class": "Library",
          "value": "NLP Architect",
          "start_pos": 109
        },
        {
          "class": "Organization",
          "value": "Intel",
          "start_pos": 126
        },
        {
          "class": "Library",
          "value": "PyTorch",
          "start_pos": 134
        },
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 163
        },
        {
          "class": "Organization",
          "value": "Uber",
          "start_pos": 174
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "NLP Architect",
            "start_pos": 109
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "обработки естественного языка",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch",
            "start_pos": 134
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "обработки естественного языка",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "NLP Architect",
            "start_pos": 109
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Intel",
            "start_pos": 126
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch",
            "start_pos": 134
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook",
            "start_pos": 163
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch",
            "start_pos": 134
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Uber",
            "start_pos": 174
          }
        }
      ]
    },
    {
      "id": 745,
      "text": "Направление b2c не единственное, где можно применять чат-ботов.",
      "terms": [
        {
          "class": "Science",
          "value": "b2c",
          "start_pos": 12
        }
      ],
      "relations": []
    },
    {
      "id": 746,
      "text": "Прорывы #DeepPavlov в 2019 году: обзор и итоги года Московский физико-технический институт (МФТИ).",
      "terms": [
        {
          "class": "Model",
          "value": "#DeepPavlov",
          "start_pos": 8
        },
        {
          "class": "Date",
          "value": "2019",
          "start_pos": 22
        },
        {
          "class": "Organization",
          "value": "Московский физико-технический институт",
          "start_pos": 52
        },
        {
          "class": "Organization",
          "value": "МФТИ",
          "start_pos": 92
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "МФТИ",
            "start_pos": 92
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Московский физико-технический институт",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "#DeepPavlov",
            "start_pos": 8
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Московский физико-технический институт",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "#DeepPavlov",
            "start_pos": 8
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "МФТИ",
            "start_pos": 92
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "2019",
            "start_pos": 22
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "#DeepPavlov",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 747,
      "text": "Модель DeepPavlov была разработана командой из Московского физико-технического института (МФТИ).",
      "terms": [
        {
          "class": "Model",
          "value": "DeepPavlov",
          "start_pos": 7
        },
        {
          "class": "Organization",
          "value": "Московского физико-технического института",
          "start_pos": 47
        },
        {
          "class": "Organization",
          "value": "МФТИ",
          "start_pos": 90
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "МФТИ",
            "start_pos": 90
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Московского физико-технического института",
            "start_pos": 47
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 7
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "МФТИ",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 7
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Московского физико-технического института",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 748,
      "text": "Команда исследователей из Московского физико-технического института (МФТИ) представила модель DeepPavlov.",
      "terms": [
        {
          "class": "Organization",
          "value": "Московского физико-технического института",
          "start_pos": 26
        },
        {
          "class": "Organization",
          "value": "МФТИ",
          "start_pos": 69
        },
        {
          "class": "Model",
          "value": "DeepPavlov",
          "start_pos": 94
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "МФТИ",
            "start_pos": 69
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Московского физико-технического института",
            "start_pos": 26
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 94
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "МФТИ",
            "start_pos": 69
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 94
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Московского физико-технического института",
            "start_pos": 26
          }
        }
      ]
    },
    {
      "id": 749,
      "text": "Библиотеке #DeepPavlov, на минуточку, уже два года, и мы рады, что наше сообщество с каждым днем растет.",
      "terms": [
        {
          "class": "Library",
          "value": "#DeepPavlov",
          "start_pos": 11
        }
      ],
      "relations": []
    },
    {
      "id": 750,
      "text": "Увеличилось количество коммерческих решений за счет state-of-art технологий, реализованных в DeepPavlov, в разных отраслях от ритейла до промышленности.",
      "terms": [
        {
          "class": "Method",
          "value": "state-of-art",
          "start_pos": 52
        },
        {
          "class": "Library",
          "value": "DeepPavlov",
          "start_pos": 93
        }
      ],
      "relations": []
    },
    {
      "id": 751,
      "text": "Вышел первый релиз DeepPavlov Agent.",
      "terms": [
        {
          "class": "Application",
          "value": "DeepPavlov Agent",
          "start_pos": 19
        }
      ],
      "relations": []
    },
    {
      "id": 752,
      "text": "DeepPavlov решает проблемы такие как: классификация текста, исправление опечаток, распознавание именованных сущностей, ответы на вопросы по базе знаний и многие другие.",
      "terms": [
        {
          "class": "Model",
          "value": "DeepPavlov",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "классификация текста",
          "start_pos": 38
        },
        {
          "class": "Task",
          "value": "исправление опечаток",
          "start_pos": 60
        },
        {
          "class": "Task",
          "value": "распознавание именованных сущностей",
          "start_pos": 82
        },
        {
          "class": "Task",
          "value": "ответы на вопросы",
          "start_pos": 119
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификация текста",
            "start_pos": 38
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "исправление опечаток",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавание именованных сущностей",
            "start_pos": 82
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DeepPavlov",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "ответы на вопросы",
            "start_pos": 119
          }
        }
      ]
    },
    {
      "id": 753,
      "text": "Библиотека поддерживает платформы Linux и Windows.",
      "terms": [
        {
          "class": "Library",
          "value": "Библиотека",
          "start_pos": 0
        },
        {
          "class": "Environment",
          "value": "Linux",
          "start_pos": 34
        },
        {
          "class": "Environment",
          "value": "Windows",
          "start_pos": 42
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Linux",
            "start_pos": 34
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Библиотека",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Windows",
            "start_pos": 42
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Библиотека",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 754,
      "text": "В настоящее время современные результаты во многих задачах были достигнуты благодаря применению моделей на основе BERT.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 114
        }
      ],
      "relations": []
    },
    {
      "id": 755,
      "text": "Команда DeepPavlov интегрировала BERT в три последующие задачи: классификация текста, распознавание именованных сущностей и ответы на вопросы.",
      "terms": [
        {
          "class": "Organization",
          "value": "DeepPavlov",
          "start_pos": 8
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 33
        },
        {
          "class": "Task",
          "value": "классификация текста",
          "start_pos": 64
        },
        {
          "class": "Task",
          "value": "распознавание именованных сущностей",
          "start_pos": 86
        },
        {
          "class": "Task",
          "value": "ответы на вопросы",
          "start_pos": 124
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 33
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "классификация текста",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 33
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификация текста",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 33
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавание именованных сущностей",
            "start_pos": 86
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 33
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "ответы на вопросы",
            "start_pos": 124
          }
        }
      ]
    },
    {
      "id": 756,
      "text": "Модель классификации текста на основе BERT DeepPavlov служит, например, для решения проблемы обнаружения оскорблений.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT DeepPavlov",
          "start_pos": 38
        },
        {
          "class": "Task",
          "value": "обнаружения оскорблений",
          "start_pos": 93
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BERT DeepPavlov",
            "start_pos": 38
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "обнаружения оскорблений",
            "start_pos": 93
          }
        }
      ]
    },
    {
      "id": 757,
      "text": "В дополнение к моделям классификации текста DeepPavlov содержит модель на основе BERT для распознавания именованных сущностей (NER).",
      "terms": [
        {
          "class": "Task",
          "value": "классификации текста",
          "start_pos": 23
        },
        {
          "class": "Library",
          "value": "DeepPavlov",
          "start_pos": 44
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 81
        },
        {
          "class": "Task",
          "value": "распознавания именованных сущностей",
          "start_pos": 90
        },
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 127
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "DeepPavlov",
            "start_pos": 44
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации текста",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "DeepPavlov",
            "start_pos": 44
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания именованных сущностей",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "DeepPavlov",
            "start_pos": 44
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 127
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 81
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации текста",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 81
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "DeepPavlov",
            "start_pos": 44
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NER",
            "start_pos": 127
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "распознавания именованных сущностей",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 81
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознавания именованных сущностей",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 81
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации текста",
            "start_pos": 23
          }
        }
      ]
    },
    {
      "id": 758,
      "text": "Например, модель может извлечь важную информацию из резюме, чтобы облегчить работу специалистов по кадрам.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 10
        },
        {
          "class": "Task",
          "value": "извлечь важную информацию",
          "start_pos": 23
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "извлечь важную информацию",
            "start_pos": 23
          }
        }
      ]
    },
    {
      "id": 759,
      "text": "Кроме того, NER может использоваться для идентификации соответствующих объектов в запросах клиентов, таких как спецификации продуктов, названия компаний или данные о филиалах компании.",
      "terms": [
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 12
        },
        {
          "class": "Task",
          "value": "идентификации соответствующих объектов",
          "start_pos": 41
        }
      ],
      "relations": []
    },
    {
      "id": 760,
      "text": "Команда DeepPavlov обучила модель NER на англоязычном корпусе OntoNotes, который имеет 19 типов разметки, включая PER (человек), LOC (местоположение), ORG (организация) и многие другие.",
      "terms": [
        {
          "class": "Organization",
          "value": "DeepPavlov",
          "start_pos": 8
        },
        {
          "class": "Model",
          "value": "модель NER",
          "start_pos": 27
        },
        {
          "class": "Corpus",
          "value": "OntoNotes",
          "start_pos": 62
        },
        {
          "class": "Method",
          "value": "разметки",
          "start_pos": 96
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель NER",
            "start_pos": 27
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "OntoNotes",
            "start_pos": 62
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель NER",
            "start_pos": 27
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "DeepPavlov",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 761,
      "text": "Одним из основных переломных моментов в этой области стал выпуск Стэнфордского набора данных для ответов на вопросы (SQuAD).",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Стэнфордского набора данных для ответов на вопросы",
          "start_pos": 65
        },
        {
          "class": "InfoResource",
          "value": "SQuAD",
          "start_pos": 117
        }
      ],
      "relations": []
    },
    {
      "id": 762,
      "text": "Недавно был выпущен Стэнфордский набор данных для ответов на вопросы (SQuAD).",
      "terms": [
        {
          "class": "InfoResource",
          "value": "Стэнфордский набор данных для ответов на вопросы",
          "start_pos": 20
        },
        {
          "class": "InfoResource",
          "value": "SQuAD",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 763,
      "text": "Набор данных SQuAD привел к появлению бесчисленных подходов к решению задачи вопросно-ответных систем.",
      "terms": [
        {
          "class": "InfoResource",
          "value": "SQuAD",
          "start_pos": 13
        },
        {
          "class": "Method",
          "value": "подходов",
          "start_pos": 51
        },
        {
          "class": "Task",
          "value": "задачи вопросно-ответных систем",
          "start_pos": 70
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "подходов",
            "start_pos": 51
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "задачи вопросно-ответных систем",
            "start_pos": 70
          }
        }
      ]
    },
    {
      "id": 764,
      "text": "Одной из наиболее успешных является модель DeepPavlov BERT.",
      "terms": [
        {
          "class": "Model",
          "value": "DeepPavlov BERT",
          "start_pos": 43
        }
      ],
      "relations": []
    },
    {
      "id": 765,
      "text": "Чтобы использовать модель QA на основе BERT с DeepPavlov, необходимо следующее.",
      "terms": [
        {
          "class": "Model",
          "value": "QA",
          "start_pos": 26
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 39
        },
        {
          "class": "Model",
          "value": "DeepPavlov",
          "start_pos": 46
        }
      ],
      "relations": []
    },
    {
      "id": 766,
      "text": "DeepPavlov Agent — платформа для создания многозадачных чат-ботов.",
      "terms": [
        {
          "class": "Application",
          "value": "DeepPavlov Agent",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 767,
      "text": "При разработке разговорных агентов в основном применяется модульная архитектура для целенаправленного диалога, при котором разворачивается сценарий.",
      "terms": [
        {
          "class": "Application",
          "value": "разговорных агентов",
          "start_pos": 15
        },
        {
          "class": "Method",
          "value": "модульная архитектура",
          "start_pos": 58
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "модульная архитектура",
            "start_pos": 58
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "разговорных агентов",
            "start_pos": 15
          }
        }
      ]
    },
    {
      "id": 768,
      "text": "Для решения этой задачи в октябре 2019 года вышел первый релиз DeepPavlov Agent 1.0 — платформы для создания многозадачных чат-ботов.",
      "terms": [
        {
          "class": "Task",
          "value": "задачи",
          "start_pos": 17
        },
        {
          "class": "Date",
          "value": "2019 года",
          "start_pos": 34
        },
        {
          "class": "Application",
          "value": "DeepPavlov Agent 1.0",
          "start_pos": 63
        },
        {
          "class": "Task",
          "value": "создания многозадачных чат-ботов",
          "start_pos": 100
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2019 года",
            "start_pos": 34
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "DeepPavlov Agent 1.0",
            "start_pos": 63
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "DeepPavlov Agent 1.0",
            "start_pos": 63
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создания многозадачных чат-ботов",
            "start_pos": 100
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "DeepPavlov Agent 1.0",
            "start_pos": 63
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "задачи",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 769,
      "text": "Агент помогает разработчикам производственных чатботов организовать несколько NLP моделей в одном конвейере.",
      "terms": [
        {
          "class": "Task",
          "value": "организовать несколько NLP моделей",
          "start_pos": 55
        }
      ],
      "relations": []
    },
    {
      "id": 770,
      "text": "Чтобы упростить работу с предобученными NLP моделями из DeepPavlov, в сентябрь 2019 года был запущен SaaS сервис.",
      "terms": [
        {
          "class": "Model",
          "value": "NLP моделями",
          "start_pos": 40
        },
        {
          "class": "Library",
          "value": "DeepPavlov",
          "start_pos": 56
        },
        {
          "class": "Date",
          "value": "сентябрь 2019 года",
          "start_pos": 70
        },
        {
          "class": "Application",
          "value": "SaaS сервис",
          "start_pos": 101
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "сентябрь 2019 года",
            "start_pos": 70
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "SaaS сервис",
            "start_pos": 101
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "NLP моделями",
            "start_pos": 40
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "SaaS сервис",
            "start_pos": 101
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "NLP моделями",
            "start_pos": 40
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "DeepPavlov",
            "start_pos": 56
          }
        }
      ]
    },
    {
      "id": 771,
      "text": "В сентябре 2019 года был запущен сервис SaaS для упрощения взаимодействия с предварительно обученными моделями NLP от DeepPavlov.",
      "terms": [
        {
          "class": "Date",
          "value": "сентябре 2019 года",
          "start_pos": 2
        },
        {
          "class": "Application",
          "value": "SaaS",
          "start_pos": 40
        },
        {
          "class": "Model",
          "value": "моделями NLP",
          "start_pos": 102
        },
        {
          "class": "Library",
          "value": "DeepPavlov",
          "start_pos": 118
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "сентябре 2019 года",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "SaaS",
            "start_pos": 40
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "моделями NLP",
            "start_pos": 102
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "SaaS",
            "start_pos": 40
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "моделями NLP",
            "start_pos": 102
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "DeepPavlov",
            "start_pos": 118
          }
        }
      ]
    },
    {
      "id": 772,
      "text": "DeepPavlov Cloud позволяет анализировать текст, а также хранить документы в облачном хранилище.",
      "terms": [
        {
          "class": "Application",
          "value": "DeepPavlov Cloud",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "анализировать текст",
          "start_pos": 27
        },
        {
          "class": "Task",
          "value": "хранить документы",
          "start_pos": 56
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "DeepPavlov Cloud",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализировать текст",
            "start_pos": 27
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "DeepPavlov Cloud",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "хранить документы",
            "start_pos": 56
          }
        }
      ]
    },
    {
      "id": 773,
      "text": "Оценка состояния диалога (DST — Dialogue State Traking) является основным компонентом в таких диалоговых системах.",
      "terms": [
        {
          "class": "Task",
          "value": "Оценка состояния диалога",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "DST",
          "start_pos": 26
        },
        {
          "class": "Task",
          "value": "Dialogue State Traking",
          "start_pos": 32
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "DST",
            "start_pos": 26
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Оценка состояния диалога",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Dialogue State Traking",
            "start_pos": 32
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Оценка состояния диалога",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 774,
      "text": "DST отвечает за перевод высказываний на человеческом языке в семантическое представление языка, в частности, за извлечение намерений (intets) и пар слот-значение (slot, value), соответствующих цели пользователя.",
      "terms": [
        {
          "class": "Method",
          "value": "DST",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "перевод высказываний",
          "start_pos": 16
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "DST",
            "start_pos": 0
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "перевод высказываний",
            "start_pos": 16
          }
        }
      ]
    },
    {
      "id": 775,
      "text": "В ходе участия команды в DSTC8 была разработана модель GOLOMB (GOaL-Oriented Multi-task BERT-based dialogue state tracker) — целеориентированная мультизадачная модель на базе BERT для отслеживания состояния диалога.",
      "terms": [
        {
          "class": "Model",
          "value": "GOLOMB",
          "start_pos": 55
        },
        {
          "class": "Model",
          "value": "GOaL-Oriented Multi-task BERT-based dialogue state tracker",
          "start_pos": 63
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 175
        },
        {
          "class": "Task",
          "value": "отслеживания состояния диалога",
          "start_pos": 184
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GOLOMB",
            "start_pos": 55
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 175
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GOaL-Oriented Multi-task BERT-based dialogue state tracker",
            "start_pos": 63
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 175
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GOaL-Oriented Multi-task BERT-based dialogue state tracker",
            "start_pos": 63
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "отслеживания состояния диалога",
            "start_pos": 184
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GOLOMB",
            "start_pos": 55
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "отслеживания состояния диалога",
            "start_pos": 184
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GOaL-Oriented Multi-task BERT-based dialogue state tracker",
            "start_pos": 63
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "GOLOMB",
            "start_pos": 55
          }
        }
      ]
    },
    {
      "id": 776,
      "text": "В рамках участия в DSTC8 команда разработала целеориентированную мультизадачную модель отслеживания состояния диалога с использованием BERT, названную GOLOMB (GOaL-Oriented Multi-task BERT-based dialogue state tracker).",
      "terms": [
        {
          "class": "Task",
          "value": "отслеживания состояния диалога",
          "start_pos": 87
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 135
        },
        {
          "class": "Model",
          "value": "GOLOMB",
          "start_pos": 151
        },
        {
          "class": "Model",
          "value": "GOaL-Oriented Multi-task BERT-based dialogue state tracker",
          "start_pos": 159
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GOLOMB",
            "start_pos": 151
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "отслеживания состояния диалога",
            "start_pos": 87
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GOaL-Oriented Multi-task BERT-based dialogue state tracker",
            "start_pos": 159
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "отслеживания состояния диалога",
            "start_pos": 87
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GOaL-Oriented Multi-task BERT-based dialogue state tracker",
            "start_pos": 159
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "GOLOMB",
            "start_pos": 151
          }
        }
      ]
    },
    {
      "id": 777,
      "text": "Для предсказания состояния диалога модель решает несколько классификационных задач и задачу поиска подстроки.",
      "terms": [
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 35
        },
        {
          "class": "Task",
          "value": "классификационных задач",
          "start_pos": 59
        },
        {
          "class": "Task",
          "value": "задачу поиска подстроки",
          "start_pos": 85
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 35
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификационных задач",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 35
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "задачу поиска подстроки",
            "start_pos": 85
          }
        }
      ]
    },
    {
      "id": 778,
      "text": "В скором времени данная модель появится библиотеке DeepPavlov.",
      "terms": [
        {
          "class": "Model",
          "value": "DeepPavlov",
          "start_pos": 51
        }
      ],
      "relations": []
    },
    {
      "id": 779,
      "text": "Как было сказано ранее, DeepPavlov поставляется с несколькими предобученными компонентами, работающими на TensorFlow и Keras.",
      "terms": [
        {
          "class": "Application",
          "value": "DeepPavlov",
          "start_pos": 24
        },
        {
          "class": "Application",
          "value": "TensorFlow",
          "start_pos": 106
        },
        {
          "class": "Application",
          "value": "Keras",
          "start_pos": 119
        }
      ],
      "relations": []
    },
    {
      "id": 780,
      "text": "На основании триггера на определенные ключевые слова она сможет определять, к примеру, признаки обмана, мошенничества.",
      "terms": [
        {
          "class": "Object",
          "value": "ключевые слова",
          "start_pos": 38
        },
        {
          "class": "Object",
          "value": "признаки обмана",
          "start_pos": 87
        }
      ],
      "relations": []
    },
    {
      "id": 781,
      "text": "То есть, сформировав некоторый корпус слов-триггеров, вполне возможно классифицировать сайты по их текстовому содержанию.",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпус слов-триггеров",
          "start_pos": 31
        },
        {
          "class": "Task",
          "value": "классифицировать",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 782,
      "text": "Задача распознавания текста относится к сфере обработки естественного языка или NLP (natural language processing).",
      "terms": [
        {
          "class": "Task",
          "value": "Задача распознавания текста",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "обработки естественного языка",
          "start_pos": 46
        },
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 80
        },
        {
          "class": "Science",
          "value": "natural language processing",
          "start_pos": 85
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "Задача распознавания текста",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "обработки естественного языка",
            "start_pos": 46
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Задача распознавания текста",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 80
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Задача распознавания текста",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "natural language processing",
            "start_pos": 85
          }
        },
        {
          "term1": {
            "class": "Science",
            "value": "natural language processing",
            "start_pos": 85
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "обработки естественного языка",
            "start_pos": 46
          }
        },
        {
          "term1": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 80
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "обработки естественного языка",
            "start_pos": 46
          }
        }
      ]
    },
    {
      "id": 783,
      "text": "Распознавание текста входит в область обработки естественного языка, или NLP (Natural Language Processing).",
      "terms": [
        {
          "class": "Task",
          "value": "Распознавание текста",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "область обработки естественного языка",
          "start_pos": 30
        },
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 73
        },
        {
          "class": "Science",
          "value": "Natural Language Processing",
          "start_pos": 78
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "Распознавание текста",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "область обработки естественного языка",
            "start_pos": 30
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Распознавание текста",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 73
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "Распознавание текста",
            "start_pos": 0
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "Natural Language Processing",
            "start_pos": 78
          }
        },
        {
          "term1": {
            "class": "Science",
            "value": "Natural Language Processing",
            "start_pos": 78
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "область обработки естественного языка",
            "start_pos": 30
          }
        },
        {
          "term1": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 73
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "область обработки естественного языка",
            "start_pos": 30
          }
        }
      ]
    },
    {
      "id": 784,
      "text": "NLP — направление искусственного интеллекта, нацеленное на обработку и анализ данных на естественном языке и обучение машин взаимодействию с людьми [1].",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "искусственного интеллекта",
          "start_pos": 18
        },
        {
          "class": "Method",
          "value": "анализ данных",
          "start_pos": 71
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализ данных",
            "start_pos": 71
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "анализ данных",
            "start_pos": 71
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "искусственного интеллекта",
            "start_pos": 18
          }
        }
      ]
    },
    {
      "id": 785,
      "text": "Такой подход называется методом вложения слов (word embedding).",
      "terms": [
        {
          "class": "Method",
          "value": "методом вложения слов",
          "start_pos": 24
        },
        {
          "class": "Method",
          "value": "word embedding",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "word embedding",
            "start_pos": 47
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "методом вложения слов",
            "start_pos": 24
          }
        }
      ]
    },
    {
      "id": 786,
      "text": "Используя данные, состоящие из таких векторов, мы можем применять различные методы Machine Learning.",
      "terms": [
        {
          "class": "Science",
          "value": "Machine Learning",
          "start_pos": 83
        }
      ],
      "relations": []
    },
    {
      "id": 787,
      "text": "И поскольку искусственные нейронные сети лучшим образом справляются с векторно-матричными вычислениями, то выбор в их пользу становиться очевидным.",
      "terms": [
        {
          "class": "Method",
          "value": "искусственные нейронные сети",
          "start_pos": 12
        },
        {
          "class": "Method",
          "value": "векторно-матричными вычислениями",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 788,
      "text": "Искусственная нейронная сеть — это математическая модель, а также ее программное или аппаратное воплощение, построенные по принципу организации и функционирования биологических нейронных сетей — сетей нервных клеток живого организма.",
      "terms": [
        {
          "class": "Method",
          "value": "Искусственная нейронная сеть",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "математическая модель",
          "start_pos": 35
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "математическая модель",
            "start_pos": 35
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "Искусственная нейронная сеть",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 789,
      "text": "Современные модели представляют собой так называемые глубокие модели.",
      "terms": [
        {
          "class": "Model",
          "value": "глубокие модели",
          "start_pos": 53
        }
      ],
      "relations": []
    },
    {
      "id": 790,
      "text": "И в ее решении наилучшие метрики точности были достигнуты рекуррентными нейронными сетями, LSTM (сети с долгой краткосрочной памятью).",
      "terms": [
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 33
        },
        {
          "class": "Method",
          "value": "рекуррентными нейронными сетями",
          "start_pos": 58
        },
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 91
        },
        {
          "class": "Method",
          "value": "сети с долгой краткосрочной памятью",
          "start_pos": 97
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "рекуррентными нейронными сетями",
            "start_pos": 58
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 91
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 33
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "рекуррентными нейронными сетями",
            "start_pos": 58
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 33
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 91
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 33
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "сети с долгой краткосрочной памятью",
            "start_pos": 97
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "сети с долгой краткосрочной памятью",
            "start_pos": 97
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 91
          }
        }
      ]
    },
    {
      "id": 791,
      "text": "Лучшие показатели точности в ее решении были достигнуты с использованием рекуррентных нейронных сетей, таких как LSTM (сети с долгой краткосрочной памятью).",
      "terms": [
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 18
        },
        {
          "class": "Method",
          "value": "рекуррентных нейронных сетей",
          "start_pos": 73
        },
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 113
        },
        {
          "class": "Method",
          "value": "сети с долгой краткосрочной памятью",
          "start_pos": 119
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "рекуррентных нейронных сетей",
            "start_pos": 73
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 113
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 18
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "рекуррентных нейронных сетей",
            "start_pos": 73
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 18
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 113
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "сети с долгой краткосрочной памятью",
            "start_pos": 119
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 113
          }
        }
      ]
    },
    {
      "id": 792,
      "text": "Позже свое превосходство в этой нише обрели NLP-модели-трансформеры.",
      "terms": [
        {
          "class": "Model",
          "value": "NLP-модели-трансформеры",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 793,
      "text": "Описание упомянутых рекуррентных нейросетей (RNN), LSTM и GRU выходит за рамки темы статьи.",
      "terms": [
        {
          "class": "Method",
          "value": "рекуррентных нейросетей",
          "start_pos": 20
        },
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 45
        },
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 51
        },
        {
          "class": "Method",
          "value": "GRU",
          "start_pos": 58
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "RNN",
            "start_pos": 45
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "рекуррентных нейросетей",
            "start_pos": 20
          }
        }
      ]
    },
    {
      "id": 794,
      "text": "Однако RNN способны фиксировать зависимости только в одном направлении языка.",
      "terms": [
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 7
        },
        {
          "class": "Task",
          "value": "фиксировать зависимости",
          "start_pos": 20
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "RNN",
            "start_pos": 7
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "фиксировать зависимости",
            "start_pos": 20
          }
        }
      ]
    },
    {
      "id": 795,
      "text": "Кроме этого, RNN не очень хороши в захвате долгосрочных зависимостей.",
      "terms": [
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 13
        },
        {
          "class": "Task",
          "value": "захвате долгосрочных зависимостей",
          "start_pos": 35
        }
      ],
      "relations": []
    },
    {
      "id": 796,
      "text": "LSTM избегают проблемы долговременной зависимости, запоминая значения как на короткие, так и на длинные промежутки времени.",
      "terms": [
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 797,
      "text": "Это объясняется тем, что LSTM не использует функцию активации внутри своих рекуррентных компонентов.",
      "terms": [
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 25
        },
        {
          "class": "Method",
          "value": "функцию активации",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 798,
      "text": "LSTM часто используются в машинном переводе и в задачах генерирования текстов на естественном языке.",
      "terms": [
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "машинном переводе",
          "start_pos": 26
        },
        {
          "class": "Task",
          "value": "генерирования текстов",
          "start_pos": 56
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинном переводе",
            "start_pos": 26
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 0
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "генерирования текстов",
            "start_pos": 56
          }
        }
      ]
    },
    {
      "id": 799,
      "text": "Часто в машинном переводе и задачах генерации текстов на естественном языке применяют LSTM.",
      "terms": [
        {
          "class": "Science",
          "value": "машинном переводе",
          "start_pos": 8
        },
        {
          "class": "Task",
          "value": "генерации текстов",
          "start_pos": 36
        },
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 86
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 86
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинном переводе",
            "start_pos": 8
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 86
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "генерации текстов",
            "start_pos": 36
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "генерации текстов",
            "start_pos": 36
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "машинном переводе",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 800,
      "text": "Прежде чем использовать такой мощный и в то же время сложный инструмент, наша команда протестировала и более простые NLP-методы машинного обучения, в том числе «наивный байесовский классификатор», алгоритмы, использующие bag-of-words («мешок слов» — метод представления слов) и tf-idf (метрика определения частоты вхождения слов), а также простейшие модели нейронных сетей, состоящие из небольшого количества скрытых слоев.",
      "terms": [
        {
          "class": "Method",
          "value": "NLP-методы машинного обучения",
          "start_pos": 117
        },
        {
          "class": "Method",
          "value": "наивный байесовский классификатор",
          "start_pos": 161
        },
        {
          "class": "Method",
          "value": "bag-of-words",
          "start_pos": 221
        },
        {
          "class": "Method",
          "value": "мешок слов",
          "start_pos": 236
        },
        {
          "class": "Method",
          "value": "метод представления слов",
          "start_pos": 250
        },
        {
          "class": "Metric",
          "value": "tf-idf",
          "start_pos": 278
        },
        {
          "class": "Metric",
          "value": "метрика определения частоты вхождения слов",
          "start_pos": 286
        }
      ],
      "relations": []
    },
    {
      "id": 801,
      "text": "BERT, или Bidirectional Encoder Representations from Transformers, — нейросетевая модель-трансформер от Google, на которой сегодня строится большинство инструментов автоматической обработки языка.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "Bidirectional Encoder Representations from Transformers",
          "start_pos": 10
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 104
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Bidirectional Encoder Representations from Transformers",
            "start_pos": 10
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 104
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 104
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Bidirectional Encoder Representations from Transformers",
            "start_pos": 10
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 802,
      "text": "BERT, сокращение от Bidirectional Encoder Representations from Transformers, представляет собой нейросетевую модель-трансформер от Google, на базе которой в настоящее время разрабатывается большинство средств автоматической обработки языка.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "Bidirectional Encoder Representations from Transformers",
          "start_pos": 20
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 131
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Bidirectional Encoder Representations from Transformers",
            "start_pos": 20
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 131
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 131
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Bidirectional Encoder Representations from Transformers",
            "start_pos": 20
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 803,
      "text": "Релиз BERT в 2018 году стал некоторой переломной точкой в развитии NLP-моделей.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 6
        },
        {
          "class": "Date",
          "value": "2018 году",
          "start_pos": 13
        },
        {
          "class": "Model",
          "value": "NLP-моделей",
          "start_pos": 67
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2018 году",
            "start_pos": 13
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 6
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "NLP-моделей",
            "start_pos": 67
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 6
          }
        }
      ]
    },
    {
      "id": 804,
      "text": "Выход модели BERT в 2018 году стал своеобразным переломным моментом в развитии моделей обработки естественного языка (NLP).",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 13
        },
        {
          "class": "Date",
          "value": "2018 году",
          "start_pos": 20
        },
        {
          "class": "Model",
          "value": "моделей обработки естественного языка",
          "start_pos": 79
        },
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 118
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2018 году",
            "start_pos": 20
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 13
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "моделей обработки естественного языка",
            "start_pos": 79
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 13
          }
        }
      ]
    },
    {
      "id": 805,
      "text": "Его появлению предшествовал ряд недавних разработок в области обработки естественного языка (BERT, ELMO и Ко в картинках — как в NLP пришло трансферное обучение): Semi-supervised Sequence learning (Andrew Dai и Quoc Le), ELMo (Matthew Peters и исследователи из AI2 и UW CSE), ULMFiT (Jeremy Howard и Sebastian Ruder), OpenAI Transformer (исследователи OpenAI Radford, Narasimhan, Salimans, и Sutskever) и Трансформер (Vaswani et al).",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 93
        },
        {
          "class": "Model",
          "value": "ELMO",
          "start_pos": 99
        },
        {
          "class": "Model",
          "value": "Ко",
          "start_pos": 106
        },
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 129
        },
        {
          "class": "Method",
          "value": "трансферное обучение",
          "start_pos": 140
        },
        {
          "class": "Method",
          "value": "Semi-supervised Sequence learning",
          "start_pos": 163
        },
        {
          "class": "Person",
          "value": "Andrew Dai",
          "start_pos": 198
        },
        {
          "class": "Person",
          "value": "Quoc Le",
          "start_pos": 211
        },
        {
          "class": "Model",
          "value": "ELMo",
          "start_pos": 221
        },
        {
          "class": "Person",
          "value": "Matthew Peters",
          "start_pos": 227
        },
        {
          "class": "Organization",
          "value": "AI2",
          "start_pos": 261
        },
        {
          "class": "Organization",
          "value": "UW CSE",
          "start_pos": 267
        },
        {
          "class": "Model",
          "value": "ULMFiT",
          "start_pos": 276
        },
        {
          "class": "Person",
          "value": "Jeremy Howard",
          "start_pos": 284
        },
        {
          "class": "Person",
          "value": "Sebastian Ruder",
          "start_pos": 300
        },
        {
          "class": "Model",
          "value": "OpenAI Transformer",
          "start_pos": 318
        },
        {
          "class": "Organization",
          "value": "OpenAI Radford",
          "start_pos": 352
        },
        {
          "class": "Person",
          "value": "Narasimhan",
          "start_pos": 368
        },
        {
          "class": "Person",
          "value": "Salimans",
          "start_pos": 380
        },
        {
          "class": "Person",
          "value": "Sutskever",
          "start_pos": 392
        },
        {
          "class": "Model",
          "value": "Трансформер",
          "start_pos": 405
        },
        {
          "class": "Person",
          "value": "Vaswani",
          "start_pos": 418
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ELMo",
            "start_pos": 221
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Matthew Peters",
            "start_pos": 227
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "OpenAI Transformer",
            "start_pos": 318
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI Radford",
            "start_pos": 352
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Semi-supervised Sequence learning",
            "start_pos": 163
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 129
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Трансформер",
            "start_pos": 405
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Vaswani",
            "start_pos": 418
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "OpenAI Transformer",
            "start_pos": 318
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Sutskever",
            "start_pos": 392
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "OpenAI Transformer",
            "start_pos": 318
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Salimans",
            "start_pos": 380
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "OpenAI Transformer",
            "start_pos": 318
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Narasimhan",
            "start_pos": 368
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "OpenAI Transformer",
            "start_pos": 318
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "UW CSE",
            "start_pos": 267
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ULMFiT",
            "start_pos": 276
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Sebastian Ruder",
            "start_pos": 300
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ULMFiT",
            "start_pos": 276
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Jeremy Howard",
            "start_pos": 284
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ELMo",
            "start_pos": 221
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "AI2",
            "start_pos": 261
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ELMo",
            "start_pos": 221
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "UW CSE",
            "start_pos": 267
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ELMo",
            "start_pos": 221
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Matthew Peters",
            "start_pos": 227
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Semi-supervised Sequence learning",
            "start_pos": 163
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Andrew Dai",
            "start_pos": 198
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Semi-supervised Sequence learning",
            "start_pos": 163
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Quoc Le",
            "start_pos": 211
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "трансферное обучение",
            "start_pos": 140
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 129
          }
        }
      ]
    },
    {
      "id": 806,
      "text": "Трансформеры в машинном обучении — это семейство архитектур нейронных сетей, общая идея которых основана на так называемом «самовнимании» (self-attention).",
      "terms": [
        {
          "class": "Model",
          "value": "Трансформеры",
          "start_pos": 0
        },
        {
          "class": "Science",
          "value": "машинном обучении",
          "start_pos": 15
        },
        {
          "class": "Method",
          "value": "самовнимании",
          "start_pos": 124
        },
        {
          "class": "Method",
          "value": "self-attention",
          "start_pos": 139
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "самовнимании",
            "start_pos": 124
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "Трансформеры",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "self-attention",
            "start_pos": 139
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "Трансформеры",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "самовнимании",
            "start_pos": 124
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинном обучении",
            "start_pos": 15
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "self-attention",
            "start_pos": 139
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинном обучении",
            "start_pos": 15
          }
        }
      ]
    },
    {
      "id": 807,
      "text": "Однако алгоритм Self-attention не сразу поймет смысл предложения.",
      "terms": [
        {
          "class": "Method",
          "value": "Self-attention",
          "start_pos": 16
        }
      ],
      "relations": []
    },
    {
      "id": 808,
      "text": "По своей сути BERT — это обученный стек энкодеров Трансформера.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 14
        },
        {
          "class": "Model",
          "value": "энкодеров Трансформера",
          "start_pos": 40
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "энкодеров Трансформера",
            "start_pos": 40
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 14
          }
        }
      ]
    },
    {
      "id": 809,
      "text": "Разработкой и обучением модели BERT занималась целая группа исследователей Google AI Language на многомиллионном наборе слов на разных языках (более 100).",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 31
        },
        {
          "class": "Organization",
          "value": "Google AI Language",
          "start_pos": 75
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 31
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google AI Language",
            "start_pos": 75
          }
        }
      ]
    },
    {
      "id": 810,
      "text": "И мы дообучили BERT распознавать текстовое содержимое сайтов по 63 категориям (медицина, здоровье, видео, интернет-магазины, юмористические сайты, эротика, оружие, секты, криминал и пр.).",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 15
        },
        {
          "class": "Science",
          "value": "медицина",
          "start_pos": 79
        }
      ],
      "relations": []
    },
    {
      "id": 811,
      "text": "Smart-Cat на первом этапе проводит их предобработку.",
      "terms": [
        {
          "class": "Application",
          "value": "Smart-Cat",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 812,
      "text": "Для удобства работы с категоризатором Smart-Cat мы создали специальный Telegram-бот.",
      "terms": [
        {
          "class": "Application",
          "value": "Smart-Cat",
          "start_pos": 38
        },
        {
          "class": "Application",
          "value": "Telegram-бот",
          "start_pos": 71
        }
      ],
      "relations": []
    },
    {
      "id": 813,
      "text": "После своей работы BERT-bot отправит CSV-таблицу.",
      "terms": [
        {
          "class": "Application",
          "value": "BERT-bot",
          "start_pos": 19
        }
      ],
      "relations": []
    },
    {
      "id": 814,
      "text": "Но, как я уже сказал ранее, такие модели могут применяться не только в задачах классификации текста.",
      "terms": [
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 34
        },
        {
          "class": "Task",
          "value": "классификации текста",
          "start_pos": 79
        }
      ],
      "relations": []
    },
    {
      "id": 815,
      "text": "Участникам предлагалось определить потенциальные заболевания коров по реальным жалобам людей из открытых источников, а также научиться выделять из текстов симптомы заболеваний (NER - Named Entity Recognition).",
      "terms": [
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 177
        },
        {
          "class": "Task",
          "value": "Named Entity Recognition",
          "start_pos": 183
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "Named Entity Recognition",
            "start_pos": 183
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 177
          }
        }
      ]
    },
    {
      "id": 816,
      "text": "Эта статья будет интересна не только тем, кто специализируется в NLP (Natural Language Processing), но и начинающим исследователям данных.",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 65
        },
        {
          "class": "Science",
          "value": "Natural Language Processing",
          "start_pos": 70
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "Natural Language Processing",
            "start_pos": 70
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 65
          }
        }
      ]
    },
    {
      "id": 817,
      "text": "Эта статья будет интересна специалистам в области обработки естественного языка (Natural Language Processing, NLP).",
      "terms": [
        {
          "class": "Science",
          "value": "области обработки естественного языка",
          "start_pos": 42
        },
        {
          "class": "Science",
          "value": "Natural Language Processing",
          "start_pos": 81
        },
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 110
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Science",
            "value": "Natural Language Processing",
            "start_pos": 81
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "области обработки естественного языка",
            "start_pos": 42
          }
        },
        {
          "term1": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 110
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Science",
            "value": "области обработки естественного языка",
            "start_pos": 42
          }
        }
      ]
    },
    {
      "id": 818,
      "text": "Спаны - это участки текста, которые содержат в себе определенный смысл.",
      "terms": [
        {
          "class": "Object",
          "value": "Спаны",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "текста",
          "start_pos": 20
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "текста",
            "start_pos": 20
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "Спаны",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 819,
      "text": "Программа для разметки YEDDA и процесс разметки.",
      "terms": [
        {
          "class": "Method",
          "value": "разметки",
          "start_pos": 14
        },
        {
          "class": "Application",
          "value": "YEDDA",
          "start_pos": 23
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "разметки",
            "start_pos": 14
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "YEDDA",
            "start_pos": 23
          }
        }
      ]
    },
    {
      "id": 820,
      "text": "Так как задача является составной, то и метрика состояла из двух компонентов с весом 0.8 для задачи классификации и 0.2 для задачи NER.",
      "terms": [
        {
          "class": "Metric",
          "value": "метрика",
          "start_pos": 40
        },
        {
          "class": "Value",
          "value": "0.8",
          "start_pos": 85
        },
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 100
        },
        {
          "class": "Value",
          "value": "0.2",
          "start_pos": 116
        },
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 131
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "метрика",
            "start_pos": 40
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 100
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "метрика",
            "start_pos": 40
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 131
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "метрика",
            "start_pos": 40
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.8",
            "start_pos": 85
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "метрика",
            "start_pos": 40
          },
          "predicate": "hasValue",
          "term2": {
            "class": "Value",
            "value": "0.2",
            "start_pos": 116
          }
        }
      ]
    },
    {
      "id": 821,
      "text": "В задаче классификации использовался logloss, вычисляемый как среднее значение метрики sklearn.metrics.log_loss по классам болезней.",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 9
        },
        {
          "class": "Metric",
          "value": "logloss",
          "start_pos": 37
        },
        {
          "class": "Metric",
          "value": "sklearn.metrics.log_loss",
          "start_pos": 87
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "logloss",
            "start_pos": 37
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "sklearn.metrics.log_loss",
            "start_pos": 87
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 822,
      "text": "В задаче NER использовался span-based F1-score, рассчитываемый следующим образом: для каждого текста берутся предсказанные индексы начала и конца размеченных признаков болезни, по ним выделяются из текста токены (отдельные слова, разделенные пробелом) и сравниваются с истинной (экспертной) разметкой.",
      "terms": [
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 9
        },
        {
          "class": "Metric",
          "value": "span-based F1-score",
          "start_pos": 27
        },
        {
          "class": "Object",
          "value": "текста",
          "start_pos": 94
        },
        {
          "class": "Object",
          "value": "индексы",
          "start_pos": 123
        },
        {
          "class": "Object",
          "value": "токены",
          "start_pos": 205
        },
        {
          "class": "Object",
          "value": "слова",
          "start_pos": 223
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "текста",
            "start_pos": 94
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "индексы",
            "start_pos": 123
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "токены",
            "start_pos": 205
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "слова",
            "start_pos": 223
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "span-based F1-score",
            "start_pos": 27
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 9
          }
        }
      ]
    },
    {
      "id": 823,
      "text": "Код для подсчета метрики span-based F1-score.",
      "terms": [
        {
          "class": "Metric",
          "value": "span-based F1-score",
          "start_pos": 25
        }
      ],
      "relations": []
    },
    {
      "id": 824,
      "text": "Этим решением стало использование классификатора CatBoost, который прямо из коробки может обрабатывать текстовые фичи.",
      "terms": [
        {
          "class": "Method",
          "value": "CatBoost",
          "start_pos": 49
        }
      ],
      "relations": []
    },
    {
      "id": 825,
      "text": "Решение для задачи распознавания симптомов мы давать не стали, чтобы участники Data Science чемпионата могли покреативить.",
      "terms": [
        {
          "class": "Task",
          "value": "задачи распознавания симптомов",
          "start_pos": 12
        },
        {
          "class": "Activity",
          "value": "Data Science чемпионата",
          "start_pos": 79
        }
      ],
      "relations": []
    },
    {
      "id": 826,
      "text": "Во-первых, конкретно для этого соревнования наиболее эффективный подход - это доразметка спанов тренировочных данных для задачи NER.",
      "terms": [
        {
          "class": "Method",
          "value": "доразметка спанов тренировочных данных",
          "start_pos": 78
        },
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 128
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "доразметка спанов тренировочных данных",
            "start_pos": 78
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 128
          }
        }
      ]
    },
    {
      "id": 827,
      "text": "Во-вторых, участники использовали базовые подходы для NLP-задач: удаление стоп-слов и знаков пунктуации, приведение к нижнему регистру, стемминг и лемматизация.",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 54
        },
        {
          "class": "Method",
          "value": "стемминг",
          "start_pos": 136
        },
        {
          "class": "Method",
          "value": "лемматизация",
          "start_pos": 147
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "стемминг",
            "start_pos": 136
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 54
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "лемматизация",
            "start_pos": 147
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 54
          }
        }
      ]
    },
    {
      "id": 828,
      "text": "Более же продвинутым подходом является аугментация данных.",
      "terms": [
        {
          "class": "Method",
          "value": "аугментация данных",
          "start_pos": 39
        }
      ],
      "relations": []
    },
    {
      "id": 829,
      "text": "Один из возможных способов аугментации текста - перифраз текста.",
      "terms": [
        {
          "class": "Task",
          "value": "аугментации текста",
          "start_pos": 27
        },
        {
          "class": "Method",
          "value": "перифраз текста",
          "start_pos": 48
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "перифраз текста",
            "start_pos": 48
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "аугментации текста",
            "start_pos": 27
          }
        }
      ]
    },
    {
      "id": 830,
      "text": "Примером данного решения является использование парафрайзера на основе “rut5-base-paraphraser” из библиотеки huggingface.",
      "terms": [
        {
          "class": "Model",
          "value": "парафрайзера",
          "start_pos": 48
        },
        {
          "class": "Model",
          "value": "rut5-base-paraphraser",
          "start_pos": 72
        },
        {
          "class": "Library",
          "value": "huggingface",
          "start_pos": 109
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "парафрайзера",
            "start_pos": 48
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "huggingface",
            "start_pos": 109
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "парафрайзера",
            "start_pos": 48
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "rut5-base-paraphraser",
            "start_pos": 72
          }
        }
      ]
    },
    {
      "id": 831,
      "text": "Реализуется данный метод аналогично с предыдущим, как модель можно использовать “LaBSE-en-ru”.",
      "terms": [
        {
          "class": "Model",
          "value": "LaBSE-en-ru",
          "start_pos": 81
        }
      ],
      "relations": []
    },
    {
      "id": 832,
      "text": "Сначала решается задача выделения симптомов (NER), после чего в текстах убираются все слова, не являющиеся симптомами.",
      "terms": [
        {
          "class": "Task",
          "value": "задача выделения симптомов",
          "start_pos": 17
        },
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 45
        },
        {
          "class": "Object",
          "value": "текстах",
          "start_pos": 64
        },
        {
          "class": "Object",
          "value": "слова",
          "start_pos": 86
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "текстах",
            "start_pos": 64
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "текстах",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "текстах",
            "start_pos": 64
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "задача выделения симптомов",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "текстах",
            "start_pos": 64
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 45
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "слова",
            "start_pos": 86
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "задача выделения симптомов",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "слова",
            "start_pos": 86
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 45
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NER",
            "start_pos": 45
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "задача выделения симптомов",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 833,
      "text": "Базовым вариантом эмбеддингов является TF-IDF, который зависит от частоты употребления слова в документе.",
      "terms": [
        {
          "class": "Object",
          "value": "эмбеддингов",
          "start_pos": 18
        },
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 39
        },
        {
          "class": "Metric",
          "value": "частоты употребления слова",
          "start_pos": 66
        }
      ],
      "relations": []
    },
    {
      "id": 834,
      "text": "И чтобы его улучшить, можно использовать эмбеддинги предобученных моделей, таких как Word2Vec, FastText и тд.",
      "terms": [
        {
          "class": "Object",
          "value": "эмбеддинги предобученных моделей",
          "start_pos": 41
        },
        {
          "class": "Model",
          "value": "Word2Vec",
          "start_pos": 85
        },
        {
          "class": "Model",
          "value": "FastText",
          "start_pos": 95
        }
      ],
      "relations": []
    },
    {
      "id": 835,
      "text": "В частности, в одном из лучших решений использовался необычный FastText, предобученный на корпусе текстов RuDReC, который содержит отзывы потребителей на русском языке о фармацевтической продукции.",
      "terms": [
        {
          "class": "Model",
          "value": "FastText",
          "start_pos": 63
        },
        {
          "class": "Dataset",
          "value": "RuDReC",
          "start_pos": 106
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 154
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "RuDReC",
            "start_pos": 106
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 154
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "FastText",
            "start_pos": 63
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 154
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "FastText",
            "start_pos": 63
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "RuDReC",
            "start_pos": 106
          }
        }
      ]
    },
    {
      "id": 836,
      "text": "Напомним, что алгоритм работы с трансформерами можно представить следующим образом: сначала тексты преобразовываются токенизатором, далее обучается модель-трансформер.",
      "terms": [
        {
          "class": "Model",
          "value": "трансформерами",
          "start_pos": 32
        },
        {
          "class": "Method",
          "value": "токенизатором",
          "start_pos": 117
        },
        {
          "class": "Model",
          "value": "модель-трансформер",
          "start_pos": 148
        }
      ],
      "relations": []
    },
    {
      "id": 837,
      "text": "Если же говорить о выборе моделей, то наилучшие результаты были получены следующими из них: RuBERT-base, RuBERT-large, LaBSE-en-ru.",
      "terms": [
        {
          "class": "Model",
          "value": "RuBERT-base",
          "start_pos": 92
        },
        {
          "class": "Model",
          "value": "RuBERT-large",
          "start_pos": 105
        },
        {
          "class": "Model",
          "value": "LaBSE-en-ru",
          "start_pos": 119
        }
      ],
      "relations": []
    },
    {
      "id": 838,
      "text": "Предположим, что вы и так слышали о моделях семейства BERT (в предыдущей статье мы описывали, как применяем BERT в других задачах), а вот LaBSE - выбор совершенно неочевидный.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 54
        },
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 108
        },
        {
          "class": "Model",
          "value": "LaBSE",
          "start_pos": 138
        }
      ],
      "relations": []
    },
    {
      "id": 839,
      "text": "Далее слова в тестовом наборе текстов также приводятся к векторам и сравниваются со словами из тренировочной разметки при помощи косинусной близости.",
      "terms": [
        {
          "class": "Metric",
          "value": "косинусной близости",
          "start_pos": 129
        }
      ],
      "relations": []
    },
    {
      "id": 840,
      "text": "Архитектура в свою очередь может содержать LSTM, BiLSTM, RNN или GRU слои.",
      "terms": [
        {
          "class": "Model",
          "value": "LSTM",
          "start_pos": 43
        },
        {
          "class": "Model",
          "value": "BiLSTM",
          "start_pos": 49
        },
        {
          "class": "Model",
          "value": "RNN",
          "start_pos": 57
        },
        {
          "class": "Model",
          "value": "GRU",
          "start_pos": 65
        }
      ],
      "relations": []
    },
    {
      "id": 841,
      "text": "Из интересных решений один из участников представил BiLSTM-сеть с CRF слоем.",
      "terms": [
        {
          "class": "Model",
          "value": "BiLSTM-сеть",
          "start_pos": 52
        },
        {
          "class": "Model",
          "value": "CRF",
          "start_pos": 66
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "BiLSTM-сеть",
            "start_pos": 52
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "CRF",
            "start_pos": 66
          }
        }
      ]
    },
    {
      "id": 842,
      "text": "Для задачи NER тексты преобразовываются с помощью токенизатора и теггинга.",
      "terms": [
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 11
        },
        {
          "class": "Method",
          "value": "токенизатора",
          "start_pos": 50
        },
        {
          "class": "Method",
          "value": "теггинга",
          "start_pos": 65
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "токенизатора",
            "start_pos": 50
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 11
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "теггинга",
            "start_pos": 65
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 11
          }
        }
      ]
    },
    {
      "id": 843,
      "text": "Сначала тексты при помощи токенизатора переводятся в вектора - это то, на чем обучается модель.",
      "terms": [
        {
          "class": "Object",
          "value": "тексты",
          "start_pos": 8
        },
        {
          "class": "Method",
          "value": "токенизатора",
          "start_pos": 26
        },
        {
          "class": "Object",
          "value": "вектора",
          "start_pos": 53
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "токенизатора",
            "start_pos": 26
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "тексты",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 844,
      "text": "Далее создаются таргеты при помощи теггинга.",
      "terms": [
        {
          "class": "Object",
          "value": "таргеты",
          "start_pos": 16
        },
        {
          "class": "Method",
          "value": "теггинга",
          "start_pos": 35
        }
      ],
      "relations": []
    },
    {
      "id": 845,
      "text": "Самым распространенным алгоритмом теггинга является “Inside-outside-beginning”.",
      "terms": [
        {
          "class": "Method",
          "value": "Inside-outside-beginning",
          "start_pos": 53
        }
      ],
      "relations": []
    },
    {
      "id": 846,
      "text": "Тег указывает на то, что слово находится внутри спана.",
      "terms": [
        {
          "class": "Object",
          "value": "Тег",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "спана",
          "start_pos": 48
        }
      ],
      "relations": []
    },
    {
      "id": 847,
      "text": "Среди решений были как кастомный код для обучения и инференса, так и код от huggingface, который можно использовать из коробки.",
      "terms": [
        {
          "class": "Organization",
          "value": "huggingface",
          "start_pos": 76
        }
      ],
      "relations": []
    },
    {
      "id": 848,
      "text": "Безусловно, основной метрикой оценивания являлся лидерборд.",
      "terms": [
        {
          "class": "Metric",
          "value": "лидерборд",
          "start_pos": 49
        }
      ],
      "relations": []
    },
    {
      "id": 849,
      "text": "Для решения ситуации мы можем искусственно сгенерировать данные с помощью языка программирования.",
      "terms": [
        {
          "class": "Task",
          "value": "сгенерировать данные",
          "start_pos": 43
        }
      ],
      "relations": []
    },
    {
      "id": 850,
      "text": "Пересмотрев множество примеров и статей, была найдена англоязычная статья, в которой рассмотрены три самых интересных, в плане функциональности и простоты использования, способа генерации синтетических данных с помощью пакетов Python.",
      "terms": [
        {
          "class": "Lang",
          "value": "англоязычная",
          "start_pos": 54
        },
        {
          "class": "Task",
          "value": "генерации синтетических данных",
          "start_pos": 178
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 227
        }
      ],
      "relations": []
    },
    {
      "id": 851,
      "text": "Faker - это пакет Python, разработанный для упрощения генерации синтетических данных.",
      "terms": [
        {
          "class": "Library",
          "value": "Faker",
          "start_pos": 0
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 18
        },
        {
          "class": "Task",
          "value": "генерации синтетических данных",
          "start_pos": 54
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "Faker",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации синтетических данных",
            "start_pos": 54
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 18
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Faker",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 852,
      "text": "SDV или Synthetic Data Vault - это пакет Python для генерации синтетических данных на основе предоставленного набора данных.",
      "terms": [
        {
          "class": "Library",
          "value": "SDV",
          "start_pos": 0
        },
        {
          "class": "Library",
          "value": "Synthetic Data Vault",
          "start_pos": 8
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 41
        },
        {
          "class": "Task",
          "value": "генерации синтетических данных",
          "start_pos": 52
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 8
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации синтетических данных",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 8
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 41
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 41
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 8
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации синтетических данных",
            "start_pos": 52
          }
        }
      ]
    },
    {
      "id": 853,
      "text": "Synthetic Data Vault (SDV) - это библиотека Python, использующаяся для генерации синтетических данных на основе предоставленного набора данных.",
      "terms": [
        {
          "class": "Library",
          "value": "Synthetic Data Vault",
          "start_pos": 0
        },
        {
          "class": "Library",
          "value": "SDV",
          "start_pos": 22
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 44
        },
        {
          "class": "Task",
          "value": "генерации синтетических данных",
          "start_pos": 71
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 22
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 44
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 44
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 22
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации синтетических данных",
            "start_pos": 71
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 22
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации синтетических данных",
            "start_pos": 71
          }
        }
      ]
    },
    {
      "id": 854,
      "text": "SDV генерирует данные, применяя математические методы и модели машинного обучения.",
      "terms": [
        {
          "class": "Library",
          "value": "SDV",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "генерирует данные",
          "start_pos": 4
        },
        {
          "class": "Method",
          "value": "математические методы",
          "start_pos": 32
        },
        {
          "class": "Model",
          "value": "модели машинного обучения",
          "start_pos": 56
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "математические методы",
            "start_pos": 32
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "математические методы",
            "start_pos": 32
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "генерирует данные",
            "start_pos": 4
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерирует данные",
            "start_pos": 4
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модели машинного обучения",
            "start_pos": 56
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерирует данные",
            "start_pos": 4
          }
        }
      ]
    },
    {
      "id": 855,
      "text": "Synthetic Data Vault (SDV) создает данные с использованием математических методов и моделей машинного обучения.",
      "terms": [
        {
          "class": "Library",
          "value": "Synthetic Data Vault",
          "start_pos": 0
        },
        {
          "class": "Library",
          "value": "SDV",
          "start_pos": 22
        },
        {
          "class": "Task",
          "value": "создает данные",
          "start_pos": 27
        },
        {
          "class": "Method",
          "value": "математических методов",
          "start_pos": 59
        },
        {
          "class": "Model",
          "value": "моделей машинного обучения",
          "start_pos": 84
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "математических методов",
            "start_pos": 59
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "математических методов",
            "start_pos": 59
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 22
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 22
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "математических методов",
            "start_pos": 59
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "создает данные",
            "start_pos": 27
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создает данные",
            "start_pos": 27
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 22
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создает данные",
            "start_pos": 27
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "моделей машинного обучения",
            "start_pos": 84
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "создает данные",
            "start_pos": 27
          }
        }
      ]
    },
    {
      "id": 856,
      "text": "С помощью SVD можно обработать данные, даже если они содержат несколько типов данных и отсутствующие значения.",
      "terms": [
        {
          "class": "Library",
          "value": "SVD",
          "start_pos": 10
        },
        {
          "class": "Task",
          "value": "обработать данные",
          "start_pos": 20
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "SVD",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "обработать данные",
            "start_pos": 20
          }
        }
      ]
    },
    {
      "id": 857,
      "text": "С помощью Synthetic Data Vault (SDV) могут быть обработаны данные нескольких типов.",
      "terms": [
        {
          "class": "Library",
          "value": "Synthetic Data Vault",
          "start_pos": 10
        },
        {
          "class": "Library",
          "value": "SDV",
          "start_pos": 32
        },
        {
          "class": "Task",
          "value": "обработаны данные",
          "start_pos": 48
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 32
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 10
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "Synthetic Data Vault",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "обработаны данные",
            "start_pos": 48
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 32
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "обработаны данные",
            "start_pos": 48
          }
        }
      ]
    },
    {
      "id": 858,
      "text": "Используем для этого одну из доступных моделей SVD Singular Table GaussianCopula.",
      "terms": [
        {
          "class": "Library",
          "value": "SVD",
          "start_pos": 47
        },
        {
          "class": "Model",
          "value": "Singular Table GaussianCopula",
          "start_pos": 51
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Singular Table GaussianCopula",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "SVD",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 859,
      "text": "Для этого применяем одну из моделей, доступных в библиотеке SVD - Singular Table GaussianCopula.",
      "terms": [
        {
          "class": "Library",
          "value": "SVD",
          "start_pos": 60
        },
        {
          "class": "Model",
          "value": "Singular Table GaussianCopula",
          "start_pos": 66
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Singular Table GaussianCopula",
            "start_pos": 66
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "SVD",
            "start_pos": 60
          }
        }
      ]
    },
    {
      "id": 860,
      "text": "Воспользуемся функцией evaluate из SDV.",
      "terms": [
        {
          "class": "Method",
          "value": "evaluate",
          "start_pos": 23
        },
        {
          "class": "Library",
          "value": "SDV",
          "start_pos": 35
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "evaluate",
            "start_pos": 23
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "SDV",
            "start_pos": 35
          }
        }
      ]
    },
    {
      "id": 861,
      "text": "Возьмем для примера статистические метрики (критерии Колмогорова-Смирнова и Хи-квадрат) и метрику обнаружения, основанную на классификаторе логистической регрессии.",
      "terms": [
        {
          "class": "Metric",
          "value": "статистические метрики",
          "start_pos": 20
        },
        {
          "class": "Metric",
          "value": "критерии Колмогорова-Смирнова",
          "start_pos": 44
        },
        {
          "class": "Metric",
          "value": "Хи-квадрат",
          "start_pos": 76
        },
        {
          "class": "Metric",
          "value": "метрику обнаружения",
          "start_pos": 90
        },
        {
          "class": "Method",
          "value": "классификаторе логистической регрессии",
          "start_pos": 125
        }
      ],
      "relations": []
    },
    {
      "id": 862,
      "text": "KSTest используется для сравнения столбцов с непрерывными данными, а CSTest с дискретными данными.",
      "terms": [
        {
          "class": "Metric",
          "value": "KSTest",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "CSTest",
          "start_pos": 69
        }
      ],
      "relations": []
    },
    {
      "id": 863,
      "text": "Метрика LogisticDetection при помощи машинного обучения позволяет оценить насколько сложно отличить синтетические данные от исходных.",
      "terms": [
        {
          "class": "Metric",
          "value": "LogisticDetection",
          "start_pos": 8
        },
        {
          "class": "Task",
          "value": "отличить синтетические данные от исходных",
          "start_pos": 91
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "LogisticDetection",
            "start_pos": 8
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "отличить синтетические данные от исходных",
            "start_pos": 91
          }
        }
      ]
    },
    {
      "id": 864,
      "text": "Gretel или Gretel Synthetics – это пакет Python с открытым исходным кодом, основанный на рекуррентной нейронной сети для создания структурированных и не структурированных данных.",
      "terms": [
        {
          "class": "Library",
          "value": "Gretel",
          "start_pos": 0
        },
        {
          "class": "Library",
          "value": "Gretel Synthetics",
          "start_pos": 11
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 41
        },
        {
          "class": "Model",
          "value": "рекуррентной нейронной сети",
          "start_pos": 89
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 41
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Gretel",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 41
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Gretel Synthetics",
            "start_pos": 11
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "Gretel Synthetics",
            "start_pos": 11
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "Gretel",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 865,
      "text": "Gretel (Gretel Synthetics, GS) – это библиотека на Python.",
      "terms": [
        {
          "class": "Library",
          "value": "Gretel",
          "start_pos": 0
        },
        {
          "class": "Library",
          "value": "Gretel Synthetics",
          "start_pos": 8
        },
        {
          "class": "Library",
          "value": "GS",
          "start_pos": 27
        },
        {
          "class": "Environment",
          "value": "Python",
          "start_pos": 51
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Gretel",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "Gretel Synthetics",
            "start_pos": 8
          }
        },
        {
          "term1": {
            "class": "Environment",
            "value": "Python",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Library",
            "value": "GS",
            "start_pos": 27
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "Gretel Synthetics",
            "start_pos": 8
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "Gretel",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "GS",
            "start_pos": 27
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "Gretel",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "GS",
            "start_pos": 27
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Library",
            "value": "Gretel Synthetics",
            "start_pos": 8
          }
        }
      ]
    },
    {
      "id": 866,
      "text": "Этот модуль работает непосредственно с датафреймами данных Pandas и позволяет автоматически разбивать датафрейм на более мелкие датафреймы (по кластерам столбцов), выполнять обучение модели и генерацию для каждого фрейма независимо.",
      "terms": [
        {
          "class": "Library",
          "value": "Pandas",
          "start_pos": 59
        }
      ],
      "relations": []
    },
    {
      "id": 867,
      "text": "Теперь с помощью пакета Gretel cгенерируем синтетические данные для Stroke Prediction Dataset и проанализируем их относительно данных полученных с помощью пакета SVD из пункта 2.",
      "terms": [
        {
          "class": "Library",
          "value": "Gretel",
          "start_pos": 24
        },
        {
          "class": "Dataset",
          "value": "Stroke Prediction Dataset",
          "start_pos": 68
        },
        {
          "class": "Library",
          "value": "SVD",
          "start_pos": 162
        }
      ],
      "relations": []
    },
    {
      "id": 868,
      "text": "В современном мире всё большую популярность приобретает методика под названием customer development для тестирования идей и гипотез о будущем продукте.",
      "terms": [
        {
          "class": "Method",
          "value": "customer development",
          "start_pos": 79
        }
      ],
      "relations": []
    },
    {
      "id": 869,
      "text": "В данном решении была использована готовая нейросеть от сервиса RusVectores, обученная на корпусе НКРЯ с использованием алгоритма word2vec CBOW с длиной вектора 300.",
      "terms": [
        {
          "class": "Application",
          "value": "RusVectores",
          "start_pos": 64
        },
        {
          "class": "Corpus",
          "value": "НКРЯ",
          "start_pos": 98
        },
        {
          "class": "Method",
          "value": "word2vec CBOW",
          "start_pos": 130
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "word2vec CBOW",
            "start_pos": 130
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "RusVectores",
            "start_pos": 64
          }
        }
      ]
    },
    {
      "id": 870,
      "text": "НКРЯ – это совокупность русскоязычных текстов, Национальный Корпус Русского Языка в полном объёме.",
      "terms": [
        {
          "class": "Corpus",
          "value": "НКРЯ",
          "start_pos": 0
        },
        {
          "class": "Corpus",
          "value": "Национальный Корпус Русского Языка",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "Национальный Корпус Русского Языка",
            "start_pos": 47
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 871,
      "text": "Национальный Корпус Русского Языка, или НКРЯ, представляет собой совокупность русскоязычных текстов.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Национальный Корпус Русского Языка",
          "start_pos": 0
        },
        {
          "class": "Corpus",
          "value": "НКРЯ",
          "start_pos": 40
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "НКРЯ",
            "start_pos": 40
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Corpus",
            "value": "Национальный Корпус Русского Языка",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 872,
      "text": "Word2vec CBOW — алгоритм, благодаря которому слово на естественном языке представляется в виде числового вектора.",
      "terms": [
        {
          "class": "Method",
          "value": "Word2vec CBOW",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 873,
      "text": "CBOW – это аббревиатура Continuous Bag of Words.",
      "terms": [
        {
          "class": "Method",
          "value": "CBOW",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "Continuous Bag of Words",
          "start_pos": 24
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Continuous Bag of Words",
            "start_pos": 24
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "CBOW",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 874,
      "text": "Она обозначает алгоритм, который есть в word2vec.",
      "terms": [
        {
          "class": "Model",
          "value": "word2vec",
          "start_pos": 40
        }
      ],
      "relations": []
    },
    {
      "id": 875,
      "text": "Данный алгоритм называют моделью «мешка слов», он предсказывает слово по контексту.",
      "terms": [
        {
          "class": "Method",
          "value": "мешка слов",
          "start_pos": 34
        },
        {
          "class": "Task",
          "value": "предсказывает слово по контексту",
          "start_pos": 50
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "мешка слов",
            "start_pos": 34
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "предсказывает слово по контексту",
            "start_pos": 50
          }
        }
      ]
    },
    {
      "id": 876,
      "text": "Ещё один алгоритм в word2vec - Skip-gram предсказывает контекст по слову.",
      "terms": [
        {
          "class": "Library",
          "value": "word2vec",
          "start_pos": 20
        },
        {
          "class": "Method",
          "value": "Skip-gram",
          "start_pos": 31
        }
      ],
      "relations": []
    },
    {
      "id": 877,
      "text": "С помощью данных алгоритмов генерируют близкие по смыслу слова при запросе в поисковой системе, сравнивают документы по смыслу, определяют смысловую близость слов и предложений.",
      "terms": [
        {
          "class": "Task",
          "value": "сравнивают документы по смыслу",
          "start_pos": 96
        },
        {
          "class": "Task",
          "value": "определяют смысловую близость слов",
          "start_pos": 128
        }
      ],
      "relations": []
    },
    {
      "id": 878,
      "text": "Более подробно о word2vec можно почитать в статье \"Немного про word2vec: полезная теория\".",
      "terms": [
        {
          "class": "Application",
          "value": "word2vec",
          "start_pos": 17
        },
        {
          "class": "Application",
          "value": "word2vec",
          "start_pos": 63
        }
      ],
      "relations": []
    },
    {
      "id": 879,
      "text": "О векторном представлении слов (эмбеддинге) хорошо и с примерами описано в статье \"Что такое эмбеддинги и как они помогают машинам понимать тексты\".",
      "terms": [
        {
          "class": "Object",
          "value": "векторном представлении слов",
          "start_pos": 2
        },
        {
          "class": "Object",
          "value": "эмбеддинге",
          "start_pos": 32
        }
      ],
      "relations": []
    },
    {
      "id": 880,
      "text": "Т.к. у меня таких мощностей нет, я воспользовался доступным онлайн сервисом RusVectores.",
      "terms": [
        {
          "class": "Application",
          "value": "RusVectores",
          "start_pos": 76
        }
      ],
      "relations": []
    },
    {
      "id": 881,
      "text": "Метрикой оценки качества является ROC-AUC.",
      "terms": [
        {
          "class": "Metric",
          "value": "ROC-AUC",
          "start_pos": 34
        }
      ],
      "relations": []
    },
    {
      "id": 882,
      "text": "Разработанный подход для решения задачи кредитного скоринга в дальнейшем легко переносим и на прочие банковские задачи: модели склонности, оттока и дохода.",
      "terms": [
        {
          "class": "Method",
          "value": "подход",
          "start_pos": 14
        },
        {
          "class": "Task",
          "value": "задачи кредитного скоринга",
          "start_pos": 33
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "подход",
            "start_pos": 14
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "задачи кредитного скоринга",
            "start_pos": 33
          }
        }
      ]
    },
    {
      "id": 883,
      "text": "Токены, относящиеся к ФИО, мы выделяем с помощью клиентской базы и проверки с помощью библиотек для морфологического анализа.",
      "terms": [
        {
          "class": "Object",
          "value": "Токены",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "морфологического анализа",
          "start_pos": 100
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "морфологического анализа",
            "start_pos": 100
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "Токены",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 884,
      "text": "Лемматизация оставшихся токенов.",
      "terms": [
        {
          "class": "Method",
          "value": "Лемматизация",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "токенов",
          "start_pos": 24
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Лемматизация",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "токенов",
            "start_pos": 24
          }
        }
      ]
    },
    {
      "id": 885,
      "text": "Для этого корпуса мы обучили word2vec-модель, где для каждого токена выучили эмбеддинг размера 50.",
      "terms": [
        {
          "class": "Corpus",
          "value": "корпуса",
          "start_pos": 10
        },
        {
          "class": "Model",
          "value": "word2vec-модель",
          "start_pos": 29
        },
        {
          "class": "Object",
          "value": "эмбеддинг",
          "start_pos": 77
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "word2vec-модель",
            "start_pos": 29
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "корпуса",
            "start_pos": 10
          }
        }
      ]
    },
    {
      "id": 886,
      "text": "Благодаря богатому набору данных бустинг индивидуально имеет приличное качество.",
      "terms": [
        {
          "class": "Method",
          "value": "бустинг",
          "start_pos": 33
        }
      ],
      "relations": []
    },
    {
      "id": 887,
      "text": "Эти модели всегда ищут синонимы — даже для устоявшихся словосочетаний.",
      "terms": [
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 4
        },
        {
          "class": "Task",
          "value": "ищут синонимы",
          "start_pos": 18
        },
        {
          "class": "Object",
          "value": "словосочетаний",
          "start_pos": 55
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модели",
            "start_pos": 4
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "ищут синонимы",
            "start_pos": 18
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "словосочетаний",
            "start_pos": 55
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "ищут синонимы",
            "start_pos": 18
          }
        }
      ]
    },
    {
      "id": 888,
      "text": "Одной из первых практических задач было определение авторства политических текстов The Federalist Papers, написанных в США в 1780 годах.",
      "terms": [
        {
          "class": "Task",
          "value": "определение авторства",
          "start_pos": 40
        },
        {
          "class": "Date",
          "value": "1780 годах",
          "start_pos": 125
        }
      ],
      "relations": []
    },
    {
      "id": 889,
      "text": "Я рассмотрю простейший способ анализа с помощью несложных расчетов и пакета Natural Language Toolkit, что в совокупности с matplotlib позволяет получить интересные результаты буквально в несколько строк кода.",
      "terms": [
        {
          "class": "Library",
          "value": "Natural Language Toolkit",
          "start_pos": 76
        },
        {
          "class": "Library",
          "value": "matplotlib",
          "start_pos": 123
        }
      ],
      "relations": []
    },
    {
      "id": 890,
      "text": "Перед переходом к самим метрикам необходимо ввести важную концепцию для описания этих метрик в терминах ошибок классификации — confusion matrix (матрица ошибок).",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 111
        },
        {
          "class": "Method",
          "value": "confusion matrix",
          "start_pos": 127
        },
        {
          "class": "Method",
          "value": "матрица ошибок",
          "start_pos": 145
        }
      ],
      "relations": []
    },
    {
      "id": 891,
      "text": "Интуитивно понятной, очевидной и почти неиспользуемой метрикой является accuracy — доля правильных ответов алгоритма.",
      "terms": [
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 72
        }
      ],
      "relations": []
    },
    {
      "id": 892,
      "text": "Для оценки качества работы алгоритма на каждом из классов по отдельности введем метрики precision (точность) и recall (полнота).",
      "terms": [
        {
          "class": "Object",
          "value": "классов",
          "start_pos": 50
        },
        {
          "class": "Metric",
          "value": "precision",
          "start_pos": 88
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 99
        },
        {
          "class": "Metric",
          "value": "recall",
          "start_pos": 111
        },
        {
          "class": "Metric",
          "value": "полнота",
          "start_pos": 119
        }
      ],
      "relations": []
    },
    {
      "id": 893,
      "text": "Precision можно интерпретировать как долю объектов, названных классификатором положительными и при этом действительно являющимися положительными, а recall показывает, какую долю объектов положительного класса из всех объектов положительного класса нашел алгоритм.",
      "terms": [
        {
          "class": "Metric",
          "value": "Precision",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "recall",
          "start_pos": 148
        }
      ],
      "relations": []
    },
    {
      "id": 894,
      "text": "F-мера достигает максимума при полноте и точности, равными единице, и близка к нулю, если один из аргументов близок к нулю.",
      "terms": [
        {
          "class": "Metric",
          "value": "F-мера",
          "start_pos": 0
        },
        {
          "class": "Metric",
          "value": "полноте",
          "start_pos": 31
        },
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 41
        }
      ],
      "relations": []
    },
    {
      "id": 895,
      "text": "Одним из способов оценить модель в целом, не привязываясь к конкретному порогу, является AUC-ROC (или ROC AUC) — площадь (Area Under Curve) под кривой ошибок (Receiver Operating Characteristic curve ).",
      "terms": [
        {
          "class": "Task",
          "value": "оценить модель",
          "start_pos": 18
        },
        {
          "class": "Metric",
          "value": "AUC-ROC",
          "start_pos": 89
        },
        {
          "class": "Metric",
          "value": "ROC AUC",
          "start_pos": 102
        },
        {
          "class": "Metric",
          "value": "площадь",
          "start_pos": 113
        },
        {
          "class": "Metric",
          "value": "Area Under Curve",
          "start_pos": 122
        },
        {
          "class": "Metric",
          "value": "Receiver Operating Characteristic curve",
          "start_pos": 159
        }
      ],
      "relations": []
    },
    {
      "id": 896,
      "text": "Интуитивно можно представить минимизацию logloss как задачу максимизации accuracy путем штрафа за неверные предсказания.",
      "terms": [
        {
          "class": "Metric",
          "value": "logloss",
          "start_pos": 41
        },
        {
          "class": "Task",
          "value": "задачу максимизации accuracy",
          "start_pos": 53
        }
      ],
      "relations": []
    },
    {
      "id": 897,
      "text": "Вчера OpenAI выпустили Whisper.",
      "terms": [
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 6
        },
        {
          "class": "Application",
          "value": "Whisper",
          "start_pos": 23
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Whisper",
            "start_pos": 23
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 6
          }
        }
      ]
    },
    {
      "id": 898,
      "text": "По сути авторы попытались: Исключить транскрипты других систем ASR из датасета; Привести пунктуации к некому стандарту.",
      "terms": [
        {
          "class": "Application",
          "value": "ASR",
          "start_pos": 63
        }
      ],
      "relations": []
    },
    {
      "id": 899,
      "text": "Серьезной нормализации или денормализации текста не делалось.",
      "terms": [
        {
          "class": "Method",
          "value": "нормализации",
          "start_pos": 10
        },
        {
          "class": "Method",
          "value": "денормализации",
          "start_pos": 27
        }
      ],
      "relations": []
    },
    {
      "id": 900,
      "text": "Под капотом же seq2seq модель, глядишь сама всё и так выучит.",
      "terms": [
        {
          "class": "Model",
          "value": "seq2seq",
          "start_pos": 15
        }
      ],
      "relations": []
    },
    {
      "id": 901,
      "text": "Ведь исходя из названий FAIR, OpenAI и прочие же FOSS - альтруисты, борющиеся за наше будущее, они же выложили код для тренировки (а повторить смогут лишь GAFA компании) и все датасеты, не так ли?",
      "terms": [
        {
          "class": "Organization",
          "value": "FAIR",
          "start_pos": 24
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 30
        },
        {
          "class": "Organization",
          "value": "FOSS",
          "start_pos": 49
        },
        {
          "class": "Organization",
          "value": "GAFA",
          "start_pos": 155
        }
      ],
      "relations": []
    },
    {
      "id": 902,
      "text": "На практике OpenAI уже давно не Open, а недавняя история с DALLE-2 / Midjourney / Stable Diffusion скорее иллюстрируют тренд.",
      "terms": [
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 12
        },
        {
          "class": "Model",
          "value": "DALLE-2",
          "start_pos": 59
        },
        {
          "class": "Model",
          "value": "Midjourney",
          "start_pos": 69
        },
        {
          "class": "Model",
          "value": "Stable Diffusion",
          "start_pos": 82
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "DALLE-2",
            "start_pos": 59
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 12
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Midjourney",
            "start_pos": 69
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 12
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Stable Diffusion",
            "start_pos": 82
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "OpenAI",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 903,
      "text": "Наверное стоит только сказать, что это sequence-to-sequence encoder-decoder трансформерная модель, без особого снижения длины инпута с довольном стандартным окном в 25 миллисекунд и шагом в 10 миллисекунд, работающая на аудио в 16 килогерц.",
      "terms": [
        {
          "class": "Model",
          "value": "sequence-to-sequence encoder-decoder",
          "start_pos": 39
        }
      ],
      "relations": []
    },
    {
      "id": 904,
      "text": "Решать конечно вам для вашего конкретного приложения, но если сравнивать только саму модель распознавания, а не весь обвес в виде сервиса (понятно, что тут VAD и детектор языка запихали тоже в модель), например с древними бенчмарками из silero-models, то самые маленькие модели на CPU в расчете на 1 ядро (1 ядро = 2 потока) отличаются по скорости … на два порядка.",
      "terms": [
        {
          "class": "Method",
          "value": "VAD",
          "start_pos": 156
        },
        {
          "class": "Model",
          "value": "silero-models",
          "start_pos": 237
        }
      ],
      "relations": []
    },
    {
      "id": 905,
      "text": "Для наших моделей из прошлого релиза, многие из этих датасетов тоже как бы \"zero-shot\" (то есть у нас нет соответствующего большого тренировочного датасета).",
      "terms": [
        {
          "class": "Method",
          "value": "zero-shot",
          "start_pos": 76
        }
      ],
      "relations": []
    },
    {
      "id": 906,
      "text": "К этой группе относятся решения от крупнейших компаний: Amazon Machine Learning, Microsoft Azure Machine Learning и Microsoft Cognitive Services, Google Cloud Prediction API и Google Cloud Machine Learning, IBM Watson Cloud и AlchemyAPI, BigML и другие.",
      "terms": [
        {
          "class": "Application",
          "value": "Amazon Machine Learning",
          "start_pos": 56
        },
        {
          "class": "Application",
          "value": "Microsoft Azure Machine Learning",
          "start_pos": 81
        },
        {
          "class": "Application",
          "value": "Microsoft Cognitive Services",
          "start_pos": 116
        },
        {
          "class": "Application",
          "value": "Google Cloud Prediction API",
          "start_pos": 146
        },
        {
          "class": "Application",
          "value": "Google Cloud Machine Learning",
          "start_pos": 176
        },
        {
          "class": "Application",
          "value": "IBM Watson Cloud",
          "start_pos": 207
        },
        {
          "class": "Application",
          "value": "AlchemyAPI",
          "start_pos": 226
        },
        {
          "class": "Application",
          "value": "BigML",
          "start_pos": 238
        }
      ],
      "relations": []
    },
    {
      "id": 907,
      "text": "Возможности этого сервиса в области анализа речи и естественного языка пока ограничиваются английским языком, однако многие другие сервисы поддерживают русский язык, например, полностью бесплатный wit.ai, приобретённый Facebook, и его российский конкурент api.ai (понимание текстовых и голосовых команд и вопросов на естественных языках, преобразование речи в текст), IBM AlchemyAPI (анализ тональности текста, выявление сущностей и ключевых слов), Google Natural Language API (классификация текстов, графы связей, извлечение информации из текстов, анализ тональности, намерений, извлечение инсайтов; поддерживает русский язык с помощью технологии машинного перевода Google Translate, использует глубокое обучение и word2vec).",
      "terms": [
        {
          "class": "Science",
          "value": "области анализа речи и естественного языка",
          "start_pos": 28
        },
        {
          "class": "Lang",
          "value": "английским языком",
          "start_pos": 91
        },
        {
          "class": "Lang",
          "value": "русский",
          "start_pos": 152
        },
        {
          "class": "Application",
          "value": "wit.ai",
          "start_pos": 197
        },
        {
          "class": "Organization",
          "value": "Facebook",
          "start_pos": 219
        },
        {
          "class": "Application",
          "value": "api.ai",
          "start_pos": 256
        },
        {
          "class": "Task",
          "value": "понимание текстовых и голосовых команд и вопросов",
          "start_pos": 264
        },
        {
          "class": "Task",
          "value": "преобразование речи в текст",
          "start_pos": 338
        },
        {
          "class": "Application",
          "value": "IBM AlchemyAPI",
          "start_pos": 368
        },
        {
          "class": "Task",
          "value": "анализ тональности текста",
          "start_pos": 384
        },
        {
          "class": "Task",
          "value": "выявление сущностей и ключевых слов",
          "start_pos": 411
        },
        {
          "class": "Application",
          "value": "Google Natural Language API",
          "start_pos": 449
        },
        {
          "class": "Task",
          "value": "классификация текстов",
          "start_pos": 478
        },
        {
          "class": "Object",
          "value": "графы связей",
          "start_pos": 501
        },
        {
          "class": "Task",
          "value": "извлечение информации из текстов",
          "start_pos": 515
        },
        {
          "class": "Task",
          "value": "анализ тональности",
          "start_pos": 549
        },
        {
          "class": "Science",
          "value": "машинного перевода",
          "start_pos": 648
        },
        {
          "class": "Application",
          "value": "Google Translate",
          "start_pos": 667
        },
        {
          "class": "Library",
          "value": "word2vec",
          "start_pos": 716
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Google Natural Language API",
            "start_pos": 449
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "графы связей",
            "start_pos": 501
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Natural Language API",
            "start_pos": 449
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного перевода",
            "start_pos": 648
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Translate",
            "start_pos": 667
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного перевода",
            "start_pos": 648
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Natural Language API",
            "start_pos": 449
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализ тональности",
            "start_pos": 549
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Natural Language API",
            "start_pos": 449
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "извлечение информации из текстов",
            "start_pos": 515
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Natural Language API",
            "start_pos": 449
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификация текстов",
            "start_pos": 478
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "IBM AlchemyAPI",
            "start_pos": 368
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "выявление сущностей и ключевых слов",
            "start_pos": 411
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "IBM AlchemyAPI",
            "start_pos": 368
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализ тональности текста",
            "start_pos": 384
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "api.ai",
            "start_pos": 256
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "преобразование речи в текст",
            "start_pos": 338
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "api.ai",
            "start_pos": 256
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "понимание текстовых и голосовых команд и вопросов",
            "start_pos": 264
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "wit.ai",
            "start_pos": 197
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "области анализа речи и естественного языка",
            "start_pos": 28
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "wit.ai",
            "start_pos": 197
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного перевода",
            "start_pos": 648
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "IBM AlchemyAPI",
            "start_pos": 368
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "области анализа речи и естественного языка",
            "start_pos": 28
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Natural Language API",
            "start_pos": 449
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "области анализа речи и естественного языка",
            "start_pos": 28
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Google Translate",
            "start_pos": 667
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "области анализа речи и естественного языка",
            "start_pos": 28
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "word2vec",
            "start_pos": 716
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "области анализа речи и естественного языка",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 908,
      "text": "Google Natural Language API  поддерживает русский язык с помощью технологии машинного перевода Google Translate, использует глубокое обучение и word2vec.",
      "terms": [
        {
          "class": "Application",
          "value": "Google Natural Language API",
          "start_pos": 0
        },
        {
          "class": "Lang",
          "value": "русский язык",
          "start_pos": 42
        },
        {
          "class": "Science",
          "value": "машинного перевода",
          "start_pos": 76
        },
        {
          "class": "Application",
          "value": "Google Translate",
          "start_pos": 95
        },
        {
          "class": "Library",
          "value": "word2vec",
          "start_pos": 144
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Google Natural Language API",
            "start_pos": 0
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного перевода",
            "start_pos": 76
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "word2vec",
            "start_pos": 144
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "машинного перевода",
            "start_pos": 76
          }
        }
      ]
    },
    {
      "id": 909,
      "text": "Например, IBM Watson предлагает инструмент Personality Insights, позволяющий определять черты личности человека, его потребности и ценности, намерения и другие характеристики по его записям в Твиттере, социальных сетях или по другим текстовым источникам.",
      "terms": [
        {
          "class": "Application",
          "value": "IBM Watson",
          "start_pos": 10
        },
        {
          "class": "Application",
          "value": "Personality Insights",
          "start_pos": 43
        },
        {
          "class": "Application",
          "value": "Твиттере",
          "start_pos": 192
        }
      ],
      "relations": []
    },
    {
      "id": 910,
      "text": "Например, Diffbot позволяет автоматически сканировать страницы сайтов, извлекать из них нужную информацию: тексты, изображения, видео, информацию о продуктах, комментарии и др., в очищенном в структурированном виде, а также позволяет классифицировать страницы.",
      "terms": [
        {
          "class": "Application",
          "value": "Diffbot",
          "start_pos": 10
        },
        {
          "class": "Task",
          "value": "сканировать страницы сайтов",
          "start_pos": 42
        },
        {
          "class": "Task",
          "value": "классифицировать страницы",
          "start_pos": 234
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Diffbot",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классифицировать страницы",
            "start_pos": 234
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Diffbot",
            "start_pos": 10
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "сканировать страницы сайтов",
            "start_pos": 42
          }
        }
      ]
    },
    {
      "id": 911,
      "text": "При этом используются широкий спектр технологий: анализ структуры страниц, машинное обучение, искусственный интеллект, обработка естественных языков и машинное зрение.",
      "terms": [
        {
          "class": "Task",
          "value": "анализ структуры страниц",
          "start_pos": 49
        },
        {
          "class": "Science",
          "value": "машинное обучение",
          "start_pos": 75
        },
        {
          "class": "Science",
          "value": "искусственный интеллект",
          "start_pos": 94
        },
        {
          "class": "Task",
          "value": "обработка естественных языков",
          "start_pos": 119
        },
        {
          "class": "Science",
          "value": "машинное зрение",
          "start_pos": 151
        }
      ],
      "relations": []
    },
    {
      "id": 912,
      "text": "Решения, основанные на Deepomatic, позволяют находить информацию о фильме по его постеру, информацию о картине или скульптуре на выставке по ее фото, сделанному на камеру телефона, позволяют скачивать музыку, сфотографировав обложку альбома на диске и т.п.",
      "terms": [
        {
          "class": "Application",
          "value": "Deepomatic",
          "start_pos": 23
        },
        {
          "class": "Task",
          "value": "находить информацию о фильме",
          "start_pos": 45
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Deepomatic",
            "start_pos": 23
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "находить информацию о фильме",
            "start_pos": 45
          }
        }
      ]
    },
    {
      "id": 913,
      "text": "В течение четырех лет вышло несколько версий модели, способных транскрибировать лекции, телефонные разговоры, телевизионные программы, радиошоу и другие прямые трансляции с «человеческой точностью».",
      "terms": [
        {
          "class": "Model",
          "value": "модели",
          "start_pos": 45
        },
        {
          "class": "Task",
          "value": "транскрибировать лекции",
          "start_pos": 63
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модели",
            "start_pos": 45
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "транскрибировать лекции",
            "start_pos": 63
          }
        }
      ]
    },
    {
      "id": 914,
      "text": "Модель DeepSpeech представляет собой сквозную обучаемую архитектуру на уровне символов, которая может транскрибировать аудио на различных языках.",
      "terms": [
        {
          "class": "Model",
          "value": "DeepSpeech",
          "start_pos": 7
        },
        {
          "class": "Task",
          "value": "транскрибировать аудио",
          "start_pos": 102
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "DeepSpeech",
            "start_pos": 7
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "транскрибировать аудио",
            "start_pos": 102
          }
        }
      ]
    },
    {
      "id": 915,
      "text": "Вдохновленная этими усилиями по сбору данных, исследовательская группа Mozilla в сотрудничестве с группой открытых инноваций запустила проект Common Voice, цель которого заключалась в сборе и проверке речевых данных.",
      "terms": [
        {
          "class": "Organization",
          "value": "Mozilla",
          "start_pos": 71
        },
        {
          "class": "Activity",
          "value": "Common Voice",
          "start_pos": 142
        },
        {
          "class": "Task",
          "value": "проверке речевых данных",
          "start_pos": 192
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "Common Voice",
            "start_pos": 142
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Mozilla",
            "start_pos": 71
          }
        }
      ]
    },
    {
      "id": 916,
      "text": "Common Voice включает не только речевые записи, но и из добровольно предоставленные метаданные, такие как возраст, пол и акцент говорящего.",
      "terms": [
        {
          "class": "Activity",
          "value": "Common Voice",
          "start_pos": 0
        },
        {
          "class": "Object",
          "value": "речевые записи",
          "start_pos": 32
        },
        {
          "class": "Object",
          "value": "метаданные",
          "start_pos": 84
        }
      ],
      "relations": []
    },
    {
      "id": 917,
      "text": "Сегодня Common Voice является одним из крупнейших в мире мультиязычных корпусов, являющихся общественным достоянием, с более чем 9 тысячами часов голосовых данных на 60 различных языках, включая такие редкие языки, как валлийский и киньяруанда.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Common Voice",
          "start_pos": 8
        },
        {
          "class": "Corpus",
          "value": "мультиязычных корпусов",
          "start_pos": 57
        },
        {
          "class": "Lang",
          "value": "валлийский",
          "start_pos": 219
        },
        {
          "class": "Lang",
          "value": "киньяруанда",
          "start_pos": 232
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "Common Voice",
            "start_pos": 8
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "валлийский",
            "start_pos": 219
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "Common Voice",
            "start_pos": 8
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "киньяруанда",
            "start_pos": 232
          }
        }
      ]
    },
    {
      "id": 918,
      "text": "На сегодняшний день Common Voice представляет собой один из крупнейших в мире мультиязычных корпусов, включающих такие редкие языки, как валлийский и киньяруанда.",
      "terms": [
        {
          "class": "Corpus",
          "value": "Common Voice",
          "start_pos": 20
        },
        {
          "class": "Corpus",
          "value": "мультиязычных корпусов",
          "start_pos": 78
        },
        {
          "class": "Lang",
          "value": "валлийский",
          "start_pos": 137
        },
        {
          "class": "Lang",
          "value": "киньяруанда",
          "start_pos": 150
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Corpus",
            "value": "Common Voice",
            "start_pos": 20
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "валлийский",
            "start_pos": 137
          }
        },
        {
          "term1": {
            "class": "Corpus",
            "value": "Common Voice",
            "start_pos": 20
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "киньяруанда",
            "start_pos": 150
          }
        }
      ]
    },
    {
      "id": 919,
      "text": "В нашем случае цель была сформулирована как повышение эффективности поиска кандидатов.",
      "terms": [
        {
          "class": "Task",
          "value": "повышение эффективности поиска кандидатов",
          "start_pos": 44
        }
      ],
      "relations": []
    },
    {
      "id": 920,
      "text": "Основная задача здесь — найти эффективный способ отображения соответствия кандидатов и навыков.",
      "terms": [
        {
          "class": "Task",
          "value": "найти эффективный способ отображения соответствия кандидатов и навыков",
          "start_pos": 24
        }
      ],
      "relations": []
    },
    {
      "id": 921,
      "text": "Кодирование в переменные — One-Hot Encoding (OHE)",
      "terms": [
        {
          "class": "Method",
          "value": "One-Hot Encoding",
          "start_pos": 27
        },
        {
          "class": "Method",
          "value": "OHE",
          "start_pos": 45
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "OHE",
            "start_pos": 45
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "One-Hot Encoding",
            "start_pos": 27
          }
        }
      ]
    },
    {
      "id": 922,
      "text": "Для этого используют метод TF-IDF.",
      "terms": [
        {
          "class": "Metric",
          "value": "TF-IDF",
          "start_pos": 27
        }
      ],
      "relations": []
    },
    {
      "id": 923,
      "text": "Соответственно, можно схлопнуть похожие навыки в некоторые факторы/компоненты/латентные признаки.",
      "terms": [
        {
          "class": "Object",
          "value": "факторы",
          "start_pos": 59
        },
        {
          "class": "Object",
          "value": "компоненты",
          "start_pos": 67
        },
        {
          "class": "Object",
          "value": "латентные признаки",
          "start_pos": 78
        }
      ],
      "relations": []
    },
    {
      "id": 924,
      "text": "Одним из подходов, позволяющих находить такие компоненты, является группа методов матричной факторизации.",
      "terms": [
        {
          "class": "Object",
          "value": "компоненты",
          "start_pos": 46
        },
        {
          "class": "Method",
          "value": "методов матричной факторизации",
          "start_pos": 74
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методов матричной факторизации",
            "start_pos": 74
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "компоненты",
            "start_pos": 46
          }
        }
      ]
    },
    {
      "id": 925,
      "text": "Полученные представления кандидатов и навыков называют эмбедингами.",
      "terms": [
        {
          "class": "Object",
          "value": "эмбедингами",
          "start_pos": 55
        }
      ],
      "relations": []
    },
    {
      "id": 926,
      "text": "При создании нашей системы рекомендации кандидатов на позиции мы использовали нейронную сеть — StarSpace.",
      "terms": [
        {
          "class": "Model",
          "value": "нейронную сеть",
          "start_pos": 78
        },
        {
          "class": "Model",
          "value": "StarSpace",
          "start_pos": 95
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "нейронную сеть",
            "start_pos": 78
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "StarSpace",
            "start_pos": 95
          }
        }
      ]
    },
    {
      "id": 927,
      "text": "Другая группа методов, позволяющая решать задачи репрезентации сущностей — репрезентация графов.",
      "terms": [
        {
          "class": "Task",
          "value": "задачи репрезентации сущностей",
          "start_pos": 42
        },
        {
          "class": "Task",
          "value": "репрезентация графов",
          "start_pos": 75
        }
      ],
      "relations": []
    },
    {
      "id": 928,
      "text": "Но большинство методов графовой репрезентации работает с одномодальными графами, поэтому обычно двухмодальные графы следует трансформировать в граф, где узлы представлены одним видом сущностей.",
      "terms": [
        {
          "class": "Method",
          "value": "методов графовой репрезентации",
          "start_pos": 15
        },
        {
          "class": "Object",
          "value": "одномодальными графами",
          "start_pos": 57
        },
        {
          "class": "Object",
          "value": "двухмодальные графы",
          "start_pos": 96
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методов графовой репрезентации",
            "start_pos": 15
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "одномодальными графами",
            "start_pos": 57
          }
        }
      ]
    },
    {
      "id": 929,
      "text": "В первую очередь рассмотрим метод, основанный на графовой факторизации.",
      "terms": [
        {
          "class": "Method",
          "value": "графовой факторизации",
          "start_pos": 49
        }
      ],
      "relations": []
    },
    {
      "id": 930,
      "text": "Это группа методов очень похожа на методы, применяемые для репрезентации текстов — w2v (skip-gram), doc2vec.",
      "terms": [
        {
          "class": "Task",
          "value": "репрезентации текстов",
          "start_pos": 59
        },
        {
          "class": "Method",
          "value": "w2v",
          "start_pos": 83
        },
        {
          "class": "Method",
          "value": "skip-gram",
          "start_pos": 88
        },
        {
          "class": "Method",
          "value": "doc2vec",
          "start_pos": 100
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "skip-gram",
            "start_pos": 88
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "w2v",
            "start_pos": 83
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "w2v",
            "start_pos": 83
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "репрезентации текстов",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "doc2vec",
            "start_pos": 100
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "репрезентации текстов",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "skip-gram",
            "start_pos": 88
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "репрезентации текстов",
            "start_pos": 59
          }
        }
      ]
    },
    {
      "id": 931,
      "text": "Почитать подробнее про подобные методы графовой репрезентации можно, например, тут — DeepWalk, Node2vec, Graph2vec.",
      "terms": [
        {
          "class": "Method",
          "value": "методы графовой репрезентации",
          "start_pos": 32
        },
        {
          "class": "Method",
          "value": "DeepWalk",
          "start_pos": 85
        },
        {
          "class": "Method",
          "value": "Node2vec",
          "start_pos": 95
        },
        {
          "class": "Method",
          "value": "Graph2vec",
          "start_pos": 105
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "методы графовой репрезентации",
            "start_pos": 32
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "DeepWalk",
            "start_pos": 85
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы графовой репрезентации",
            "start_pos": 32
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "Node2vec",
            "start_pos": 95
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы графовой репрезентации",
            "start_pos": 32
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "Graph2vec",
            "start_pos": 105
          }
        }
      ]
    },
    {
      "id": 932,
      "text": "Сверточные сети на графах (Graph Convolutional Networks).",
      "terms": [
        {
          "class": "Method",
          "value": "Сверточные сети на графах",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "Graph Convolutional Networks",
          "start_pos": 27
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Graph Convolutional Networks",
            "start_pos": 27
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Сверточные сети на графах",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 933,
      "text": "Для задачи репрезентации графов связей между сущностями мы использовали фреймворк PyTorch BigGraph — это ещё один фреймворк от Facebook Research.",
      "terms": [
        {
          "class": "Task",
          "value": "репрезентации графов связей между сущностями",
          "start_pos": 11
        },
        {
          "class": "Library",
          "value": "PyTorch BigGraph",
          "start_pos": 82
        },
        {
          "class": "Organization",
          "value": "Facebook Research",
          "start_pos": 127
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch BigGraph",
            "start_pos": 82
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Facebook Research",
            "start_pos": 127
          }
        },
        {
          "term1": {
            "class": "Library",
            "value": "PyTorch BigGraph",
            "start_pos": 82
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "репрезентации графов связей между сущностями",
            "start_pos": 11
          }
        }
      ]
    },
    {
      "id": 934,
      "text": "В этой статье мы научим вас генерировать текст с помощью предварительно обученного GPT-2 — более легкого предшественника GPT-3.",
      "terms": [
        {
          "class": "Task",
          "value": "генерировать текст",
          "start_pos": 28
        },
        {
          "class": "Model",
          "value": "GPT-2",
          "start_pos": 83
        },
        {
          "class": "Model",
          "value": "GPT-3",
          "start_pos": 121
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GPT-2",
            "start_pos": 83
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерировать текст",
            "start_pos": 28
          }
        }
      ]
    },
    {
      "id": 935,
      "text": "Мы будем использовать именитую библиотеку Transformers, разработанную Huggingface.",
      "terms": [
        {
          "class": "Library",
          "value": "Transformers",
          "start_pos": 42
        },
        {
          "class": "Organization",
          "value": "Huggingface",
          "start_pos": 70
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Library",
            "value": "Transformers",
            "start_pos": 42
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Huggingface",
            "start_pos": 70
          }
        }
      ]
    },
    {
      "id": 936,
      "text": "Модель по умолчанию для конвейера генерации текста — GPT-2, самая популярная модель декодирующего трансформера для генерации языка.",
      "terms": [
        {
          "class": "Model",
          "value": "Модель",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "генерации текста",
          "start_pos": 34
        },
        {
          "class": "Model",
          "value": "GPT-2",
          "start_pos": 53
        },
        {
          "class": "Model",
          "value": "трансформера",
          "start_pos": 98
        },
        {
          "class": "Task",
          "value": "генерации языка",
          "start_pos": 115
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GPT-2",
            "start_pos": 53
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации языка",
            "start_pos": 115
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GPT-2",
            "start_pos": 53
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации текста",
            "start_pos": 34
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Модель",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "генерации текста",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 937,
      "text": "Эта модель GPT2 от CKIPLab предварительно обучена на китайском корпусе, поэтому мы можем использовать их модель без необходимости заниматься настройкой самостоятельно.",
      "terms": [
        {
          "class": "Model",
          "value": "GPT2",
          "start_pos": 11
        },
        {
          "class": "Organization",
          "value": "CKIPLab",
          "start_pos": 19
        },
        {
          "class": "Corpus",
          "value": "китайском корпусе",
          "start_pos": 53
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "GPT2",
            "start_pos": 11
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Corpus",
            "value": "китайском корпусе",
            "start_pos": 53
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "GPT2",
            "start_pos": 11
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "CKIPLab",
            "start_pos": 19
          }
        }
      ]
    },
    {
      "id": 938,
      "text": "Энкодер предложений (sentence encoder) – это модель, которая сопоставляет коротким текстам векторы в многомерном пространстве, причём так, что у текстов, похожих по смыслу, и векторы тоже похожи.",
      "terms": [
        {
          "class": "Method",
          "value": "Энкодер предложений",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "sentence encoder",
          "start_pos": 21
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "sentence encoder",
            "start_pos": 21
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Энкодер предложений",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 939,
      "text": "Обычно для этой цели используются нейросети, а полученные векторы называются эмбеддингами.",
      "terms": [
        {
          "class": "Method",
          "value": "нейросети",
          "start_pos": 34
        },
        {
          "class": "Object",
          "value": "эмбеддингами",
          "start_pos": 77
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "нейросети",
            "start_pos": 34
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "эмбеддингами",
            "start_pos": 77
          }
        }
      ]
    },
    {
      "id": 940,
      "text": "Они полезны для кучи задач, например, few-shot классификации текстов, семантического поиска, или оценки качества перефразирования.",
      "terms": [
        {
          "class": "Task",
          "value": "few-shot классификации текстов",
          "start_pos": 38
        },
        {
          "class": "Task",
          "value": "семантического поиска",
          "start_pos": 70
        },
        {
          "class": "Task",
          "value": "оценки качества перефразирования",
          "start_pos": 97
        }
      ],
      "relations": []
    },
    {
      "id": 941,
      "text": "Самой качественной моделью оказался mUSE, самой быстрой из предобученных – FastText, а по балансу скорости и качества победил rubert-tiny2.",
      "terms": [
        {
          "class": "Model",
          "value": "mUSE",
          "start_pos": 36
        },
        {
          "class": "Model",
          "value": "FastText",
          "start_pos": 75
        },
        {
          "class": "Model",
          "value": "rubert-tiny2",
          "start_pos": 126
        }
      ],
      "relations": []
    },
    {
      "id": 942,
      "text": "Первой известной попыткой системно сравнить английские эмбеддинги предложений был SentEval, сочетающий чисто лингвистические задачи со вполне прикладными.",
      "terms": [
        {
          "class": "Lang",
          "value": "английские",
          "start_pos": 44
        },
        {
          "class": "Object",
          "value": "эмбеддинги",
          "start_pos": 55
        },
        {
          "class": "Dataset",
          "value": "SentEval",
          "start_pos": 82
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "SentEval",
            "start_pos": 82
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английские",
            "start_pos": 44
          }
        }
      ]
    },
    {
      "id": 943,
      "text": "Для русского языка тоже было создано немало разного рода бенчмарков NLU моделей:RussianSuperGLUE: бенчмарк \"сложных\" NLP задач; фокус на дообучаемых моделях.",
      "terms": [
        {
          "class": "Lang",
          "value": "русского",
          "start_pos": 4
        },
        {
          "class": "Model",
          "value": "NLU моделей",
          "start_pos": 68
        },
        {
          "class": "Metric",
          "value": "RussianSuperGLUE",
          "start_pos": 80
        },
        {
          "class": "Task",
          "value": "NLP задач",
          "start_pos": 117
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "RussianSuperGLUE",
            "start_pos": 80
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "NLU моделей",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "NLU моделей",
            "start_pos": 68
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NLP задач",
            "start_pos": 117
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "RussianSuperGLUE",
            "start_pos": 80
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NLP задач",
            "start_pos": 117
          }
        }
      ]
    },
    {
      "id": 944,
      "text": "MOROCCO: RussianSuperGLUE + оценка производительности, довольно трудновоспроизводимый бенчмарк.",
      "terms": [
        {
          "class": "Model",
          "value": "MOROCCO",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "RussianSuperGLUE",
          "start_pos": 9
        }
      ],
      "relations": []
    },
    {
      "id": 945,
      "text": "RuSentEval: бенчмарк BERT-подобных энкодеров предложений на лингвистических задачах.",
      "terms": [
        {
          "class": "Application",
          "value": "RuSentEval",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "BERT-подобных энкодеров предложений",
          "start_pos": 21
        }
      ],
      "relations": []
    },
    {
      "id": 946,
      "text": "SentEvalRu и deepPavlovEval: два хороших, но давно не обновлявшихся прикладных бенчмарка.",
      "terms": [
        {
          "class": "Application",
          "value": "SentEvalRu",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "deepPavlovEval",
          "start_pos": 13
        }
      ],
      "relations": []
    },
    {
      "id": 947,
      "text": "С тех пор появилось много новых русскоязычных моделей, включая rubert-tiny2, поэтому и бенчмарк пришло время обновить.",
      "terms": [
        {
          "class": "Model",
          "value": "rubert-tiny2",
          "start_pos": 63
        }
      ],
      "relations": []
    },
    {
      "id": 948,
      "text": "В основу бенчмарка легли BERT-подобные модели: sbert_large_nlu_ru, sbert_large_mt_nlu_ru, и ruRoberta-large от Сбера; rubert-base-cased-sentence, rubert-base-cased-conversational, distilrubert-tiny-cased-conversational, и distilrubert-base-cased-conversational от DeepPavlov; мои   rubert-tiny и rubert-tiny2; мультиязычные LaBSE (плюс урезанная версия LaBSE-en-ru) и старый добрый bert-base-multilingual-cased.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT-подобные модели",
          "start_pos": 25
        },
        {
          "class": "Model",
          "value": "sbert_large_nlu_ru",
          "start_pos": 47
        },
        {
          "class": "Model",
          "value": "sbert_large_mt_nlu_ru",
          "start_pos": 67
        },
        {
          "class": "Model",
          "value": "ruRoberta-large",
          "start_pos": 92
        },
        {
          "class": "Organization",
          "value": "Сбера",
          "start_pos": 111
        },
        {
          "class": "Model",
          "value": "rubert-base-cased-sentence",
          "start_pos": 118
        },
        {
          "class": "Model",
          "value": "rubert-base-cased-conversational",
          "start_pos": 146
        },
        {
          "class": "Model",
          "value": "distilrubert-tiny-cased-conversational",
          "start_pos": 180
        },
        {
          "class": "Model",
          "value": "distilrubert-base-cased-conversational",
          "start_pos": 222
        },
        {
          "class": "Organization",
          "value": "DeepPavlov",
          "start_pos": 264
        },
        {
          "class": "Model",
          "value": "rubert-tiny",
          "start_pos": 282
        },
        {
          "class": "Model",
          "value": "rubert-tiny2",
          "start_pos": 296
        },
        {
          "class": "Model",
          "value": "LaBSE",
          "start_pos": 324
        },
        {
          "class": "Model",
          "value": "LaBSE-en-ru",
          "start_pos": 353
        },
        {
          "class": "Model",
          "value": "bert-base-multilingual-cased",
          "start_pos": 382
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "sbert_large_nlu_ru",
            "start_pos": 47
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "sbert_large_mt_nlu_ru",
            "start_pos": 67
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruRoberta-large",
            "start_pos": 92
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-base-cased-sentence",
            "start_pos": 118
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-base-cased-conversational",
            "start_pos": 146
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "distilrubert-tiny-cased-conversational",
            "start_pos": 180
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "distilrubert-base-cased-conversational",
            "start_pos": 222
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-tiny",
            "start_pos": 282
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-tiny2",
            "start_pos": 296
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "LaBSE",
            "start_pos": 324
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "LaBSE-en-ru",
            "start_pos": 353
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "bert-base-multilingual-cased",
            "start_pos": 382
          },
          "predicate": "isModificationOf",
          "term2": {
            "class": "Model",
            "value": "BERT-подобные модели",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "sbert_large_nlu_ru",
            "start_pos": 47
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбера",
            "start_pos": 111
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "sbert_large_mt_nlu_ru",
            "start_pos": 67
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбера",
            "start_pos": 111
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruRoberta-large",
            "start_pos": 92
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сбера",
            "start_pos": 111
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-base-cased-sentence",
            "start_pos": 118
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "DeepPavlov",
            "start_pos": 264
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-base-cased-conversational",
            "start_pos": 146
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "DeepPavlov",
            "start_pos": 264
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "distilrubert-tiny-cased-conversational",
            "start_pos": 180
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "DeepPavlov",
            "start_pos": 264
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "distilrubert-base-cased-conversational",
            "start_pos": 222
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "DeepPavlov",
            "start_pos": 264
          }
        }
      ]
    },
    {
      "id": 949,
      "text": "Кроме этого, я добавил в бенчмарк разные T5 модели, т.к. они тоже должны хорошо понимать тексты: мои rut5-small, rut5-base, rut5-base-multitask, и rut5-base-paraphraser, и Сберовские ruT5-base и ruT5-large.",
      "terms": [
        {
          "class": "Model",
          "value": "T5 модели",
          "start_pos": 41
        },
        {
          "class": "Model",
          "value": "rut5-small",
          "start_pos": 101
        },
        {
          "class": "Model",
          "value": "rut5-base",
          "start_pos": 113
        },
        {
          "class": "Model",
          "value": "rut5-base-multitask",
          "start_pos": 124
        },
        {
          "class": "Model",
          "value": "rut5-base-paraphraser",
          "start_pos": 147
        },
        {
          "class": "Organization",
          "value": "Сберовские",
          "start_pos": 172
        },
        {
          "class": "Model",
          "value": "ruT5-base",
          "start_pos": 183
        },
        {
          "class": "Model",
          "value": "ruT5-large",
          "start_pos": 195
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ruT5-large",
            "start_pos": 195
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сберовские",
            "start_pos": 172
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ruT5-base",
            "start_pos": 183
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Сберовские",
            "start_pos": 172
          }
        }
      ]
    },
    {
      "id": 950,
      "text": "Помимо BERTов и T5, я включил в бенчмарк большие мультиязычные модели Laser от FAIR и USE-multilingual-large от Google.",
      "terms": [
        {
          "class": "Model",
          "value": "Laser",
          "start_pos": 70
        },
        {
          "class": "Organization",
          "value": "FAIR",
          "start_pos": 79
        },
        {
          "class": "Model",
          "value": "USE-multilingual-large",
          "start_pos": 86
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 112
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Laser",
            "start_pos": 70
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "FAIR",
            "start_pos": 79
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "USE-multilingual-large",
            "start_pos": 86
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 112
          }
        }
      ]
    },
    {
      "id": 951,
      "text": "В качестве быстрого бейзлайна, я добавил FastText, а именно, geowac_tokens_none_fasttextskipgram_300_5_2020  с RusVectores, а также его сжатую версию.",
      "terms": [
        {
          "class": "Model",
          "value": "FastText",
          "start_pos": 41
        },
        {
          "class": "Model",
          "value": "geowac_tokens_none_fasttextskipgram_300_5_2020",
          "start_pos": 61
        },
        {
          "class": "Model",
          "value": "RusVectores",
          "start_pos": 111
        }
      ],
      "relations": []
    },
    {
      "id": 952,
      "text": "Наконец, я добавил парочку \"моделей\", которые вообще не выучивают никаких параметров, а просто используют HashingVectorizer для превращения текста в вектор признаков.",
      "terms": [
        {
          "class": "Application",
          "value": "HashingVectorizer",
          "start_pos": 106
        }
      ],
      "relations": []
    },
    {
      "id": 953,
      "text": "Это доработанная версия rubert-tiny: я расширил словарь модели c 30К до 80К токенов, увеличил максимальную длину текста с 512 до 2048 токенов, и дообучил модель на комбинации задач masked language modelling, natural language inference, и аппроксимации эмбеддингов LaBSE.",
      "terms": [
        {
          "class": "Model",
          "value": "rubert-tiny",
          "start_pos": 24
        },
        {
          "class": "Task",
          "value": "masked language modelling",
          "start_pos": 181
        },
        {
          "class": "Task",
          "value": "natural language inference",
          "start_pos": 208
        },
        {
          "class": "Task",
          "value": "аппроксимации эмбеддингов LaBSE",
          "start_pos": 238
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "rubert-tiny",
            "start_pos": 24
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "masked language modelling",
            "start_pos": 181
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-tiny",
            "start_pos": 24
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "natural language inference",
            "start_pos": 208
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "rubert-tiny",
            "start_pos": 24
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "аппроксимации эмбеддингов LaBSE",
            "start_pos": 238
          }
        }
      ]
    },
    {
      "id": 954,
      "text": "В новой версии бенчмарка я оставил всё те же 10 задач, что и в прежней, но слегка изменил формат некоторых из них:Semantic text similarity (STS) на основе переведённого датасета STS-B; Paraphrase identification (PI) на основе датасета paraphraser.ru;Natural language inference (NLI) на датасете XNLI; Sentiment analysis (SA) на данных SentiRuEval2016.",
      "terms": [
        {
          "class": "Task",
          "value": "Semantic text similarity",
          "start_pos": 114
        },
        {
          "class": "Task",
          "value": "STS",
          "start_pos": 140
        },
        {
          "class": "Dataset",
          "value": "STS-B",
          "start_pos": 178
        },
        {
          "class": "Task",
          "value": "Paraphrase identification",
          "start_pos": 185
        },
        {
          "class": "Task",
          "value": "PI",
          "start_pos": 212
        },
        {
          "class": "Dataset",
          "value": "paraphraser.ru",
          "start_pos": 235
        },
        {
          "class": "Task",
          "value": "Natural language inference",
          "start_pos": 250
        },
        {
          "class": "Task",
          "value": "NLI",
          "start_pos": 278
        },
        {
          "class": "Dataset",
          "value": "XNLI",
          "start_pos": 295
        },
        {
          "class": "Task",
          "value": "Sentiment analysis",
          "start_pos": 301
        },
        {
          "class": "Task",
          "value": "SA",
          "start_pos": 321
        },
        {
          "class": "Dataset",
          "value": "SentiRuEval2016",
          "start_pos": 335
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "SentiRuEval2016",
            "start_pos": 335
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "SA",
            "start_pos": 321
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "SentiRuEval2016",
            "start_pos": 335
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Sentiment analysis",
            "start_pos": 301
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "XNLI",
            "start_pos": 295
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 278
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "XNLI",
            "start_pos": 295
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Natural language inference",
            "start_pos": 250
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "SA",
            "start_pos": 321
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Sentiment analysis",
            "start_pos": 301
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 278
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Natural language inference",
            "start_pos": 250
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "paraphraser.ru",
            "start_pos": 235
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "PI",
            "start_pos": 212
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "paraphraser.ru",
            "start_pos": 235
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Paraphrase identification",
            "start_pos": 185
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "PI",
            "start_pos": 212
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Paraphrase identification",
            "start_pos": 185
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "STS-B",
            "start_pos": 178
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "STS",
            "start_pos": 140
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "STS-B",
            "start_pos": 178
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Semantic text similarity",
            "start_pos": 114
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "STS",
            "start_pos": 140
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Semantic text similarity",
            "start_pos": 114
          }
        }
      ]
    },
    {
      "id": 955,
      "text": "В прошлой версии бенчмарка я собрал кривые тестовые выборки, поэтому этот датасет я переделал; Toxicity identification (TI) на датасете токсичных комментариев из OKMLCup; Inappropriateness identification (II) на датасете Сколтеха; Intent classification (IC) и её кросс-язычная версия ICX на датасете NLU-evaluation-data, который я автоматически перевёл на русский.",
      "terms": [
        {
          "class": "Task",
          "value": "Toxicity identification",
          "start_pos": 95
        },
        {
          "class": "Task",
          "value": "TI",
          "start_pos": 120
        },
        {
          "class": "Dataset",
          "value": "датасете токсичных комментариев",
          "start_pos": 127
        },
        {
          "class": "Application",
          "value": "OKMLCup",
          "start_pos": 162
        },
        {
          "class": "Task",
          "value": "Inappropriateness identification",
          "start_pos": 171
        },
        {
          "class": "Task",
          "value": "II",
          "start_pos": 205
        },
        {
          "class": "Dataset",
          "value": "датасете Сколтеха",
          "start_pos": 212
        },
        {
          "class": "Task",
          "value": "Intent classification",
          "start_pos": 231
        },
        {
          "class": "Task",
          "value": "IC",
          "start_pos": 254
        },
        {
          "class": "Task",
          "value": "ICX",
          "start_pos": 284
        },
        {
          "class": "Dataset",
          "value": "NLU-evaluation-data",
          "start_pos": 300
        },
        {
          "class": "Lang",
          "value": "русский",
          "start_pos": 356
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "NLU-evaluation-data",
            "start_pos": 300
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русский",
            "start_pos": 356
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "NLU-evaluation-data",
            "start_pos": 300
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "IC",
            "start_pos": 254
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "NLU-evaluation-data",
            "start_pos": 300
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Intent classification",
            "start_pos": 231
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "NLU-evaluation-data",
            "start_pos": 300
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "ICX",
            "start_pos": 284
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "IC",
            "start_pos": 254
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Intent classification",
            "start_pos": 231
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "датасете Сколтеха",
            "start_pos": 212
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "II",
            "start_pos": 205
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "датасете Сколтеха",
            "start_pos": 212
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Inappropriateness identification",
            "start_pos": 171
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "II",
            "start_pos": 205
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Inappropriateness identification",
            "start_pos": 171
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "датасете токсичных комментариев",
            "start_pos": 127
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "TI",
            "start_pos": 120
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "датасете токсичных комментариев",
            "start_pos": 127
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Toxicity identification",
            "start_pos": 95
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "TI",
            "start_pos": 120
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "Toxicity identification",
            "start_pos": 95
          }
        }
      ]
    },
    {
      "id": 956,
      "text": "В IC классификатор обучается на русских данных, а в ICX – на английских, а тестируется в обоих случаях на русских.",
      "terms": [
        {
          "class": "Model",
          "value": "IC классификатор",
          "start_pos": 2
        },
        {
          "class": "Lang",
          "value": "русских",
          "start_pos": 32
        },
        {
          "class": "Model",
          "value": "ICX",
          "start_pos": 52
        },
        {
          "class": "Lang",
          "value": "английских",
          "start_pos": 61
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "IC классификатор",
            "start_pos": 2
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русских",
            "start_pos": 32
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "ICX",
            "start_pos": 52
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английских",
            "start_pos": 61
          }
        }
      ]
    },
    {
      "id": 957,
      "text": "Распознавание именованных сущностей () на датасетах factRuEval-2016E1 и RuDReC (NE2).",
      "terms": [
        {
          "class": "Task",
          "value": "Распознавание именованных сущностей",
          "start_pos": 0
        },
        {
          "class": "Dataset",
          "value": "factRuEval-2016E1",
          "start_pos": 52
        },
        {
          "class": "Dataset",
          "value": "RuDReC",
          "start_pos": 72
        },
        {
          "class": "Dataset",
          "value": "NE2",
          "start_pos": 80
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "NE2",
            "start_pos": 80
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Dataset",
            "value": "RuDReC",
            "start_pos": 72
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "factRuEval-2016E1",
            "start_pos": 52
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Распознавание именованных сущностей",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "RuDReC",
            "start_pos": 72
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Распознавание именованных сущностей",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "NE2",
            "start_pos": 80
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "Распознавание именованных сущностей",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 958,
      "text": "Эти две задачи требуют получать эмбеддинги отдельных токенов, а не целых предложений; поэтому модели USE и Laser, не выдающие эмбеддинги токенов \"из коробки\", в оценке этих задач не участвовали.",
      "terms": [
        {
          "class": "Model",
          "value": "USE",
          "start_pos": 101
        },
        {
          "class": "Model",
          "value": "Laser",
          "start_pos": 107
        }
      ],
      "relations": []
    },
    {
      "id": 959,
      "text": "В задачах STS, PI и NLI оценивается степень связи двух текстов.",
      "terms": [
        {
          "class": "Task",
          "value": "STS",
          "start_pos": 10
        },
        {
          "class": "Task",
          "value": "PI",
          "start_pos": 15
        },
        {
          "class": "Task",
          "value": "NLI",
          "start_pos": 20
        }
      ],
      "relations": []
    },
    {
      "id": 960,
      "text": "Хороший энкодер предложений должен отражать эту степень в их косинусной близости, поэтому для STS и PI мы измеряем качество как Спирмановскую корреляцию косинусной близости и человеческих оценок сходства.",
      "terms": [
        {
          "class": "Metric",
          "value": "косинусной",
          "start_pos": 61
        },
        {
          "class": "Metric",
          "value": "близости",
          "start_pos": 72
        },
        {
          "class": "Task",
          "value": "STS",
          "start_pos": 94
        },
        {
          "class": "Task",
          "value": "PI",
          "start_pos": 100
        },
        {
          "class": "Metric",
          "value": "Спирмановскую корреляцию",
          "start_pos": 128
        }
      ],
      "relations": []
    },
    {
      "id": 961,
      "text": "Для NLI я обучил трёхклассовую (entail/contradict/neutral) логистическую регрессию поверх косинусной близости, и измеряю её точность (accuracy).",
      "terms": [
        {
          "class": "Task",
          "value": "NLI",
          "start_pos": 4
        },
        {
          "class": "Model",
          "value": "логистическую регрессию",
          "start_pos": 59
        },
        {
          "class": "Metric",
          "value": "косинусной близости",
          "start_pos": 90
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 124
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 134
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 134
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 4
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 124
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 4
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 134
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "логистическую регрессию",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 124
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "логистическую регрессию",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "косинусной близости",
            "start_pos": 90
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "логистическую регрессию",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "логистическую регрессию",
            "start_pos": 59
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 4
          }
        }
      ]
    },
    {
      "id": 962,
      "text": "Для задачи NLI я провел обучение логистической регрессии с тремя классами (entail/contradict/neutral) на основе косинусной близости и измеряю ее точность (accuracy).",
      "terms": [
        {
          "class": "Task",
          "value": "NLI",
          "start_pos": 11
        },
        {
          "class": "Model",
          "value": "логистической регрессии",
          "start_pos": 33
        },
        {
          "class": "Metric",
          "value": "косинусной близости",
          "start_pos": 112
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 145
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 155
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 155
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 11
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 145
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 11
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 155
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "логистической регрессии",
            "start_pos": 33
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 145
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "логистической регрессии",
            "start_pos": 33
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "косинусной близости",
            "start_pos": 112
          },
          "predicate": "isUsedFor",
          "term2": {
            "class": "Model",
            "value": "логистической регрессии",
            "start_pos": 33
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "логистической регрессии",
            "start_pos": 33
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "NLI",
            "start_pos": 11
          }
        }
      ]
    },
    {
      "id": 963,
      "text": "Для задач бинарной классификации TI и II я измеряю ROC AUC, а в задачах многоклассовой классификации SA, IC и ICX – точность (accuracy).",
      "terms": [
        {
          "class": "Task",
          "value": "TI",
          "start_pos": 33
        },
        {
          "class": "Task",
          "value": "II",
          "start_pos": 38
        },
        {
          "class": "Metric",
          "value": "ROC AUC",
          "start_pos": 51
        },
        {
          "class": "Task",
          "value": "SA",
          "start_pos": 101
        },
        {
          "class": "Task",
          "value": "IC",
          "start_pos": 105
        },
        {
          "class": "Task",
          "value": "ICX",
          "start_pos": 110
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 116
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 126
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 126
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "ICX",
            "start_pos": 110
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 126
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "IC",
            "start_pos": 105
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 126
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "SA",
            "start_pos": 101
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 116
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "ICX",
            "start_pos": 110
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 116
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "IC",
            "start_pos": 105
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 116
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "SA",
            "start_pos": 101
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "ROC AUC",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "TI",
            "start_pos": 33
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "ROC AUC",
            "start_pos": 51
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "II",
            "start_pos": 38
          }
        }
      ]
    },
    {
      "id": 964,
      "text": "Для всех задач классификации я обучаю логистическую регрессию либо KNN поверх эмбеддингов предложений, и выбираю лучшую модель из двух.",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 15
        },
        {
          "class": "Model",
          "value": "логистическую регрессию",
          "start_pos": 38
        },
        {
          "class": "Model",
          "value": "KNN",
          "start_pos": 67
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "логистическую регрессию",
            "start_pos": 38
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 15
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "KNN",
            "start_pos": 67
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 15
          }
        }
      ]
    },
    {
      "id": 965,
      "text": "Для задач NER я классифицировал токены логистической регрессией поверх их эмбеддингов, и измерял macro F1 по всем классам токенов, кроме О.",
      "terms": [
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 10
        },
        {
          "class": "Method",
          "value": "логистической регрессией",
          "start_pos": 39
        },
        {
          "class": "TERM",
          "value": "эмбеддингов",
          "start_pos": 74
        },
        {
          "class": "Metric",
          "value": "macro F1",
          "start_pos": 97
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "логистической регрессией",
            "start_pos": 39
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 10
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "macro F1",
            "start_pos": 97
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 10
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "macro F1",
            "start_pos": 97
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "логистической регрессией",
            "start_pos": 39
          }
        }
      ]
    },
    {
      "id": 966,
      "text": "В задаче извлечения именованных сущностей (NER) я использовал логистическую регрессию для классификации токенов на основе их эмбеддингов и вычислял macro F1 для всех классов токенов, кроме класса \"O\".",
      "terms": [
        {
          "class": "Task",
          "value": "извлечения именованных сущностей",
          "start_pos": 9
        },
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 43
        },
        {
          "class": "Method",
          "value": "логистическую регрессию",
          "start_pos": 62
        },
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 90
        },
        {
          "class": "Object",
          "value": "токенов",
          "start_pos": 104
        },
        {
          "class": "Object",
          "value": "эмбеддингов",
          "start_pos": 125
        },
        {
          "class": "Metric",
          "value": "macro F1",
          "start_pos": 148
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "токенов",
            "start_pos": 104
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "извлечения именованных сущностей",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "токенов",
            "start_pos": 104
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 43
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "токенов",
            "start_pos": 104
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "эмбеддингов",
            "start_pos": 125
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "извлечения именованных сущностей",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "эмбеддингов",
            "start_pos": 125
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 43
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "эмбеддингов",
            "start_pos": 125
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "macro F1",
            "start_pos": 148
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 43
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "логистическую регрессию",
            "start_pos": 62
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "токенов",
            "start_pos": 104
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "логистическую регрессию",
            "start_pos": 62
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "эмбеддингов",
            "start_pos": 125
          }
        },
        {
          "term1": {
            "class": "Task",
            "value": "NER",
            "start_pos": 43
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "извлечения именованных сущностей",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "логистическую регрессию",
            "start_pos": 62
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "извлечения именованных сущностей",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "логистическую регрессию",
            "start_pos": 62
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 43
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "логистическую регрессию",
            "start_pos": 62
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "macro F1",
            "start_pos": 148
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "извлечения именованных сущностей",
            "start_pos": 9
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "macro F1",
            "start_pos": 148
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 90
          }
        },
        {
          "term1": {
            "class": "Metric",
            "value": "macro F1",
            "start_pos": 148
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Method",
            "value": "логистическую регрессию",
            "start_pos": 62
          }
        }
      ]
    },
    {
      "id": 967,
      "text": "Поскольку разные модели токенизируют тексты по-разному, я токенизировал все тексты razdel'ом, и вычислял эмбеддинг слова как средний эмбеддинг его токенов.",
      "terms": [
        {
          "class": "Application",
          "value": "razdel'ом",
          "start_pos": 83
        }
      ],
      "relations": []
    },
    {
      "id": 968,
      "text": "Единого победителя нет, но MUSE, sbert_large_mt_nlu_ru и rubert-base-cased-sentence взяли по многу призовых мест.",
      "terms": [
        {
          "class": "Model",
          "value": "MUSE",
          "start_pos": 27
        },
        {
          "class": "Model",
          "value": "sbert_large_mt_nlu_ru",
          "start_pos": 33
        },
        {
          "class": "Model",
          "value": "rubert-base-cased-sentence",
          "start_pos": 57
        }
      ],
      "relations": []
    },
    {
      "id": 969,
      "text": "Удивительно, но модели T5 очень хорошо показали себя на задачах NER.",
      "terms": [
        {
          "class": "Model",
          "value": "T5",
          "start_pos": 23
        },
        {
          "class": "Task",
          "value": "NER",
          "start_pos": 64
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "T5",
            "start_pos": 23
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "NER",
            "start_pos": 64
          }
        }
      ]
    },
    {
      "id": 970,
      "text": "Самыми качественными энкодерами предложений оказались мультиязычные MUSE, LaBSE и Laser.",
      "terms": [
        {
          "class": "Model",
          "value": "MUSE",
          "start_pos": 68
        },
        {
          "class": "Model",
          "value": "LaBSE",
          "start_pos": 74
        },
        {
          "class": "Model",
          "value": "Laser",
          "start_pos": 82
        }
      ],
      "relations": []
    },
    {
      "id": 971,
      "text": "Но выбирать стоит из Парето-оптимальных моделей: таких, что ни одна другая модель не превосходит их по всем критериям.",
      "terms": [
        {
          "class": "Model",
          "value": "Парето-оптимальных моделей",
          "start_pos": 21
        }
      ],
      "relations": []
    },
    {
      "id": 972,
      "text": "Из 25 моделей только 12 Парето-оптимальны:MUSE, rubert-tiny2, FT_geowac, Hashing_1000_char и Hashing_1000 обладают самым лучшим качеством для своей скорости на CPU; MUSE, LaBSE, rubert-tiny2, и distilbert-tiny обладают наилучшим качеством для своей скорости на GPU;MUSE, LaBSE, rubert-tiny2, rubert-tiny, FT_geowac_21mb, и Hashing_1000_char обладают наилучшим качеством для своего размера.",
      "terms": [
        {
          "class": "Model",
          "value": "MUSE",
          "start_pos": 42
        },
        {
          "class": "Model",
          "value": "rubert-tiny2",
          "start_pos": 48
        },
        {
          "class": "Model",
          "value": "FT_geowac",
          "start_pos": 62
        },
        {
          "class": "Model",
          "value": "Hashing_1000_char",
          "start_pos": 73
        },
        {
          "class": "Model",
          "value": "Hashing_1000",
          "start_pos": 93
        },
        {
          "class": "Model",
          "value": "MUSE",
          "start_pos": 165
        },
        {
          "class": "Model",
          "value": "LaBSE",
          "start_pos": 171
        },
        {
          "class": "Model",
          "value": "rubert-tiny2",
          "start_pos": 178
        },
        {
          "class": "Model",
          "value": "distilbert-tiny",
          "start_pos": 194
        },
        {
          "class": "Model",
          "value": "MUSE",
          "start_pos": 265
        },
        {
          "class": "Model",
          "value": "LaBSE",
          "start_pos": 271
        },
        {
          "class": "Model",
          "value": "rubert-tiny2",
          "start_pos": 278
        },
        {
          "class": "Model",
          "value": "rubert-tiny",
          "start_pos": 292
        },
        {
          "class": "Model",
          "value": "FT_geowac_21",
          "start_pos": 305
        },
        {
          "class": "Model",
          "value": "Hashing_1000_char",
          "start_pos": 323
        }
      ],
      "relations": []
    },
    {
      "id": 973,
      "text": "Однажды нам понадобилось выбрать синтаксический парсер для работы с русским языком.",
      "terms": [
        {
          "class": "Application",
          "value": "синтаксический парсер",
          "start_pos": 33
        }
      ],
      "relations": []
    },
    {
      "id": 974,
      "text": "Для этого мы углубились в дебри морфологии и токенизации, протестировали разные варианты и оценили их применение.",
      "terms": [
        {
          "class": "Science",
          "value": "морфологии",
          "start_pos": 32
        },
        {
          "class": "Method",
          "value": "токенизации",
          "start_pos": 45
        }
      ],
      "relations": []
    },
    {
      "id": 975,
      "text": "В первой строке предложение разобрано в рамках грамматики зависимостей.",
      "terms": [
        {
          "class": "Method",
          "value": "грамматики зависимостей",
          "start_pos": 47
        }
      ],
      "relations": []
    },
    {
      "id": 976,
      "text": "Во второй строке разбор идет в соответствии с грамматикой непосредственно составляющих.",
      "terms": [
        {
          "class": "Method",
          "value": "грамматикой непосредственно составляющих",
          "start_pos": 46
        }
      ],
      "relations": []
    },
    {
      "id": 977,
      "text": "Поэтому в автоматическом парсинге русского языка принято работать исходя из грамматики зависимостей.",
      "terms": [
        {
          "class": "Task",
          "value": "автоматическом парсинге",
          "start_pos": 10
        },
        {
          "class": "Lang",
          "value": "русского",
          "start_pos": 34
        },
        {
          "class": "Method",
          "value": "грамматики зависимостей",
          "start_pos": 76
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "грамматики зависимостей",
            "start_pos": 76
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "автоматическом парсинге",
            "start_pos": 10
          }
        }
      ]
    },
    {
      "id": 978,
      "text": "Чтобы облегчить себе выбор парсера, мы обратили свой взгляд на проект Universal Dependencies и недавно прошедшее в его рамках соревнование CoNLL Shared Task.",
      "terms": [
        {
          "class": "Activity",
          "value": "Universal Dependencies",
          "start_pos": 70
        }
      ],
      "relations": []
    },
    {
      "id": 979,
      "text": "Universal Dependencies — это проект по унификации разметки синтаксических корпусов (трибанков) в рамках грамматики зависимостей.",
      "terms": [
        {
          "class": "Activity",
          "value": "Universal Dependencies",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "унификации разметки",
          "start_pos": 39
        },
        {
          "class": "Object",
          "value": "синтаксических корпусов",
          "start_pos": 59
        },
        {
          "class": "Object",
          "value": "трибанков",
          "start_pos": 84
        },
        {
          "class": "Method",
          "value": "грамматики зависимостей",
          "start_pos": 104
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "грамматики зависимостей",
            "start_pos": 104
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "синтаксических корпусов",
            "start_pos": 59
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "грамматики зависимостей",
            "start_pos": 104
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "трибанков",
            "start_pos": 84
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "грамматики зависимостей",
            "start_pos": 104
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "унификации разметки",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "синтаксических корпусов",
            "start_pos": 59
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "унификации разметки",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "трибанков",
            "start_pos": 84
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "унификации разметки",
            "start_pos": 39
          }
        }
      ]
    },
    {
      "id": 980,
      "text": "Мы можем оценивать, правильно ли нашли вершину слова — метрика UAS (Unlabeled attachment score).",
      "terms": [
        {
          "class": "Metric",
          "value": "UAS",
          "start_pos": 63
        },
        {
          "class": "Metric",
          "value": "Unlabeled attachment score",
          "start_pos": 68
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Unlabeled attachment score",
            "start_pos": 68
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "UAS",
            "start_pos": 63
          }
        }
      ]
    },
    {
      "id": 981,
      "text": "Мы можем оценивать, корректно ли обнаружены вершины слова, используя метрику UAS (Unlabeled Attachment Score).",
      "terms": [
        {
          "class": "Metric",
          "value": "UAS",
          "start_pos": 77
        },
        {
          "class": "Metric",
          "value": "Unlabeled Attachment Score",
          "start_pos": 82
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Unlabeled Attachment Score",
            "start_pos": 82
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "UAS",
            "start_pos": 77
          }
        }
      ]
    },
    {
      "id": 982,
      "text": "Или оценивать, правильно ли найдена как вершина, так и тип зависимости — метрика LAS (Labeled attachment score).",
      "terms": [
        {
          "class": "Metric",
          "value": "LAS",
          "start_pos": 81
        },
        {
          "class": "Metric",
          "value": "Labeled attachment score",
          "start_pos": 86
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Labeled attachment score",
            "start_pos": 86
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "LAS",
            "start_pos": 81
          }
        }
      ]
    },
    {
      "id": 983,
      "text": "Либо проверять, были ли правильно определены и вершина, и тип зависимости, используя метрику LAS (Labeled Attachment Score).",
      "terms": [
        {
          "class": "Metric",
          "value": "LAS",
          "start_pos": 93
        },
        {
          "class": "Metric",
          "value": "Labeled Attachment Score",
          "start_pos": 98
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "Labeled Attachment Score",
            "start_pos": 98
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "LAS",
            "start_pos": 93
          }
        }
      ]
    },
    {
      "id": 984,
      "text": "Казалось бы, здесь напрашивается оценка точности (accuracy) — считаем, сколько раз мы попали из общего количества случаев.",
      "terms": [
        {
          "class": "Metric",
          "value": "точности",
          "start_pos": 40
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 50
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "accuracy",
            "start_pos": 50
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "точности",
            "start_pos": 40
          }
        }
      ]
    },
    {
      "id": 985,
      "text": "Разработчики, решающие задачи автоматического парсинга, часто берут на вход сырой текст, который в соответствии с пирамидой анализа проходит этапы токенизации и морфологического анализа.",
      "terms": [
        {
          "class": "Task",
          "value": "автоматического парсинга",
          "start_pos": 30
        },
        {
          "class": "Method",
          "value": "токенизации",
          "start_pos": 147
        },
        {
          "class": "Method",
          "value": "морфологического анализа",
          "start_pos": 161
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "токенизации",
            "start_pos": 147
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "автоматического парсинга",
            "start_pos": 30
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "морфологического анализа",
            "start_pos": 161
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "автоматического парсинга",
            "start_pos": 30
          }
        }
      ]
    },
    {
      "id": 986,
      "text": "Поэтому формулой оценки в данном случае является ф-мера, где точность (precision) — доля точных попаданий относительно общего числа предсказаний, а полнота — доля точных попаданий относительно числа связей в размеченных данных.",
      "terms": [
        {
          "class": "Metric",
          "value": "ф-мера",
          "start_pos": 49
        },
        {
          "class": "Metric",
          "value": "точность",
          "start_pos": 61
        },
        {
          "class": "Metric",
          "value": "precision",
          "start_pos": 71
        },
        {
          "class": "Metric",
          "value": "полнота",
          "start_pos": 148
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Metric",
            "value": "precision",
            "start_pos": 71
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Metric",
            "value": "точность",
            "start_pos": 61
          }
        }
      ]
    },
    {
      "id": 987,
      "text": "Очевидно, что все эксперименты проводятся на SynTagRus (разработка ИППИ РАН), в котором более миллиона токенов.",
      "terms": [
        {
          "class": "Activity",
          "value": "эксперименты",
          "start_pos": 18
        },
        {
          "class": "Dataset",
          "value": "SynTagRus",
          "start_pos": 45
        },
        {
          "class": "Organization",
          "value": "ИППИ РАН",
          "start_pos": 67
        },
        {
          "class": "Object",
          "value": "токенов",
          "start_pos": 103
        }
      ],
      "relations": []
    },
    {
      "id": 988,
      "text": "По итогам соревнования прошлого года модели, которые обучались на одном и том же SynTagRus, достигли следующих показателей LAS:",
      "terms": [
        {
          "class": "Dataset",
          "value": "SynTagRus",
          "start_pos": 81
        },
        {
          "class": "Metric",
          "value": "LAS",
          "start_pos": 123
        }
      ],
      "relations": []
    },
    {
      "id": 989,
      "text": "Забегая вперед, заметим, что новая версия UDPipe (Future) оказалась еще выше в этом году.",
      "terms": [
        {
          "class": "Application",
          "value": "UDPipe",
          "start_pos": 42
        },
        {
          "class": "Organization",
          "value": "Future",
          "start_pos": 50
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "UDPipe",
            "start_pos": 42
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Future",
            "start_pos": 50
          }
        }
      ]
    },
    {
      "id": 990,
      "text": "В список не вошел Syntaxnet — парсер Google.",
      "terms": [
        {
          "class": "Application",
          "value": "Syntaxnet",
          "start_pos": 18
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 37
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Syntaxnet",
            "start_pos": 18
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Google",
            "start_pos": 37
          }
        }
      ]
    },
    {
      "id": 991,
      "text": "Ответ прост: Syntaxnet начинался лишь с этапа морфологического анализа.",
      "terms": [
        {
          "class": "Application",
          "value": "Syntaxnet",
          "start_pos": 13
        },
        {
          "class": "Method",
          "value": "морфологического анализа",
          "start_pos": 46
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "морфологического анализа",
            "start_pos": 46
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "Syntaxnet",
            "start_pos": 13
          }
        }
      ]
    },
    {
      "id": 992,
      "text": "В качестве начальных данных у нас есть табличка выше с лидирующим Syntaxnet и с UDPipe 2.0 где-то на 7 месте.",
      "terms": [
        {
          "class": "Application",
          "value": "Syntaxnet",
          "start_pos": 66
        },
        {
          "class": "Application",
          "value": "UDPipe 2.0",
          "start_pos": 80
        }
      ],
      "relations": []
    },
    {
      "id": 993,
      "text": "Синтаксис, разумеется, далеко не единственный модуль «под капотом» real-time системы, поэтому тратить на него больше десятка миллисекунд не стоит.",
      "terms": [
        {
          "class": "Science",
          "value": "Синтаксис",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "real-time",
          "start_pos": 67
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "real-time",
            "start_pos": 67
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "Синтаксис",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 994,
      "text": "Разумеется, синтаксис - не единственный модуль real-time системы, поэтому нецелесообразно затрачивать на него более десятка миллисекунд.",
      "terms": [
        {
          "class": "Science",
          "value": "синтаксис",
          "start_pos": 12
        },
        {
          "class": "Application",
          "value": "real-time",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "real-time",
            "start_pos": 47
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "синтаксис",
            "start_pos": 12
          }
        }
      ]
    },
    {
      "id": 995,
      "text": "Для русского языка у нас есть достаточно хорошие морфологические анализаторы, которые могут встроиться в нашу пирамиду.",
      "terms": [
        {
          "class": "Lang",
          "value": "русского",
          "start_pos": 4
        },
        {
          "class": "Application",
          "value": "морфологические анализаторы",
          "start_pos": 49
        }
      ],
      "relations": []
    },
    {
      "id": 996,
      "text": "Затем начинает работу теггер — штука, которая предсказывает морфологические свойства токена: в каком падеже слово стоит, в каком числе.",
      "terms": [
        {
          "class": "Application",
          "value": "теггер",
          "start_pos": 22
        },
        {
          "class": "Object",
          "value": "морфологические свойства токена",
          "start_pos": 60
        }
      ],
      "relations": []
    },
    {
      "id": 997,
      "text": "В UDPipe есть еще лемматизатор, который подбирает для слов начальную форму.",
      "terms": [
        {
          "class": "Application",
          "value": "UDPipe",
          "start_pos": 2
        },
        {
          "class": "Application",
          "value": "лемматизатор",
          "start_pos": 18
        },
        {
          "class": "Object",
          "value": "начальную форму",
          "start_pos": 59
        }
      ],
      "relations": []
    },
    {
      "id": 998,
      "text": "UDPipe — это transition-based архитектура: она работает быстро, за линейное время проходя по всем токенам один раз.",
      "terms": [
        {
          "class": "Model",
          "value": "UDPipe",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "transition-based",
          "start_pos": 13
        },
        {
          "class": "Object",
          "value": "токенам",
          "start_pos": 98
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "transition-based",
            "start_pos": 13
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "UDPipe",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 999,
      "text": "RightArc — то же самое, но зависимость строится в другую сторону, и отбрасывается верхушка.",
      "terms": [
        {
          "class": "Model",
          "value": "RightArc",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 1000,
      "text": "У классических transition-based parser возможны три операции, перечисленные выше: стрелка в одну сторону, стрелка в другую сторону и шифт.",
      "terms": [
        {
          "class": "Application",
          "value": "transition-based parser",
          "start_pos": 15
        }
      ],
      "relations": []
    },
    {
      "id": 1001,
      "text": "Анализатор Mystem (разработка яндекса) в определении частей речи достигает лучших результатов, чем UDPipe.",
      "terms": [
        {
          "class": "Application",
          "value": "Mystem",
          "start_pos": 11
        },
        {
          "class": "Organization",
          "value": "яндекса",
          "start_pos": 30
        },
        {
          "class": "Application",
          "value": "UDPipe",
          "start_pos": 99
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Mystem",
            "start_pos": 11
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "яндекса",
            "start_pos": 30
          }
        }
      ]
    },
    {
      "id": 1002,
      "text": "Многие знают, что Mystem не полностью понимает морфологическую омонимию.",
      "terms": [
        {
          "class": "Application",
          "value": "Mystem",
          "start_pos": 18
        },
        {
          "class": "Object",
          "value": "морфологическую омонимию",
          "start_pos": 47
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Mystem",
            "start_pos": 18
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "морфологическую омонимию",
            "start_pos": 47
          }
        }
      ]
    },
    {
      "id": 1003,
      "text": "При помощи анализатора RNNMorph.",
      "terms": [
        {
          "class": "Application",
          "value": "RNNMorph",
          "start_pos": 23
        }
      ],
      "relations": []
    },
    {
      "id": 1004,
      "text": "Про него мало кто слышал, но в прошлом году он выиграл соревнование среди морфологических анализаторов, проводившееся в рамках конференции «Диалог».",
      "terms": [
        {
          "class": "Object",
          "value": "морфологических анализаторов",
          "start_pos": 74
        }
      ],
      "relations": []
    },
    {
      "id": 1005,
      "text": "Хотя если сравнивать их чисто на уровне качества морфологической разметки (данные с MorphoRuEval-2017), то проигрыш получается значительный — порядка 15%, если считать accuracy по словам.",
      "terms": [
        {
          "class": "Method",
          "value": "морфологической разметки",
          "start_pos": 49
        },
        {
          "class": "Metric",
          "value": "accuracy",
          "start_pos": 168
        }
      ],
      "relations": []
    },
    {
      "id": 1006,
      "text": "Дальше буду сравнивать нас с Syntaxnet и остальными алгоритмами.",
      "terms": [
        {
          "class": "Application",
          "value": "Syntaxnet",
          "start_pos": 29
        }
      ],
      "relations": []
    },
    {
      "id": 1007,
      "text": "Интересно, что мы почти дотянулись по метрике LAS до версии Syntaxnet.",
      "terms": [
        {
          "class": "Metric",
          "value": "LAS",
          "start_pos": 46
        },
        {
          "class": "Application",
          "value": "Syntaxnet",
          "start_pos": 60
        }
      ],
      "relations": []
    },
    {
      "id": 1008,
      "text": "В архитектуре стенфордского парсера и Syntaxnet заложена другая концепия: сначала они генерируют полный ориентированный граф, и дальше работа алгоритма состоит в том, чтобы оставить тот скелет (минимальное остовное дерево), который будет наиболее вероятным.",
      "terms": [
        {
          "class": "Application",
          "value": "Syntaxnet",
          "start_pos": 38
        },
        {
          "class": "Object",
          "value": "ориентированный граф",
          "start_pos": 104
        },
        {
          "class": "Object",
          "value": "минимальное остовное дерево",
          "start_pos": 194
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Syntaxnet",
            "start_pos": 38
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "ориентированный граф",
            "start_pos": 104
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Syntaxnet",
            "start_pos": 38
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "минимальное остовное дерево",
            "start_pos": 194
          }
        }
      ]
    },
    {
      "id": 1009,
      "text": "Поддержка NlpCraft IDL добавлена в систему начиная с версии 0.7.5.",
      "terms": [
        {
          "class": "Environment",
          "value": "NlpCraft IDL",
          "start_pos": 10
        }
      ],
      "relations": []
    },
    {
      "id": 1010,
      "text": "Новая версия декларативного языка определения интентов, получившая название NlpCraft IDL (NlpCraft Intents Definition Language), значительно упростила процесс работы с интентами в диалоговых и поисковых системах, построенных на базе проекта Apache NlpCraft и вместе с тем расширила возможности системы.",
      "terms": [
        {
          "class": "Environment",
          "value": "NlpCraft IDL",
          "start_pos": 76
        },
        {
          "class": "Environment",
          "value": "NlpCraft Intents Definition Language",
          "start_pos": 90
        },
        {
          "class": "Application",
          "value": "поисковых системах",
          "start_pos": 193
        },
        {
          "class": "Activity",
          "value": "Apache NlpCraft",
          "start_pos": 241
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Environment",
            "value": "NlpCraft IDL",
            "start_pos": 76
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Application",
            "value": "поисковых системах",
            "start_pos": 193
          }
        }
      ]
    },
    {
      "id": 1011,
      "text": "NlpCraft IDL - это декларативный язык, позволяющий создавать определения интентов для их последующего использования в моделях Apache NlpCraft.",
      "terms": [
        {
          "class": "Environment",
          "value": "NlpCraft IDL",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "определения интентов",
          "start_pos": 61
        },
        {
          "class": "Model",
          "value": "Apache NlpCraft",
          "start_pos": 126
        }
      ],
      "relations": []
    },
    {
      "id": 1012,
      "text": "Чаще всего на практике в NLP приходится сталкиваться с задачей построения эмбеддингов.",
      "terms": [
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 25
        },
        {
          "class": "Task",
          "value": "построения эмбеддингов",
          "start_pos": 63
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "построения эмбеддингов",
            "start_pos": 63
          },
          "predicate": "isSolvedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 25
          }
        }
      ]
    },
    {
      "id": 1013,
      "text": "Для ее решения обычно используют один из следующих инструментов: Готовые векторы / эмбеддинги слов [6]; Внутренние состояния CNN, натренированных на таких задачах как, как определение фальшивых предложений / языковое моделирование / классификация [7]; Комбинация выше перечисленных методов; Кроме того, уже много раз было показано [9], что в качестве хорошего бейслайна для эмбеддингов предложений можно взять и просто усредненные (с парой незначительных деталей, которые сейчас опустим) векторы слов.",
      "terms": [
        {
          "class": "Object",
          "value": "векторы",
          "start_pos": 73
        },
        {
          "class": "Object",
          "value": "эмбеддинги слов",
          "start_pos": 83
        },
        {
          "class": "Method",
          "value": "CNN",
          "start_pos": 125
        },
        {
          "class": "Task",
          "value": "определение фальшивых предложений",
          "start_pos": 172
        },
        {
          "class": "Task",
          "value": "языковое моделирование",
          "start_pos": 208
        },
        {
          "class": "Task",
          "value": "классификация",
          "start_pos": 233
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 125
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение фальшивых предложений",
            "start_pos": 172
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 125
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "языковое моделирование",
            "start_pos": 208
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 125
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификация",
            "start_pos": 233
          }
        }
      ]
    },
    {
      "id": 1014,
      "text": "Выраженная в тексте эмоциональная оценка называется тональностью или сентиментом (от англ. sentiment — чувство; мнение, настроение) текста.",
      "terms": [
        {
          "class": "Object",
          "value": "эмоциональная оценка",
          "start_pos": 20
        },
        {
          "class": "Object",
          "value": "тональностью",
          "start_pos": 52
        },
        {
          "class": "Object",
          "value": "сентиментом",
          "start_pos": 69
        }
      ],
      "relations": []
    },
    {
      "id": 1015,
      "text": "Исторически сложилось так, что традиционный подход к сентимент анализу представляет собой задачу классификации текста (части текста) на две-три категории (негативный, позитивный, нейтральный или просто: негативный или позитивный) [Pang & Lee; Turney ].",
      "terms": [
        {
          "class": "Method",
          "value": "сентимент анализу",
          "start_pos": 53
        },
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 97
        },
        {
          "class": "Person",
          "value": "Pang",
          "start_pos": 231
        },
        {
          "class": "Person",
          "value": "Lee",
          "start_pos": 238
        },
        {
          "class": "Person",
          "value": "Turney",
          "start_pos": 243
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "сентимент анализу",
            "start_pos": 53
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Pang",
            "start_pos": 231
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "сентимент анализу",
            "start_pos": 53
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Lee",
            "start_pos": 238
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "сентимент анализу",
            "start_pos": 53
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Turney",
            "start_pos": 243
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "сентимент анализу",
            "start_pos": 53
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 97
          }
        }
      ]
    },
    {
      "id": 1016,
      "text": "Такой вид сентимент анализа называется объектной тональностью (object-based).",
      "terms": [
        {
          "class": "Method",
          "value": "сентимент анализа",
          "start_pos": 10
        },
        {
          "class": "Method",
          "value": "объектной тональностью",
          "start_pos": 39
        },
        {
          "class": "Method",
          "value": "object-based",
          "start_pos": 63
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "сентимент анализа",
            "start_pos": 10
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "объектной тональностью",
            "start_pos": 39
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "object-based",
            "start_pos": 63
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "объектной тональностью",
            "start_pos": 39
          }
        }
      ]
    },
    {
      "id": 1017,
      "text": "Таким образом, тональность высказывания определяется тремя компонентами: субъектом тональности (кто высказал оценку), объектом тональности (о ком или о чём высказана оценка) и собственно тональной оценкой (как оценили).",
      "terms": [
        {
          "class": "Object",
          "value": "тональность высказывания",
          "start_pos": 15
        },
        {
          "class": "Object",
          "value": "субъектом тональности",
          "start_pos": 73
        },
        {
          "class": "Object",
          "value": "объектом тональности",
          "start_pos": 118
        },
        {
          "class": "Object",
          "value": "тональной оценкой",
          "start_pos": 187
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "тональность высказывания",
            "start_pos": 15
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "тональной оценкой",
            "start_pos": 187
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "тональность высказывания",
            "start_pos": 15
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "объектом тональности",
            "start_pos": 118
          }
        },
        {
          "term1": {
            "class": "Object",
            "value": "тональность высказывания",
            "start_pos": 15
          },
          "predicate": "includes",
          "term2": {
            "class": "Object",
            "value": "субъектом тональности",
            "start_pos": 73
          }
        }
      ]
    },
    {
      "id": 1018,
      "text": "Еще одним направлением сентимент анализа является выявление негативности/позитивности атрибутов объекта тональности (feature-based/aspect-based sentiment analysis).",
      "terms": [
        {
          "class": "Method",
          "value": "сентимент анализа",
          "start_pos": 23
        },
        {
          "class": "Task",
          "value": "выявление негативности/позитивности атрибутов объекта тональности",
          "start_pos": 50
        },
        {
          "class": "Method",
          "value": "feature-based/aspect-based sentiment analysis",
          "start_pos": 117
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "сентимент анализа",
            "start_pos": 23
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "feature-based/aspect-based sentiment analysis",
            "start_pos": 117
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "сентимент анализа",
            "start_pos": 23
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "выявление негативности/позитивности атрибутов объекта тональности",
            "start_pos": 50
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "feature-based/aspect-based sentiment analysis",
            "start_pos": 117
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "выявление негативности/позитивности атрибутов объекта тональности",
            "start_pos": 50
          }
        }
      ]
    },
    {
      "id": 1019,
      "text": "При статистическом подходе для решения задачи общей классификации текстов на классы тональности широко используют метод опорных векторов (SVM), Байесовы модели, различного рода регрессии [Chetviorkin & Loukachevitch — описание соревнования ROMIP-2011 по сентимент анализу данных, практически все участники использовали SVM или Байес].",
      "terms": [
        {
          "class": "Task",
          "value": "классификации",
          "start_pos": 52
        },
        {
          "class": "Method",
          "value": "метод опорных векторов",
          "start_pos": 114
        },
        {
          "class": "Method",
          "value": "SVM",
          "start_pos": 138
        },
        {
          "class": "Model",
          "value": "Байесовы модели",
          "start_pos": 144
        },
        {
          "class": "Method",
          "value": "регрессии",
          "start_pos": 177
        },
        {
          "class": "Person",
          "value": "Chetviorkin",
          "start_pos": 188
        },
        {
          "class": "Person",
          "value": "Loukachevitch",
          "start_pos": 202
        },
        {
          "class": "Method",
          "value": "сентимент анализу",
          "start_pos": 254
        },
        {
          "class": "Method",
          "value": "SVM",
          "start_pos": 319
        },
        {
          "class": "Method",
          "value": "Байес",
          "start_pos": 327
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Байесовы модели",
            "start_pos": 144
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "метод опорных векторов",
            "start_pos": 114
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SVM",
            "start_pos": 138
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "регрессии",
            "start_pos": 177
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификации",
            "start_pos": 52
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "SVM",
            "start_pos": 138
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "метод опорных векторов",
            "start_pos": 114
          }
        }
      ]
    },
    {
      "id": 1020,
      "text": "Если же целью является определение тональности у определенного, заранее заданного объекта (нескольких объектов), то применяют более сложные статистические алгоритмы, такие как CRF [Антонова и Соловьев], алгоритмы семантической близости (например, латентно-семантический анализ – LSA, латентное размещение Дирихле — LDA) и др., а также методы, основанные на правилах [Пазельская и Соловьев].",
      "terms": [
        {
          "class": "Task",
          "value": "определение тональности",
          "start_pos": 23
        },
        {
          "class": "Method",
          "value": "статистические алгоритмы",
          "start_pos": 140
        },
        {
          "class": "Method",
          "value": "CRF",
          "start_pos": 176
        },
        {
          "class": "Person",
          "value": "Антонова",
          "start_pos": 181
        },
        {
          "class": "Person",
          "value": "Соловьев",
          "start_pos": 192
        },
        {
          "class": "Method",
          "value": "алгоритмы семантической близости",
          "start_pos": 203
        },
        {
          "class": "Method",
          "value": "латентно-семантический анализ",
          "start_pos": 247
        },
        {
          "class": "Method",
          "value": "LSA",
          "start_pos": 279
        },
        {
          "class": "Method",
          "value": "латентное размещение Дирихле",
          "start_pos": 284
        },
        {
          "class": "Method",
          "value": "LDA",
          "start_pos": 315
        },
        {
          "class": "Method",
          "value": "методы, основанные на правилах",
          "start_pos": 335
        },
        {
          "class": "Person",
          "value": "Пазельская",
          "start_pos": 367
        },
        {
          "class": "Person",
          "value": "Соловьев",
          "start_pos": 380
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "алгоритмы семантической близости",
            "start_pos": 203
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "латентно-семантический анализ",
            "start_pos": 247
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "LSA",
            "start_pos": 279
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "латентное размещение Дирихле",
            "start_pos": 284
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "LDA",
            "start_pos": 315
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы, основанные на правилах",
            "start_pos": 335
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы, основанные на правилах",
            "start_pos": 335
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Пазельская",
            "start_pos": 367
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "методы, основанные на правилах",
            "start_pos": 335
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Соловьев",
            "start_pos": 380
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "LDA",
            "start_pos": 315
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "латентное размещение Дирихле",
            "start_pos": 284
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритмы семантической близости",
            "start_pos": 203
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "латентное размещение Дирихле",
            "start_pos": 284
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "LSA",
            "start_pos": 279
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "латентно-семантический анализ",
            "start_pos": 247
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "алгоритмы семантической близости",
            "start_pos": 203
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "латентно-семантический анализ",
            "start_pos": 247
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CRF",
            "start_pos": 176
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Соловьев",
            "start_pos": 192
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CRF",
            "start_pos": 176
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Антонова",
            "start_pos": 181
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CRF",
            "start_pos": 176
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "статистические алгоритмы",
            "start_pos": 140
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "определение тональности",
            "start_pos": 23
          }
        }
      ]
    },
    {
      "id": 1021,
      "text": "Если для дальнейшей обработки не важен порядок слов, то текст упаковывают в Мешок слов (Bag-of-words).",
      "terms": [
        {
          "class": "Object",
          "value": "текст",
          "start_pos": 56
        },
        {
          "class": "Method",
          "value": "Мешок слов",
          "start_pos": 76
        },
        {
          "class": "Method",
          "value": "Bag-of-words",
          "start_pos": 88
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "Мешок слов",
            "start_pos": 76
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текст",
            "start_pos": 56
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Bag-of-words",
            "start_pos": 88
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "текст",
            "start_pos": 56
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Bag-of-words",
            "start_pos": 88
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Мешок слов",
            "start_pos": 76
          }
        }
      ]
    },
    {
      "id": 1022,
      "text": "В обучающей выборке мы имеем письма с отметками спам/не спам, и скармливаем их в нейросеть: в полносвязную сеть и CNN подаем Bag-of-words, а в RNN уже можно учесть порядок слов, отправив ей Word Vector.",
      "terms": [
        {
          "class": "Method",
          "value": "CNN",
          "start_pos": 114
        },
        {
          "class": "Method",
          "value": "Bag-of-words",
          "start_pos": 125
        },
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 143
        },
        {
          "class": "Object",
          "value": "Word Vector",
          "start_pos": 190
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "RNN",
            "start_pos": 143
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "Word Vector",
            "start_pos": 190
          }
        }
      ]
    },
    {
      "id": 1023,
      "text": "Удалось найти лишь это упоминание про систему Deepgram.",
      "terms": [
        {
          "class": "Application",
          "value": "Deepgram",
          "start_pos": 46
        }
      ],
      "relations": []
    },
    {
      "id": 1024,
      "text": "Также очень похожая функциональность есть у Microsoft в Streams, но нигде не нашел упоминания про поддержку русского языка, судя по всему, ее тоже нет.",
      "terms": [
        {
          "class": "Organization",
          "value": "Microsoft",
          "start_pos": 44
        },
        {
          "class": "Application",
          "value": "Streams",
          "start_pos": 56
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Streams",
            "start_pos": 56
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Microsoft",
            "start_pos": 44
          }
        }
      ]
    },
    {
      "id": 1025,
      "text": "Нейросети, которые могут преобразовывать речь в текст называются (сюрприз-сюрприз), speech-to-text.",
      "terms": [
        {
          "class": "Task",
          "value": "преобразовывать речь в текст",
          "start_pos": 25
        },
        {
          "class": "Task",
          "value": "speech-to-text",
          "start_pos": 84
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Task",
            "value": "speech-to-text",
            "start_pos": 84
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Task",
            "value": "преобразовывать речь в текст",
            "start_pos": 25
          }
        }
      ]
    },
    {
      "id": 1026,
      "text": "Если получится найти публичный сервис speech-to-text, то его можно использовать, чтобы «оцифровать» речь во всех вебинарах, а сделать потом нечеткий поиск по тексту – более простая задача.",
      "terms": [
        {
          "class": "Application",
          "value": "сервис speech-to-text",
          "start_pos": 31
        },
        {
          "class": "Task",
          "value": "поиск по тексту",
          "start_pos": 149
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "сервис speech-to-text",
            "start_pos": 31
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "поиск по тексту",
            "start_pos": 149
          }
        }
      ]
    },
    {
      "id": 1027,
      "text": "Поиск сервисов, способных делать speech-to-text показал, что таких систем масса, в том числе и разработанных в России, есть среди них также глобальные облачные провайдеры вроде Google, Amazon, MS Azure.",
      "terms": [
        {
          "class": "Application",
          "value": "speech-to-text",
          "start_pos": 33
        },
        {
          "class": "Organization",
          "value": "Google",
          "start_pos": 177
        },
        {
          "class": "Organization",
          "value": "Amazon",
          "start_pos": 185
        },
        {
          "class": "Organization",
          "value": "MS Azure",
          "start_pos": 193
        }
      ],
      "relations": []
    },
    {
      "id": 1028,
      "text": "Custom Vocabularies – позволяет создать «словарь» из тех, слов, которые должна «выучить» нейросеть перед тем, как приступить к распознаванию.",
      "terms": [
        {
          "class": "Application",
          "value": "Custom Vocabularies",
          "start_pos": 0
        },
        {
          "class": "Task",
          "value": "распознаванию",
          "start_pos": 127
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Custom Vocabularies",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознаванию",
            "start_pos": 127
          }
        }
      ]
    },
    {
      "id": 1029,
      "text": "Можно попробовать прикрутить к итоговому набору текстов алгоритм BERT (Bi-directional Encoder Representation from Transformer), описание есть тут.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 65
        },
        {
          "class": "Model",
          "value": "Bi-directional Encoder Representation from Transformer",
          "start_pos": 71
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Bi-directional Encoder Representation from Transformer",
            "start_pos": 71
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 65
          }
        }
      ]
    },
    {
      "id": 1030,
      "text": "Вы можете попробовать интегрировать алгоритм BERT (Bi-directional Encoder Representation from Transformer) в окончательный набор текстов, описание которого доступно здесь.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 45
        },
        {
          "class": "Model",
          "value": "Bi-directional Encoder Representation from Transformer",
          "start_pos": 51
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "Bi-directional Encoder Representation from Transformer",
            "start_pos": 51
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 45
          }
        }
      ]
    },
    {
      "id": 1031,
      "text": "Сначала Яндекс распознаёт речь в текст с указанием таймингов и спикеров (за это отвечает голосовая биометрия).",
      "terms": [
        {
          "class": "Organization",
          "value": "Яндекс",
          "start_pos": 8
        },
        {
          "class": "Task",
          "value": "распознаёт речь",
          "start_pos": 15
        },
        {
          "class": "Task",
          "value": "голосовая биометрия",
          "start_pos": 89
        }
      ],
      "relations": []
    },
    {
      "id": 1032,
      "text": "Добавили поддержку немецкого, французского и испанского языков.",
      "terms": [
        {
          "class": "Lang",
          "value": "немецкого",
          "start_pos": 19
        },
        {
          "class": "Lang",
          "value": "французского",
          "start_pos": 30
        },
        {
          "class": "Lang",
          "value": "испанского",
          "start_pos": 45
        }
      ],
      "relations": []
    },
    {
      "id": 1033,
      "text": "Поэтому всё время существования как Яндекс Браузера, так и Яндекс Переводчика мы стараемся не просто переводить, но и помогать учить язык.",
      "terms": [
        {
          "class": "Application",
          "value": "Яндекс Браузера",
          "start_pos": 36
        },
        {
          "class": "Application",
          "value": "Яндекс Переводчика",
          "start_pos": 59
        }
      ],
      "relations": []
    },
    {
      "id": 1034,
      "text": "С 27 по 30 мая в Российском государственном гуманитарном университете (РГГУ) пройдет международная научная конференция по компьютерной лингвистике «Диалог».",
      "terms": [
        {
          "class": "Organization",
          "value": "Российском государственном гуманитарном университете",
          "start_pos": 17
        },
        {
          "class": "Organization",
          "value": "РГГУ",
          "start_pos": 71
        },
        {
          "class": "Activity",
          "value": "международная научная конференция по компьютерной лингвистике",
          "start_pos": 85
        },
        {
          "class": "Activity",
          "value": "Диалог",
          "start_pos": 148
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "РГГУ",
            "start_pos": 71
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Российском государственном гуманитарном университете",
            "start_pos": 17
          }
        }
      ]
    },
    {
      "id": 1035,
      "text": "Международная научная конференция по компьютерной лингвистике «Диалог» прошла в Российском государственном гуманитарном университете (РГГУ).",
      "terms": [
        {
          "class": "Activity",
          "value": "Международная научная конференция по компьютерной лингвистике",
          "start_pos": 0
        },
        {
          "class": "Activity",
          "value": "Диалог",
          "start_pos": 63
        },
        {
          "class": "Organization",
          "value": "Российском государственном гуманитарном университете",
          "start_pos": 80
        },
        {
          "class": "Organization",
          "value": "РГГУ",
          "start_pos": 134
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "РГГУ",
            "start_pos": 134
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Российском государственном гуманитарном университете",
            "start_pos": 80
          }
        }
      ]
    },
    {
      "id": 1036,
      "text": "Научная конференция по компьютерной лингвистике \"Диалог\" состоялась в Российском государственном гуманитарном университете (РГГУ).",
      "terms": [
        {
          "class": "Activity",
          "value": "Научная конференция по компьютерной лингвистике",
          "start_pos": 0
        },
        {
          "class": "Activity",
          "value": "Диалог",
          "start_pos": 49
        },
        {
          "class": "Organization",
          "value": "Российском государственном гуманитарном университете",
          "start_pos": 70
        },
        {
          "class": "Organization",
          "value": "РГГУ",
          "start_pos": 124
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "РГГУ",
            "start_pos": 124
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Российском государственном гуманитарном университете",
            "start_pos": 70
          }
        }
      ]
    },
    {
      "id": 1037,
      "text": "Подробно о том, что такое «Диалог» и почему ABBYY организует эту конференцию, мы писали здесь .",
      "terms": [
        {
          "class": "Activity",
          "value": "Диалог",
          "start_pos": 27
        },
        {
          "class": "Organization",
          "value": "ABBYY",
          "start_pos": 44
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "Диалог",
            "start_pos": 27
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "ABBYY",
            "start_pos": 44
          }
        }
      ]
    },
    {
      "id": 1038,
      "text": "Мы уже рассказали подробности о том, что представляет собой \"Диалог\" и почему ABBYY организует эту конференцию, в данной публикации.",
      "terms": [
        {
          "class": "Activity",
          "value": "Диалог",
          "start_pos": 61
        },
        {
          "class": "Organization",
          "value": "ABBYY",
          "start_pos": 78
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Activity",
            "value": "Диалог",
            "start_pos": 61
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "ABBYY",
            "start_pos": 78
          }
        }
      ]
    },
    {
      "id": 1039,
      "text": "Главной задачей проведенных ранее тестирований был автоматический анализ тональности в целом небольших текстов – отзывов пользователей (о фильмах, книгах, цифровых фотокамерах) или мнений, выраженных в форме прямой или косвенной речи (новости).",
      "terms": [
        {
          "class": "Task",
          "value": "автоматический анализ тональности",
          "start_pos": 51
        },
        {
          "class": "Object",
          "value": "текстов",
          "start_pos": 103
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "текстов",
            "start_pos": 103
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "автоматический анализ тональности",
            "start_pos": 51
          }
        }
      ]
    },
    {
      "id": 1040,
      "text": "Основной целью нового цикла тестирований является автоматическая оценка тональности по отношению к заданному объекту и его конкретным свойствам.",
      "terms": [
        {
          "class": "Activity",
          "value": "тестирований",
          "start_pos": 28
        },
        {
          "class": "Task",
          "value": "автоматическая оценка тональности",
          "start_pos": 50
        }
      ],
      "relations": []
    },
    {
      "id": 1041,
      "text": "Фишинговые электронные письма - это сообщения, которые кажутся очень похожими на настоящие, например, рассылку от вашего любимого интернет-магазина, но при этом они заманивают людей нажимать на прикрепленные вредоносные ссылки или документы.",
      "terms": [
        {
          "class": "Object",
          "value": "Фишинговые электронные письма",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 1042,
      "text": "Поэтому в статье предлагается способ обнаружения фишинговых сообщений, называемый Federated Phish Bowl (далее FPB), использующий федеративное обучение и рекуррентную нейронную сеть с долгой краткосрочной памятью (LSTM).",
      "terms": [
        {
          "class": "Method",
          "value": "способ обнаружения фишинговых сообщений",
          "start_pos": 30
        },
        {
          "class": "Method",
          "value": "Federated Phish Bowl",
          "start_pos": 82
        },
        {
          "class": "Method",
          "value": "FPB",
          "start_pos": 110
        },
        {
          "class": "Method",
          "value": "федеративное обучение",
          "start_pos": 129
        },
        {
          "class": "Model",
          "value": "рекуррентную нейронную сеть с долгой краткосрочной памятью",
          "start_pos": 153
        },
        {
          "class": "Model",
          "value": "LSTM",
          "start_pos": 213
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "FPB",
            "start_pos": 110
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "Federated Phish Bowl",
            "start_pos": 82
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "LSTM",
            "start_pos": 213
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "рекуррентную нейронную сеть с долгой краткосрочной памятью",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "способ обнаружения фишинговых сообщений",
            "start_pos": 30
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "рекуррентную нейронную сеть с долгой краткосрочной памятью",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Federated Phish Bowl",
            "start_pos": 82
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "рекуррентную нейронную сеть с долгой краткосрочной памятью",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "FPB",
            "start_pos": 110
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "рекуррентную нейронную сеть с долгой краткосрочной памятью",
            "start_pos": 153
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "способ обнаружения фишинговых сообщений",
            "start_pos": 30
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "LSTM",
            "start_pos": 213
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "Federated Phish Bowl",
            "start_pos": 82
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "LSTM",
            "start_pos": 213
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "FPB",
            "start_pos": 110
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "LSTM",
            "start_pos": 213
          }
        }
      ]
    },
    {
      "id": 1043,
      "text": "Для работы с текстовыми последовательностями были придуманы рекуррентные нейронные сети (RNN, их улучшение - LSTM, которая бывает двунаправленной, когда последовательность обрабатывается в двух направлениях).",
      "terms": [
        {
          "class": "Method",
          "value": "RNN",
          "start_pos": 89
        },
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 109
        }
      ],
      "relations": []
    },
    {
      "id": 1044,
      "text": "Например, сеть можно сделать двунаправленной (Bidirectional LSTM).",
      "terms": [
        {
          "class": "Method",
          "value": "Bidirectional LSTM",
          "start_pos": 46
        }
      ],
      "relations": []
    },
    {
      "id": 1045,
      "text": "FPB предлагает использовать подход, показанный на следующем изображении:",
      "terms": [
        {
          "class": "Method",
          "value": "FPB",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 1046,
      "text": "Федеративное обучение - это метод машинного обучения, который обучает алгоритм на нескольких децентрализованных устройствах или серверах, содержащих локальные образцы данных, без обмена ими.",
      "terms": [
        {
          "class": "Method",
          "value": "Федеративное обучение",
          "start_pos": 0
        },
        {
          "class": "Method",
          "value": "метод машинного обучения",
          "start_pos": 28
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "метод машинного обучения",
            "start_pos": 28
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "Федеративное обучение",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 1047,
      "text": "Для обучения модели FPB с использованием федеративного обучения (FL) сервер параметров (PS) инициализирует глобальную модель (DL) на основе вышеупомянутых двунаправленных нейронных сетей LSTM и отправляет глобальную модель с глобальной матрицей преобразования слов в векторы всем клиентам на первом этапе обучения.",
      "terms": [
        {
          "class": "Model",
          "value": "FPB",
          "start_pos": 20
        },
        {
          "class": "Method",
          "value": "федеративного обучения",
          "start_pos": 41
        },
        {
          "class": "Method",
          "value": "FL",
          "start_pos": 65
        },
        {
          "class": "Method",
          "value": "сервер параметров",
          "start_pos": 69
        },
        {
          "class": "Method",
          "value": "PS",
          "start_pos": 88
        },
        {
          "class": "Model",
          "value": "глобальную модель",
          "start_pos": 107
        },
        {
          "class": "Method",
          "value": "DL",
          "start_pos": 126
        },
        {
          "class": "Method",
          "value": "LSTM",
          "start_pos": 187
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "федеративного обучения",
            "start_pos": 41
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "FPB",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "FL",
            "start_pos": 65
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "FPB",
            "start_pos": 20
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "LSTM",
            "start_pos": 187
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "DL",
            "start_pos": 126
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "PS",
            "start_pos": 88
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "сервер параметров",
            "start_pos": 69
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "FL",
            "start_pos": 65
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "федеративного обучения",
            "start_pos": 41
          }
        }
      ]
    },
    {
      "id": 1048,
      "text": "В рамках курса вы узнаете: Как латентные переменные применяются в задачах анализа текстов и как строить глубинные генеративные модели с латентными дискретными переменными.",
      "terms": [
        {
          "class": "Object",
          "value": "латентные переменные",
          "start_pos": 31
        },
        {
          "class": "Task",
          "value": "анализа текстов",
          "start_pos": 74
        },
        {
          "class": "Model",
          "value": "глубинные генеративные модели",
          "start_pos": 104
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Object",
            "value": "латентные переменные",
            "start_pos": 31
          },
          "predicate": "isUsedInSolving",
          "term2": {
            "class": "Task",
            "value": "анализа текстов",
            "start_pos": 74
          }
        }
      ]
    },
    {
      "id": 1049,
      "text": "Что такое semantic parsing: как строить формальные представления смысла текста, извлекая при этом неявные значения.",
      "terms": [
        {
          "class": "Method",
          "value": "semantic parsing",
          "start_pos": 10
        }
      ],
      "relations": []
    },
    {
      "id": 1050,
      "text": "Британские ученые обучили ИИ трансформировать устную речь в видео с виртуальным сурдопереводчиком.",
      "terms": [
        {
          "class": "Object",
          "value": "устную речь",
          "start_pos": 46
        },
        {
          "class": "Application",
          "value": "виртуальным сурдопереводчиком",
          "start_pos": 68
        }
      ],
      "relations": []
    },
    {
      "id": 1051,
      "text": "В Университете Суррея разработчики создали алгоритм сурдоперевода нового поколения.",
      "terms": [
        {
          "class": "Organization",
          "value": "Университете Суррея",
          "start_pos": 2
        },
        {
          "class": "Method",
          "value": "алгоритм сурдоперевода",
          "start_pos": 43
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм сурдоперевода",
            "start_pos": 43
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Университете Суррея",
            "start_pos": 2
          }
        }
      ]
    },
    {
      "id": 1052,
      "text": "В Университете Суррея инженеры разработали новейший алгоритм сурдоперевода.",
      "terms": [
        {
          "class": "Organization",
          "value": "Университете Суррея",
          "start_pos": 2
        },
        {
          "class": "Method",
          "value": "алгоритм сурдоперевода",
          "start_pos": 52
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "алгоритм сурдоперевода",
            "start_pos": 52
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Университете Суррея",
            "start_pos": 2
          }
        }
      ]
    },
    {
      "id": 1053,
      "text": "После этого последовательность поз подается сверточной нейросети U-Net.",
      "terms": [
        {
          "class": "Method",
          "value": "U-Net",
          "start_pos": 65
        }
      ],
      "relations": []
    },
    {
      "id": 1054,
      "text": "Один из самых известных продуктов — анимированный виртуальный переводчик от IBM.",
      "terms": [
        {
          "class": "Application",
          "value": "IBM",
          "start_pos": 76
        }
      ],
      "relations": []
    },
    {
      "id": 1055,
      "text": "Программа, придуманная учеными из Новосибирского академгородка, распознает речь, анализирует смысл и переводит на жестовый язык.",
      "terms": [
        {
          "class": "Application",
          "value": "Программа",
          "start_pos": 0
        },
        {
          "class": "Organization",
          "value": "Новосибирского академгородка",
          "start_pos": 34
        },
        {
          "class": "Task",
          "value": "распознает речь",
          "start_pos": 64
        },
        {
          "class": "Task",
          "value": "анализирует смысл",
          "start_pos": 81
        },
        {
          "class": "Object",
          "value": "жестовый язык",
          "start_pos": 114
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Программа",
            "start_pos": 0
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "жестовый язык",
            "start_pos": 114
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Программа",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализирует смысл",
            "start_pos": 81
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Программа",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "распознает речь",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Программа",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Новосибирского академгородка",
            "start_pos": 34
          }
        }
      ]
    },
    {
      "id": 1056,
      "text": "В то время считали, что разработка станет такой же популярной, как Google Translator.",
      "terms": [
        {
          "class": "Application",
          "value": "Google Translator",
          "start_pos": 67
        }
      ],
      "relations": []
    },
    {
      "id": 1057,
      "text": "Российские ученые из Института проблем управления им. В.А. Трапезникова РАН (ИПУ РАН) несколько лет назад начали разработку подобного ИИ.",
      "terms": [
        {
          "class": "Organization",
          "value": "Института проблем управления им. В.А. Трапезникова РАН",
          "start_pos": 21
        },
        {
          "class": "Organization",
          "value": "ИПУ РАН",
          "start_pos": 77
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "ИПУ РАН",
            "start_pos": 77
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Института проблем управления им. В.А. Трапезникова РАН",
            "start_pos": 21
          }
        }
      ]
    },
    {
      "id": 1058,
      "text": "Несколько лет назад разработку такой системы начали специалисты из Института проблем управления им. В.А. Трапезникова РАН (ИПУ РАН).",
      "terms": [
        {
          "class": "Organization",
          "value": "Института проблем управления им. В.А. Трапезникова РАН",
          "start_pos": 67
        },
        {
          "class": "Organization",
          "value": "ИПУ РАН",
          "start_pos": 123
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "ИПУ РАН",
            "start_pos": 123
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Института проблем управления им. В.А. Трапезникова РАН",
            "start_pos": 67
          }
        }
      ]
    },
    {
      "id": 1059,
      "text": "Разработка системы началась недавно в Институте проблем управления им. В.А. Трапезникова РАН (ИПУ РАН).",
      "terms": [
        {
          "class": "Organization",
          "value": "Институте проблем управления им. В.А. Трапезникова РАН",
          "start_pos": 38
        },
        {
          "class": "Organization",
          "value": "ИПУ РАН",
          "start_pos": 94
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Organization",
            "value": "ИПУ РАН",
            "start_pos": 94
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Organization",
            "value": "Институте проблем управления им. В.А. Трапезникова РАН",
            "start_pos": 38
          }
        }
      ]
    },
    {
      "id": 1060,
      "text": "Она несколько лет развивает сайт «Сурдосервер».",
      "terms": [
        {
          "class": "Application",
          "value": "Сурдосервер",
          "start_pos": 34
        }
      ],
      "relations": []
    },
    {
      "id": 1061,
      "text": "N-грамм это просто последовательности букв из слова.",
      "terms": [
        {
          "class": "Object",
          "value": "N-грамм",
          "start_pos": 0
        }
      ],
      "relations": []
    },
    {
      "id": 1062,
      "text": "Создаются лексические и синтаксические признаки токенов текста.",
      "terms": [
        {
          "class": "Object",
          "value": "лексические",
          "start_pos": 10
        },
        {
          "class": "Object",
          "value": "синтаксические признаки",
          "start_pos": 24
        },
        {
          "class": "Object",
          "value": "токенов",
          "start_pos": 48
        },
        {
          "class": "Object",
          "value": "текста",
          "start_pos": 56
        }
      ],
      "relations": []
    },
    {
      "id": 1063,
      "text": "В качестве классификатора намерений применяем Transformer.",
      "terms": [
        {
          "class": "Method",
          "value": "классификатора",
          "start_pos": 11
        },
        {
          "class": "Method",
          "value": "Transformer",
          "start_pos": 46
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "классификатора",
            "start_pos": 11
          },
          "predicate": "includes",
          "term2": {
            "class": "Method",
            "value": "Transformer",
            "start_pos": 46
          }
        }
      ]
    },
    {
      "id": 1064,
      "text": "В 1966 году Джозефом Вейценбаумом был создан виртуальный собеседник ELIZA, который стал первым успешным примером реализации чат-бота.",
      "terms": [
        {
          "class": "Date",
          "value": "1966 году",
          "start_pos": 2
        },
        {
          "class": "Person",
          "value": "Джозефом Вейценбаумом",
          "start_pos": 12
        },
        {
          "class": "Application",
          "value": "ELIZA",
          "start_pos": 68
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "ELIZA",
            "start_pos": 68
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Person",
            "value": "Джозефом Вейценбаумом",
            "start_pos": 12
          }
        },
        {
          "term1": {
            "class": "Date",
            "value": "1966 году",
            "start_pos": 2
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Application",
            "value": "ELIZA",
            "start_pos": 68
          }
        }
      ]
    },
    {
      "id": 1065,
      "text": "Dusha представляет собой самый обширный открытый корпус данных на русском языке, предназначенный для анализа эмоций в речи.",
      "terms": [
        {
          "class": "Dataset",
          "value": "Dusha",
          "start_pos": 0
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 66
        },
        {
          "class": "Task",
          "value": "анализа эмоций",
          "start_pos": 101
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "Dusha",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 66
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "Dusha",
            "start_pos": 0
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализа эмоций",
            "start_pos": 101
          }
        }
      ]
    },
    {
      "id": 1066,
      "text": "В одном из выдающихся решений применялся особый FastText, предварительно обученный на корпусе текстов RuDReC, включающем отзывы на русском языке о медикаментозной продукции.",
      "terms": [
        {
          "class": "Model",
          "value": "FastText",
          "start_pos": 48
        },
        {
          "class": "Dataset",
          "value": "RuDReC",
          "start_pos": 102
        },
        {
          "class": "Lang",
          "value": "русском языке",
          "start_pos": 131
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "RuDReC",
            "start_pos": 102
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "русском языке",
            "start_pos": 131
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "FastText",
            "start_pos": 48
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "RuDReC",
            "start_pos": 102
          }
        }
      ]
    },
    {
      "id": 1067,
      "text": "Набор данных IEMOCAP на английском языке является эталоном для анализа эмоций.",
      "terms": [
        {
          "class": "Dataset",
          "value": "IEMOCAP",
          "start_pos": 13
        },
        {
          "class": "Lang",
          "value": "английском языке",
          "start_pos": 24
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "IEMOCAP",
            "start_pos": 13
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английском языке",
            "start_pos": 24
          }
        }
      ]
    },
    {
      "id": 1068,
      "text": "SentEval был первой известной попыткой системного сопоставления английских векторных представлений предложений, объединяющей лингвистические задачи с практическими применениями.",
      "terms": [
        {
          "class": "Dataset",
          "value": "SentEval",
          "start_pos": 0
        },
        {
          "class": "Lang",
          "value": "английских",
          "start_pos": 64
        },
        {
          "class": "Task",
          "value": "лингвистические задачи",
          "start_pos": 125
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Dataset",
            "value": "SentEval",
            "start_pos": 0
          },
          "predicate": "Language",
          "term2": {
            "class": "Lang",
            "value": "английских",
            "start_pos": 64
          }
        },
        {
          "term1": {
            "class": "Dataset",
            "value": "SentEval",
            "start_pos": 0
          },
          "predicate": "isTrainedForSolving",
          "term2": {
            "class": "Task",
            "value": "лингвистические задачи",
            "start_pos": 125
          }
        }
      ]
    },
    {
      "id": 1069,
      "text": "На данный момент модели ALBERT, RoBERTa и DistilBERT из репозитория Hugging Face пользуются наибольшей популярностью.",
      "terms": [
        {
          "class": "Model",
          "value": "ALBERT",
          "start_pos": 24
        },
        {
          "class": "Model",
          "value": "RoBERTa",
          "start_pos": 32
        },
        {
          "class": "Model",
          "value": "DistilBERT",
          "start_pos": 42
        },
        {
          "class": "Library",
          "value": "Hugging Face",
          "start_pos": 68
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ALBERT",
            "start_pos": 24
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "RoBERTa",
            "start_pos": 32
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 68
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DistilBERT",
            "start_pos": 42
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 68
          }
        }
      ]
    },
    {
      "id": 1070,
      "text": "На сегодняшний день модели ALBERT, RoBERTa и DistilBERT из репозитория Hugging Face наиболее востребованы.",
      "terms": [
        {
          "class": "Model",
          "value": "ALBERT",
          "start_pos": 27
        },
        {
          "class": "Model",
          "value": "RoBERTa",
          "start_pos": 35
        },
        {
          "class": "Model",
          "value": "DistilBERT",
          "start_pos": 45
        },
        {
          "class": "Library",
          "value": "Hugging Face",
          "start_pos": 71
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "ALBERT",
            "start_pos": 27
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 71
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "RoBERTa",
            "start_pos": 35
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 71
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "DistilBERT",
            "start_pos": 45
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 71
          }
        }
      ]
    },
    {
      "id": 1071,
      "text": "Этот подход иллюстрируется применением парафразатора, основанного на \"rut5-base-paraphraser\" из репозитория Hugging Face.",
      "terms": [
        {
          "class": "Model",
          "value": "rut5-base-paraphraser",
          "start_pos": 70
        },
        {
          "class": "Library",
          "value": "Hugging Face",
          "start_pos": 108
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "rut5-base-paraphraser",
            "start_pos": 70
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "Hugging Face",
            "start_pos": 108
          }
        }
      ]
    },
    {
      "id": 1072,
      "text": "SequenceEncoder представляет собой рекуррентную нейронную сеть (RNN), применяемую для анализа последовательностей в данных о транзакциях и кликах.",
      "terms": [
        {
          "class": "Model",
          "value": "SequenceEncoder",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "рекуррентную нейронную сеть",
          "start_pos": 35
        },
        {
          "class": "Model",
          "value": "RNN",
          "start_pos": 64
        },
        {
          "class": "Task",
          "value": "анализа",
          "start_pos": 86
        },
        {
          "class": "Task",
          "value": "последовательностей",
          "start_pos": 94
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "RNN",
            "start_pos": 64
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Model",
            "value": "рекуррентную нейронную сеть",
            "start_pos": 35
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "рекуррентную нейронную сеть",
            "start_pos": 35
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "SequenceEncoder",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "RNN",
            "start_pos": 64
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "SequenceEncoder",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "SequenceEncoder",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "анализа",
            "start_pos": 86
          }
        }
      ]
    },
    {
      "id": 1073,
      "text": "Суть BERT заключается в том, что это предварительно обученная модель, основанная на стеке энкодеров Трансформера.",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 5
        },
        {
          "class": "Model",
          "value": "энкодеров Трансформера",
          "start_pos": 90
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "энкодеров Трансформера",
            "start_pos": 90
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 5
          }
        }
      ]
    },
    {
      "id": 1074,
      "text": "UDPipe представляет собой transition-based архитектуру на основе переходов: она обеспечивает быструю обработку, проходя по всем токенам один раз за линейное время.",
      "terms": [
        {
          "class": "Model",
          "value": "UDPipe",
          "start_pos": 0
        },
        {
          "class": "Model",
          "value": "transition-based",
          "start_pos": 26
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "transition-based",
            "start_pos": 26
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "UDPipe",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 1075,
      "text": "Среди замечательных подходов один из участников предложил использовать BiLSTM с уровнем CRF.",
      "terms": [
        {
          "class": "Model",
          "value": "BiLSTM",
          "start_pos": 71
        },
        {
          "class": "Model",
          "value": "CRF",
          "start_pos": 88
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "CRF",
            "start_pos": 88
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "BiLSTM",
            "start_pos": 71
          }
        }
      ]
    },
    {
      "id": 1076,
      "text": "Один из участников выделил BiLSTM-архитектуру с добавлением слоя CRF в качестве интересного решения.",
      "terms": [
        {
          "class": "Model",
          "value": "BiLSTM-архитектуру",
          "start_pos": 27
        },
        {
          "class": "Model",
          "value": "CRF",
          "start_pos": 65
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "CRF",
            "start_pos": 65
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "BiLSTM-архитектуру",
            "start_pos": 27
          }
        }
      ]
    },
    {
      "id": 1077,
      "text": "Появление модели BERT в 2018 году отметило своеобразный поворотный пункт в прогрессе развития моделей обработки естественного языка (NLP).",
      "terms": [
        {
          "class": "Model",
          "value": "BERT",
          "start_pos": 17
        },
        {
          "class": "Date",
          "value": "2018 году",
          "start_pos": 24
        },
        {
          "class": "Model",
          "value": "моделей обработки естественного языка",
          "start_pos": 94
        },
        {
          "class": "Science",
          "value": "NLP",
          "start_pos": 133
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Date",
            "value": "2018 году",
            "start_pos": 24
          },
          "predicate": "isDateOf",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "моделей обработки естественного языка",
            "start_pos": 94
          },
          "predicate": "includes",
          "term2": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 17
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "BERT",
            "start_pos": 17
          },
          "predicate": "isUsedIn",
          "term2": {
            "class": "Science",
            "value": "NLP",
            "start_pos": 133
          }
        }
      ]
    },
    {
      "id": 1078,
      "text": "Голосовые ассистенты (ГА, IVA) распознают намерения пользователей и выполняют указания.",
      "terms": [
        {
          "class": "Application",
          "value": "Голосовые ассистенты",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "ГА",
          "start_pos": 22
        },
        {
          "class": "Application",
          "value": "IVA",
          "start_pos": 26
        },
        {
          "class": "Object",
          "value": "намерения",
          "start_pos": 42
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "ГА",
            "start_pos": 22
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Голосовые ассистенты",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "IVA",
            "start_pos": 26
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Голосовые ассистенты",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 1079,
      "text": "Голосовые виртуальные помощники (ГВП, ИВА) распознают намерения пользователей и выполняют указания.",
      "terms": [
        {
          "class": "Application",
          "value": "Голосовые виртуальные помощники",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "ГВП",
          "start_pos": 33
        },
        {
          "class": "Application",
          "value": "ИВА",
          "start_pos": 38
        },
        {
          "class": "Object",
          "value": "намерения",
          "start_pos": 54
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "ГВП",
            "start_pos": 33
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Голосовые виртуальные помощники",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ИВА",
            "start_pos": 38
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Голосовые виртуальные помощники",
            "start_pos": 0
          }
        }
      ]
    },
    {
      "id": 1080,
      "text": "На сегодняшний день мы поделимся информацией о нашем вкладе в разработку и внедрение корпоративной интеллектуальной информационно-поисковой системы (КИИПС) для НПО \"Энергомаш\".",
      "terms": [
        {
          "class": "Application",
          "value": "корпоративной интеллектуальной информационно-поисковой системы",
          "start_pos": 85
        },
        {
          "class": "Application",
          "value": "КИИПС",
          "start_pos": 149
        },
        {
          "class": "Organization",
          "value": "НПО \"Энергомаш\"",
          "start_pos": 160
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "корпоративной интеллектуальной информационно-поисковой системы",
            "start_pos": 85
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "НПО \"Энергомаш\"",
            "start_pos": 160
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "КИИПС",
            "start_pos": 149
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "НПО \"Энергомаш\"",
            "start_pos": 160
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "КИИПС",
            "start_pos": 149
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "корпоративной интеллектуальной информационно-поисковой системы",
            "start_pos": 85
          }
        }
      ]
    },
    {
      "id": 1081,
      "text": "Objective Revision Evaluation Service (ORES), разработанная Wikimedia Foundation, проверяет наличие спама.",
      "terms": [
        {
          "class": "Application",
          "value": "Objective Revision Evaluation Service",
          "start_pos": 0
        },
        {
          "class": "Application",
          "value": "ORES",
          "start_pos": 39
        },
        {
          "class": "Organization",
          "value": "Wikimedia Foundation",
          "start_pos": 60
        },
        {
          "class": "Task",
          "value": "наличие спама",
          "start_pos": 92
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 0
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "наличие спама",
            "start_pos": 92
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 39
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "наличие спама",
            "start_pos": 92
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 39
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 0
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 0
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Wikimedia Foundation",
            "start_pos": 60
          }
        },
        {
          "term1": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 39
          },
          "predicate": "hasAuthor",
          "term2": {
            "class": "Organization",
            "value": "Wikimedia Foundation",
            "start_pos": 60
          }
        }
      ]
    },
    {
      "id": 1082,
      "text": "Сервис Objective Revision Evaluation Service (ORES) будет производить анализ всех изменений с целью выявления признаков спама или троллинга.",
      "terms": [
        {
          "class": "Application",
          "value": "Objective Revision Evaluation Service",
          "start_pos": 7
        },
        {
          "class": "Application",
          "value": "ORES",
          "start_pos": 46
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Application",
            "value": "ORES",
            "start_pos": 46
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Application",
            "value": "Objective Revision Evaluation Service",
            "start_pos": 7
          }
        }
      ]
    },
    {
      "id": 1083,
      "text": "Для этого использовалась точная настройка (fine-tune ) предварительно обученной модели трансформера от HuggingFace на данных, собранных с платформы Genius.",
      "terms": [
        {
          "class": "Method",
          "value": "точная настройка",
          "start_pos": 25
        },
        {
          "class": "Method",
          "value": "fine-tune",
          "start_pos": 43
        },
        {
          "class": "Model",
          "value": "модели трансформера",
          "start_pos": 80
        },
        {
          "class": "Library",
          "value": "HuggingFace",
          "start_pos": 103
        },
        {
          "class": "Application",
          "value": "Genius",
          "start_pos": 148
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "модели трансформера",
            "start_pos": 80
          },
          "predicate": "isIncludedIn",
          "term2": {
            "class": "Library",
            "value": "HuggingFace",
            "start_pos": 103
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "fine-tune",
            "start_pos": 43
          },
          "predicate": "isAlternativeNameFor",
          "term2": {
            "class": "Method",
            "value": "точная настройка",
            "start_pos": 25
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "точная настройка",
            "start_pos": 25
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "модели трансформера",
            "start_pos": 80
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "fine-tune",
            "start_pos": 43
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "модели трансформера",
            "start_pos": 80
          }
        }
      ]
    },
    {
      "id": 1084,
      "text": "Я расскажу вам о проведении бинарного анализа тональности русскоязычных текстов с использованием сверточной нейронной сети, векторные представления слов для которой были созданы с использованием обученной модели Word2Vec.",
      "terms": [
        {
          "class": "Method",
          "value": "бинарного анализа тональности",
          "start_pos": 28
        },
        {
          "class": "Object",
          "value": "русскоязычных текстов",
          "start_pos": 58
        },
        {
          "class": "Model",
          "value": "сверточной нейронной сети",
          "start_pos": 97
        },
        {
          "class": "Object",
          "value": "векторные представления слов",
          "start_pos": 124
        },
        {
          "class": "Model",
          "value": "Word2Vec",
          "start_pos": 212
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "бинарного анализа тональности",
            "start_pos": 28
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "русскоязычных текстов",
            "start_pos": 58
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "бинарного анализа тональности",
            "start_pos": 28
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "сверточной нейронной сети",
            "start_pos": 97
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "бинарного анализа тональности",
            "start_pos": 28
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "Word2Vec",
            "start_pos": 212
          }
        }
      ]
    },
    {
      "id": 1085,
      "text": "Я представлю вам анализ тональности русскоязычных текстов с применением сверточной нейронной сети, используя векторные представления слов, полученные из обученной модели Word2Vec.",
      "terms": [
        {
          "class": "Method",
          "value": "анализ тональности",
          "start_pos": 17
        },
        {
          "class": "Object",
          "value": "русскоязычных текстов",
          "start_pos": 36
        },
        {
          "class": "Model",
          "value": "сверточной нейронной сети",
          "start_pos": 72
        },
        {
          "class": "Object",
          "value": "векторные представления слов",
          "start_pos": 109
        },
        {
          "class": "Model",
          "value": "Word2Vec",
          "start_pos": 170
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "анализ тональности",
            "start_pos": 17
          },
          "predicate": "isAppliedTo",
          "term2": {
            "class": "Object",
            "value": "русскоязычных текстов",
            "start_pos": 36
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "анализ тональности",
            "start_pos": 17
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "сверточной нейронной сети",
            "start_pos": 72
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "анализ тональности",
            "start_pos": 17
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "Word2Vec",
            "start_pos": 170
          }
        }
      ]
    },
    {
      "id": 1086,
      "text": "Давайте обратимся к этой статье, где была исследована классификация тональности с использованием модели Word2vec в архитектуре CNN.",
      "terms": [
        {
          "class": "Task",
          "value": "классификация тональности",
          "start_pos": 54
        },
        {
          "class": "Model",
          "value": "Word2vec",
          "start_pos": 104
        },
        {
          "class": "Method",
          "value": "CNN",
          "start_pos": 127
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 127
          },
          "predicate": "solves",
          "term2": {
            "class": "Task",
            "value": "классификация тональности",
            "start_pos": 54
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "Word2vec",
            "start_pos": 104
          },
          "predicate": "isUsedForSolving",
          "term2": {
            "class": "Task",
            "value": "классификация тональности",
            "start_pos": 54
          }
        },
        {
          "term1": {
            "class": "Method",
            "value": "CNN",
            "start_pos": 127
          },
          "predicate": "uses",
          "term2": {
            "class": "Model",
            "value": "Word2vec",
            "start_pos": 104
          }
        }
      ]
    },
    {
      "id": 1087,
      "text": "В этом случае эмбеддинги fastText, обученные на ruscorpora, продемонстрировали более высокую эффективность по сравнению с теми, которые были обучены на корпусе araneum.",
      "terms": [
        {
          "class": "Model",
          "value": "fastText",
          "start_pos": 25
        },
        {
          "class": "Dataset",
          "value": "ruscorpora",
          "start_pos": 48
        },
        {
          "class": "Dataset",
          "value": "araneum",
          "start_pos": 160
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "fastText",
            "start_pos": 25
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "ruscorpora",
            "start_pos": 48
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "fastText",
            "start_pos": 25
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "araneum",
            "start_pos": 160
          }
        }
      ]
    },
    {
      "id": 1088,
      "text": "В процессе обучения модели text-davinci-003 применяются наборы данных текстов и программного кода, собранные OpenAI к концу 2021 года.",
      "terms": [
        {
          "class": "Model",
          "value": "text-davinci-003",
          "start_pos": 27
        },
        {
          "class": "Dataset",
          "value": "наборы данных текстов и программного кода",
          "start_pos": 56
        },
        {
          "class": "Organization",
          "value": "OpenAI",
          "start_pos": 109
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Model",
            "value": "text-davinci-003",
            "start_pos": 27
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "наборы данных текстов и программного кода",
            "start_pos": 56
          }
        }
      ]
    },
    {
      "id": 1088,
      "text": "Давайте проверим эффективность этого подхода, обучив модель на наборе данных California Housing.",
      "terms": [
        {
          "class": "Method",
          "value": "подхода",
          "start_pos": 37
        },
        {
          "class": "Model",
          "value": "модель",
          "start_pos": 53
        },
        {
          "class": "Dataset",
          "value": "California Housing",
          "start_pos": 77
        }
      ],
      "relations": [
        {
          "term1": {
            "class": "Method",
            "value": "подхода",
            "start_pos": 37
          },
          "predicate": "isUsedForTraining",
          "term2": {
            "class": "Model",
            "value": "модель",
            "start_pos": 53
          }
        },
        {
          "term1": {
            "class": "Model",
            "value": "модель",
            "start_pos": 53
          },
          "predicate": "isTrainedOn",
          "term2": {
            "class": "Dataset",
            "value": "California Housing",
            "start_pos": 77
          }
        }
      ]
    }
  ]
}